  DevExpress.Drawing.DescriptionsRes.resources - Embedded, ContainedInManifestFile, 
  DevExpress.Drawing.PropertyNamesRes.resources - Embedded, ContainedInManifestFile, 
  DevExpress.Drawing.Printing.Internal.PaperKind.xml - Embedded, ContainedInManifestFile, 
  DevExpress.Drawing.Internal.Text.LineBreak.LineBreakClasses.bin - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly DevExpress.Drawing.v24.1, Version=24.1.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly DevExpress.Data.v24.1, Version=24.1.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Struct DevExpress.Utils.FontIconsStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Utils.FontIconsStyle Latest = 0 : Public, Static, Literal, HasDefault
    DevExpress.Utils.FontIconsStyle Win10 = 1 : Public, Static, Literal, HasDefault
Class DevExpress.Utils.FontIconsResolver: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Fields:
    System.String fontIconsFamily = dx-font-icons : Public, Static, Literal, HasDefault
  Properties:
    DevExpress.Utils.FontIconsStyle IconsStyle 'get set' : 
  Methods:
    get_IconsStyle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_IconsStyle(FontIconsStyle): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ResolveFontName(String): PrivateScope, Assembly, Static, HideBySig
Struct DevExpress.Utils.Svg.SvgImageRenderingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Utils.Svg.SvgImageRenderingMode Default = 0 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Svg.SvgImageRenderingMode HighSpeed = 1 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Svg.SvgImageRenderingMode HighQuality = 2 : Public, Static, Literal, HasDefault
Class DevExpress.Utils.Svg.SvgBitmap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Utils.Svg.SvgImage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Utils.Svg.ISvgBitmap
  Fields:
    System.Object DisabledTag : Public, Static
    System.Drawing.Image bufferedImage : Assembly, Static
    DevExpress.Drawing.DXBitmap bufferedDXImage : Assembly, Static
  Properties:
    DevExpress.Utils.Svg.SvgImageRenderingMode SvgImageRenderingMode 'get set' : 
    System.Collections.Generic.List`1[DevExpress.Utils.Svg.SvgElementWrapper] Elements 'get set' : 
    Double Scale 'get set' : 
    DevExpress.Utils.Svg.SvgImage SvgImage 'get ' : 
    Double Width 'get ' : 
    Double Height 'get ' : 
    System.Drawing.PointF DrawingOffset 'get set' : 
    System.Collections.Generic.IEnumerable`1[DevExpress.Utils.Svg.SvgElementWrapper] RootElements 'get set' : 
  Methods:
    get_SvgImageRenderingMode(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_SvgImageRenderingMode(SvgImageRenderingMode): PrivateScope, Public, Static, HideBySig, SpecialName
    ForceHighSpeedRendering(Action): PrivateScope, Public, Static, HideBySig
    ForceHighSpeedRendering(Func`1): PrivateScope, Public, Static, HideBySig
    FromFile(String): PrivateScope, Public, Static, HideBySig
    FromStream(Stream): PrivateScope, Public, Static, HideBySig
    Create(SvgImage): PrivateScope, Public, Static, HideBySig
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
    set_Elements(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Public, HideBySig, SpecialName
    ResetRenderedImage(Boolean): PrivateScope, Public, HideBySig
    WrapElement(SvgElement): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, HideBySig
    Create(Size): PrivateScope, Public, Static, HideBySig
    get_SvgImage(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_DrawingOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawingOffset(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_RootElements(): PrivateScope, Assembly, HideBySig, SpecialName
    set_RootElements(IEnumerable`1): PrivateScope, Assembly, HideBySig, SpecialName
    ClearCache(Boolean): PrivateScope, Public, HideBySig
    DisposeBufferedImage(): PrivateScope, Public, Static, HideBySig
    Render(Size, ISvgPaletteProvider, DefaultBoolean(Optional, HasDefault), DefaultBoolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    RenderDXImage(Size, ISvgPaletteProvider(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Render(ISvgPaletteProvider, Double, DefaultBoolean(Optional, HasDefault), DefaultBoolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    RenderToGraphics(Graphics, ISvgPaletteProvider(Optional, HasDefault), Double(Optional, HasDefault), DefaultBoolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    RenderToDXGraphics(IDXGraphics, ISvgPaletteProvider(Optional, HasDefault), Double(Optional, HasDefault), DefaultBoolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    RenderToSvgGraphics(ISvgGraphics, ISvgPaletteProvider(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetBounds(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    HitTest(PointF, Double): PrivateScope, Public, HideBySig
Class DevExpress.Utils.Svg.SvgElementWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Scale 'get set' : 
    DevExpress.Utils.Svg.SvgElement Element 'get set' : 
    System.Collections.Generic.List`1[DevExpress.Utils.Svg.SvgElementWrapper] Childs 'get ' : 
    Boolean IsDisplay 'get ' : 
  Methods:
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Assembly, HideBySig, SpecialName
    get_Element(): PrivateScope, Public, HideBySig, SpecialName
    get_Childs(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisplay(): PrivateScope, Public, HideBySig, SpecialName
    GetBounds(Matrix(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CheckPathData(GraphicsPath): PrivateScope, Assembly, HideBySig
    Render(ISvgGraphics, ISvgPaletteProvider, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBrush(ISvgGraphics, SvgElement, Double, String, Nullable`1, Boolean, IDxGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStrokeBrush(ISvgGraphics, SvgElement, Double, String, Nullable`1, IDxGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ChangeColorBrightness(Color, Double): PrivateScope, Public, Static, HideBySig
    GetPen(ISvgGraphics, Double): PrivateScope, Public, HideBySig
    GetColor(ISvgPaletteProvider, String, Nullable`1, Nullable`1, Boolean): PrivateScope, Public, HideBySig
    GetPath(ISvgGraphics, Double): PrivateScope, Public, HideBySig
    GetPath(Double): PrivateScope, Public, HideBySig
    ScaleValue(Double, Double): PrivateScope, Public, HideBySig
Class DevExpress.Utils.Svg.SvgLineWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.SvgPathWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Svg.ISvgPathSegmentWrapperFactory SvgPathSegmentWrapperFactory 'get ' : 
  Methods:
    get_SvgPathSegmentWrapperFactory(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Utils.Svg.SvgCircleWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.SvgEllipseWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.SvgPolygonWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.SvgPolylineWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.SvgRectangleWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.SvgGroupWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Render(ISvgGraphics, ISvgPaletteProvider, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgTransformGroupWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Render(ISvgGraphics, ISvgPaletteProvider, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgRootWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Render(ISvgGraphics, ISvgPaletteProvider, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgDefinitionsWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Render(ISvgGraphics, ISvgPaletteProvider, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgMaskWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.SvgUseWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Svg.SvgElementWrapper ReferencedElement 'get ' : 
  Methods:
    get_ReferencedElement(): PrivateScope, Assembly, HideBySig, SpecialName
Class DevExpress.Utils.Svg.SvgClipPathWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Render(ISvgGraphics, ISvgPaletteProvider, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgGradientWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Render(ISvgGraphics, ISvgPaletteProvider, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgLinearGradientWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgGradientWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetBrush(ISvgGraphics, SvgElement, Double, String, Nullable`1, Boolean, IDxGraphicsPath): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgRadialGradientWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgGradientWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetBrush(ISvgGraphics, SvgElement, Double, String, Nullable`1, Boolean, IDxGraphicsPath): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgContentWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get ' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Utils.Svg.SvgTspanWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgTextWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.SvgTextWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Svg.SvgText Text 'get ' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    GetFontFamily(Boolean, String): PrivateScope, Public, Static, HideBySig
    GetFont(ISvgGraphics): PrivateScope, Assembly, HideBySig
Class DevExpress.Utils.Svg.TextPart: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Utils.Svg.SvgTextWrapper): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Utils.Svg.TextPart, DevExpress.Utils.Svg.SvgTextWrapper): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF Offset 'get set' : 
    DevExpress.Utils.Svg.SvgTextWrapper Element 'get set' : 
    Single LetterSpacingAdjust 'get set' : 
    Int32 CharCount 'get set' : 
    DevExpress.Utils.Svg.TextPart Parent 'get set' : 
    Single StartOffsetAdjust 'get set' : 
    Double XAnchor 'get set' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Element(): PrivateScope, Public, HideBySig, SpecialName
    set_Element(SvgTextWrapper): PrivateScope, Public, HideBySig, SpecialName
    get_LetterSpacingAdjust(): PrivateScope, Public, HideBySig, SpecialName
    set_LetterSpacingAdjust(Single): PrivateScope, Public, HideBySig, SpecialName
    get_CharCount(): PrivateScope, Public, HideBySig, SpecialName
    set_CharCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(TextPart): PrivateScope, Public, HideBySig, SpecialName
    get_StartOffsetAdjust(): PrivateScope, Public, HideBySig, SpecialName
    set_StartOffsetAdjust(Single): PrivateScope, Public, HideBySig, SpecialName
    get_XAnchor(): PrivateScope, Public, HideBySig, SpecialName
    set_XAnchor(Double): PrivateScope, Public, HideBySig, SpecialName
    GetPath(ISvgGraphics): PrivateScope, Public, HideBySig
    AddStringToPath(String, ISvgGraphics): PrivateScope, Public, HideBySig
Class DevExpress.Utils.Svg.SvgEmbeddedImageWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgElementWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.GraphicsPathCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.Dictionary`2[System.Double,DevExpress.Utils.Drawing.IDxGraphicsPath]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface DevExpress.Utils.Svg.ISvgElementWrapperFactory: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Wrap(SvgElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Utils.Svg.SvgElementWrapperFactory: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Utils.Svg.ISvgElementWrapperFactory
  Fields:
    DevExpress.Utils.Svg.ISvgElementWrapperFactory Default : Public, Static, InitOnly
Class DevExpress.Utils.Svg.SvgSkinLinearGradientWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgLinearGradientWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetBrush(ISvgGraphics, SvgElement, Double, String, Nullable`1, Boolean, IDxGraphicsPath): PrivateScope, Public, Virtual, HideBySig
Interface DevExpress.Utils.Svg.ISvgGraphics: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsGdiPlusGraphics 'get ' : 
    System.Drawing.Drawing2D.SmoothingMode SmoothingMode 'get set' : 
    DevExpress.Utils.Drawing.IDxMatrix DxTransform 'get set' : 
  Methods:
    get_IsGdiPlusGraphics(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SmoothingMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SmoothingMode(SmoothingMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    DrawPath(DXPen, IDxGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillPath(DXBrush, IDxGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawLine(DXPen, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawImage(DXImage, RectangleF, RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Save(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Restore(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IntersectClip(IDxGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TranslateTransform(Single, Single, MatrixOrder(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ScaleTransform(Single, Single, MatrixOrder(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_DxTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DxTransform(IDxMatrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MeasureString(String, DXFont): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreatePath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Utils.Svg.SvgGraphics: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Graphics): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Utils.Svg.ISvgGraphics
    System.IDisposable
  Properties:
    Boolean IsGdiPlusGraphics 'get ' : 
    System.Drawing.Drawing2D.SmoothingMode SmoothingMode 'get set' : 
    DevExpress.Utils.Drawing.IDxMatrix DxTransform 'get set' : 
  Methods:
    CreatePath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateMatrix(): PrivateScope, Public, HideBySig
    CreateFont(String, Single, FontStyle, GraphicsUnit): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsGdiPlusGraphics(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SmoothingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SmoothingMode(SmoothingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DrawPath(DXPen, IDxGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPath(DXBrush, IDxGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ScaleTransform(Single, Single, MatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TranslateTransform(Single, Single, MatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IntersectClip(IDxGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DxTransform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DxTransform(IDxMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Save(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Restore(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Utils.Svg.SvgGraphicsWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Utils.Svg.ISvgGraphics): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DevExpress.Utils.Svg.ISvgGraphics SvgGraphics 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SvgGraphics(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Utils.Svg.SvgImageCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.Dictionary`2[System.String,DevExpress.Utils.Svg.SvgBitmap]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Utils.Svg.SvgRenderedImageCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.Dictionary`2[DevExpress.Utils.Svg.SvgImageKey,System.IDisposable]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    TryGetValue(String, Size, ISvgPaletteProvider, Image&(Out)): PrivateScope, Public, HideBySig
    TryGetValue(String, Size, ISvgPaletteProvider, DXImage&(Out)): PrivateScope, Public, HideBySig
    TryGetValue(SvgImageKey, Image&(Out)): PrivateScope, Public, HideBySig
    TryGetValue(SvgImageKey, DXImage&(Out)): PrivateScope, Public, HideBySig
Class DevExpress.Utils.Svg.SvgImageKey: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String, System.Drawing.Size, DevExpress.Utils.Design.ISvgPaletteProvider, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Utils.Svg.SvgImageKey]
  Methods:
    Equals(SvgImageKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgPathSegmentWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Utils.Svg.SvgPathSegment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Svg.SvgPathSegment Segment 'get ' : 
  Methods:
    get_Segment(): PrivateScope, Public, HideBySig, SpecialName
    AddToPath(IDxGraphicsPath, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScaleValue(SvgPoint, Double): PrivateScope, Public, HideBySig
Class DevExpress.Utils.Svg.SvgPathMoveToSegmentWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgPathSegmentWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgPathSegment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddToPath(IDxGraphicsPath, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgPathCloseSegmentWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgPathSegmentWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgPathSegment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddToPath(IDxGraphicsPath, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgPathLineToSegmentWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgPathSegmentWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgPathSegment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Svg.SvgPathLineToSegment Line 'get ' : 
  Methods:
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    AddToPath(IDxGraphicsPath, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgPathCurveToCubicSegmentWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgPathSegmentWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgPathSegment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Svg.SvgPathCurveToCubicSegment CurveToCubicSegment 'get ' : 
  Methods:
    get_CurveToCubicSegment(): PrivateScope, Public, HideBySig, SpecialName
    AddToPath(IDxGraphicsPath, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgPathCurveToQuadraticSegmentWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgPathSegmentWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgPathSegment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Svg.SvgPathCurveToQuadraticSegment CurveToQuadraticSegment 'get ' : 
  Methods:
    get_CurveToQuadraticSegment(): PrivateScope, Public, HideBySig, SpecialName
    AddToPath(IDxGraphicsPath, Double): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Svg.SvgPathArcSegmentWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Svg.SvgPathSegmentWrapper
    Void .ctor(DevExpress.Utils.Svg.SvgPathSegment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Svg.SvgPathArcSegment ArcSegment 'get ' : 
  Methods:
    get_ArcSegment(): PrivateScope, Public, HideBySig, SpecialName
    AddToPath(IDxGraphicsPath, Double): PrivateScope, Public, Virtual, HideBySig
Interface DevExpress.Utils.Svg.ISvgPathSegmentWrapperFactory: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Wrap(SvgPathSegment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Utils.Svg.SvgPathSegmentWrapperFactory: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Utils.Svg.ISvgPathSegmentWrapperFactory
  Fields:
    DevExpress.Utils.Svg.ISvgPathSegmentWrapperFactory Default : Public, Static, InitOnly
  Methods:
    Wrap(SvgPathSegment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Utils.Drawing.GdiPath: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXGraphicsPath
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF[], Byte[], System.Drawing.Drawing2D.FillMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Utils.Drawing.IDxGraphicsPath
  Properties:
    System.Drawing.Drawing2D.GraphicsPath Path 'get set' : 
    DevExpress.Utils.Drawing.IDirectXPath DirectXPath 'get set' : 
  Methods:
    get_Path(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Path(GraphicsPath): PrivateScope, Public, HideBySig, SpecialName
    GetBounds(IDxMatrix, Pen): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetBounds(IDxMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsOutlineVisible(PointF, Pen): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsOutlineVisible(Single, Single, Pen): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DirectXPath(): PrivateScope, Public, HideBySig, SpecialName
    set_DirectXPath(IDirectXPath): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Utils.Text.HyperlinkSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color Color 'get set' : 
    Boolean Underline 'get set' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Underline(): PrivateScope, Public, HideBySig, SpecialName
    set_Underline(Boolean): PrivateScope, Public, HideBySig, SpecialName
Interface DevExpress.Utils.Text.IStringImageProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetImage(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Utils.Text.IStringSvgImageProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    DevExpress.Utils.Text.IStringImageProvider
  Methods:
    GetImage(String, ISvgPaletteProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Utils.Text.StringInfoBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.List`1[DevExpress.Utils.Text.Internal.StringBlock], System.Collections.Generic.List`1[System.Drawing.Rectangle], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean simpleString : Assembly
  Properties:
    DevExpress.Utils.Text.HyperlinkSettings HyperlinkSettings 'get set' : 
    Boolean AllowBaselineAlignment 'get set' : 
    Boolean AllowPartiallyVisibleRows 'get set' : 
    Boolean DisableWrapNonFitText 'get set' : 
    System.Drawing.Rectangle OriginalBounds 'get set' : 
    Boolean SimpleString 'get ' : 
    System.Object Context 'get set' : 
    Boolean RoundTextHeight 'get set' : 
    Boolean RightToLeft 'get ' : 
    DevExpress.Utils.WordWrap WordWrap 'get ' : 
    DevExpress.Utils.VertAlignment VAlignment 'get ' : 
    DevExpress.Utils.HorzAlignment HAlignment 'get ' : 
    System.Drawing.Font Font 'get ' : 
    DevExpress.Drawing.DXFont DXFont 'get ' : 
    Boolean IsEmpty 'get ' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    System.String SourceString 'get ' : 
    System.Collections.Generic.List`1[DevExpress.Utils.Text.Internal.StringBlock] Blocks 'get ' : 
    System.Collections.Generic.List`1[System.Drawing.Rectangle] BlocksBounds 'get ' : 
    System.Collections.Generic.List`1[System.Drawing.Rectangle] LinesBounds 'get set' : 
    Boolean HasScripts 'get set' : 
    Boolean HasImages 'get set' : 
    Boolean IsCropped 'get set' : 
  Methods:
    get_HyperlinkSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_HyperlinkSettings(HyperlinkSettings): PrivateScope, Public, HideBySig, SpecialName
    get_AllowBaselineAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowBaselineAlignment(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowPartiallyVisibleRows(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowPartiallyVisibleRows(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DisableWrapNonFitText(): PrivateScope, Public, HideBySig, SpecialName
    set_DisableWrapNonFitText(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalBounds(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginalBounds(Rectangle): PrivateScope, Public, HideBySig, SpecialName
    get_SimpleString(): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
    set_Context(Object): PrivateScope, Public, HideBySig, SpecialName
    get_RoundTextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_RoundTextHeight(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RightToLeft(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WordWrap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_VAlignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HAlignment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Font(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DXFont(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetStringFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDXStringFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIsEllipsisTrimming(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Assign(List`1, List`1, String): PrivateScope, Public, HideBySig
    Assign(StringInfoBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLinkByPoint(Point): PrivateScope, Public, HideBySig
    SetLinkColor(Point, Color): PrivateScope, Public, HideBySig
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    UpdateXLocation(HorzAlignment, Rectangle): PrivateScope, Assembly, HideBySig
    GetLineBlockCount(Int32): PrivateScope, Assembly, HideBySig
    GetBlocksWidth(Int32, Int32): PrivateScope, Assembly, HideBySig
    SetLocation(Point): PrivateScope, Public, HideBySig
    SetLocation(Int32, Int32): PrivateScope, Public, HideBySig
    Offset(Int32, Int32): PrivateScope, Public, HideBySig
    SetBounds(Rectangle): PrivateScope, Public, HideBySig
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceString(): PrivateScope, Public, HideBySig, SpecialName
    get_Blocks(): PrivateScope, Public, HideBySig, SpecialName
    get_BlocksBounds(): PrivateScope, Public, HideBySig, SpecialName
    get_LinesBounds(): PrivateScope, Public, HideBySig, SpecialName
    set_LinesBounds(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_HasScripts(): PrivateScope, Public, HideBySig, SpecialName
    set_HasScripts(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasImages(): PrivateScope, Public, HideBySig, SpecialName
    set_HasImages(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsCropped(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCropped(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Utils.Text.StringPainterBase`3[TStringInfo,TStringCalculateArgs,TTextProcessInfo]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TStringInfo, DevExpress.Utils.Text.StringInfoBase
  Type parameter: TStringCalculateArgs, DevExpress.Utils.Text.StringCalculateArgsBase
  Type parameter: TTextProcessInfo, DevExpress.Utils.Text.TextProcessInfoBase
  Fields:
    Single AscentHeightMultiplier : Public, Static
  Methods:
    CalcXByAlignment(Rectangle, Int32, HorzAlignment): PrivateScope, Assembly, Static, HideBySig
    IsValidSize(Rectangle): PrivateScope, Public, Static, HideBySig
    Parse(StringInfoBase, String, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CalcBlocksInnerBounds(StringInfoBase): PrivateScope, Public, HideBySig
    Calculate(TStringCalculateArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateBoundsByAppearance(StringInfoBase): PrivateScope, Public, HideBySig
    SetModifierFontInfo(TStringCalculateArgs, Font, DXFont, StringBlockTextModifierInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalcTextInnerBounds(StringBlock, Rectangle): PrivateScope, Public, HideBySig
    RemoveFormat(String, Boolean): PrivateScope, Public, HideBySig
Class DevExpress.Utils.Text.StringCalculateArgsBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Drawing.Rectangle, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single DpiScaleFactor 'get set' : 
    DevExpress.Utils.Text.HyperlinkSettings HyperlinkSettings 'get set' : 
    System.Drawing.Color HyperlinkColor 'get set' : 
    Boolean RoundTextHeight 'get set' : 
    Boolean AllowSimpleString 'get set' : 
    Boolean AllowBaselineAlignment 'get set' : 
    Boolean AllowPartiallyVisibleRows 'get set' : 
    Boolean DisableWrapNonFitText 'get set' : 
    Boolean AllowNewLineSymbols 'get set' : 
    System.String Text 'get ' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    System.Object Context 'get ' : 
  Methods:
    get_DpiScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_DpiScaleFactor(Single): PrivateScope, Public, HideBySig, SpecialName
    get_HyperlinkSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_HyperlinkSettings(HyperlinkSettings): PrivateScope, Public, HideBySig, SpecialName
    get_HyperlinkColor(): PrivateScope, Public, HideBySig, SpecialName
    set_HyperlinkColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_RoundTextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_RoundTextHeight(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowSimpleString(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowSimpleString(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowBaselineAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowBaselineAlignment(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowPartiallyVisibleRows(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowPartiallyVisibleRows(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DisableWrapNonFitText(): PrivateScope, Public, HideBySig, SpecialName
    set_DisableWrapNonFitText(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowNewLineSymbols(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowNewLineSymbols(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Utils.Text.StringParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean ApplyScaleFactorOnInlineFontSize : Assembly, Static
  Properties:
    Boolean KeepFontStyle 'get set' : 
    Single DpiScaleFactor 'get set' : 
  Methods:
    get_KeepFontStyle(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_KeepFontStyle(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DpiScaleFactor(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DpiScaleFactor(Single): PrivateScope, Assembly, Static, HideBySig, SpecialName
    RegisterColorConverter(TypeConverter): PrivateScope, Public, Static, HideBySig
    ParseCommand(Int32&, String): PrivateScope, Public, Static, HideBySig
    Parse(Single, String, Boolean): PrivateScope, Public, Static, HideBySig
    Parse(Color, Single, String, Boolean): PrivateScope, Public, Static, HideBySig
    Parse(Color, Color, Single, String, Boolean): PrivateScope, Public, Static, HideBySig
    CreateBlock(): PrivateScope, Public, Static, HideBySig
    Parse(Color, Color, HyperlinkSettings, Single, String, Boolean): PrivateScope, Public, Static, HideBySig
    Parse(Color, Color, HyperlinkSettings, Single, DXFontStyle, String, Boolean): PrivateScope, Public, Static, HideBySig
    Match(List`1, String, Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class DevExpress.Utils.Text.TextProcessInfoBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object Context : Public
    DevExpress.Utils.Text.StringInfoBase Info : Public
    DevExpress.Utils.Text.Internal.StringBlock Block : Public
    DevExpress.Utils.Text.Internal.StringBlock LastBlock : Public
    Boolean AllowMultiLine : Public
    System.Drawing.Rectangle Bounds : Public
    System.Drawing.Point End : Public
    Int32 LineHeight : Public
    Int32 LineNumber : Public
    Boolean IsNewLine : Public
    System.Drawing.Point CurrentPosition : Public
  Properties:
    Int32 CurrentX 'get set' : 
    Int32 CurrentY 'get set' : 
    Boolean RoundTextHeight 'get set' : 
    Boolean IsCropped 'get set' : 
  Methods:
    get_CurrentX(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentY(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RoundTextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_RoundTextHeight(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCropped(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCropped(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
Class DevExpress.Utils.Text.ResourceImageProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Text.ResourceImageProvider Current 'get ' : 
    System.Resources.ResourceManager ResourceManager 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ResourceManager(): PrivateScope, Public, HideBySig, SpecialName
    set_ResourceManager(ResourceManager): PrivateScope, Public, HideBySig, SpecialName
    GetImage(Object, String): PrivateScope, Public, HideBySig
    GetImage(Object, String, Single, Size): PrivateScope, Public, HideBySig
Struct DevExpress.Utils.Text.Internal.HtmlStringCommand: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Utils.Text.Internal.HtmlStringCommand Unknown = 0 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Br = 1 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand B = 2 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand I = 3 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand U = 4 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand S = 5 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand R = 6 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Nbsp = 7 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Sub = 8 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Sup = 9 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Href = 10 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand ForeColor = 11 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand BackColor = 12 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Size = 13 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Image = 14 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Font = 15 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand P = 16 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Div = 17 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand A = 18 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Greater = 19 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.HtmlStringCommand Less = 20 : Public, Static, Literal, HasDefault
Class DevExpress.Utils.Text.Internal.StringCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsValid 'get ' : 
    System.String Command 'get set' : 
    Boolean IsStart 'get ' : 
    Boolean IsEnd 'get ' : 
    Boolean Single 'get set' : 
    Int32 AttributesStartIndex 'get set' : 
    DevExpress.Utils.Text.Internal.HtmlStringCommand Code 'get set' : 
    Boolean IsSeparator 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.String] Attributes 'get set' : 
  Methods:
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_Command(): PrivateScope, Public, HideBySig, SpecialName
    set_Command(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsStart(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnd(): PrivateScope, Public, HideBySig, SpecialName
    SetStart(): PrivateScope, Assembly, HideBySig
    SetEnd(): PrivateScope, Assembly, HideBySig
    get_Single(): PrivateScope, Public, HideBySig, SpecialName
    set_Single(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_AttributesStartIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_AttributesStartIndex(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Code(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Code(HtmlStringCommand): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsSeparator(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(Dictionary`2): PrivateScope, Public, HideBySig, SpecialName
    GetAttribute(String): PrivateScope, Public, HideBySig
    GetAlignAttribute(): PrivateScope, Public, HideBySig
Class DevExpress.Utils.Text.Internal.StringFontSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.HorzAlignment Alignment 'get ' : 
    DevExpress.Drawing.DXFontStyle Style 'get ' : 
    System.Drawing.Color Color 'get ' : 
    System.Drawing.Color BackColor 'get ' : 
    Single Size 'get ' : 
    Boolean IsStyleSet 'get set' : 
    Boolean IsStyleModified 'get set' : 
    Int32 StyleLevel 'get set' : 
    Int32 AlignLevel 'get set' : 
    System.Collections.Generic.List`1[DevExpress.Utils.Text.Internal.StringBlockTextModifierInfo] Modifiers 'get ' : 
    Boolean HasModifiers 'get ' : 
    System.String FontFamily 'get set' : 
  Methods:
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    IsEquals(StringFontSettings): PrivateScope, Public, HideBySig
    get_IsStyleSet(): PrivateScope, Public, HideBySig, SpecialName
    set_IsStyleSet(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsStyleModified(): PrivateScope, Public, HideBySig, SpecialName
    set_IsStyleModified(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_StyleLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_StyleLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AlignLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    AddStyle(DXFontStyle): PrivateScope, Public, HideBySig
    RemoveStyle(DXFontStyle): PrivateScope, Public, HideBySig
    SetStyle(DXFontStyle): PrivateScope, Public, HideBySig
    SetAlign(HorzAlignment): PrivateScope, Public, HideBySig
    ModifyStyle(DXFontStyle): PrivateScope, Public, HideBySig
    ModifyAlign(HorzAlignment): PrivateScope, Public, HideBySig
    SetColor(Color): PrivateScope, Assembly, HideBySig
    SaveColor(StringFontSettings): PrivateScope, Assembly, HideBySig
    RestoreColor(StringFontSettings): PrivateScope, Assembly, HideBySig
    RestoreSize(StringFontSettings): PrivateScope, Assembly, HideBySig
    SaveSize(StringFontSettings): PrivateScope, Assembly, HideBySig
    SetSize(Single): PrivateScope, Assembly, HideBySig
    SetBackColor(Color): PrivateScope, Assembly, HideBySig
    get_Modifiers(): PrivateScope, Public, HideBySig, SpecialName
    get_HasModifiers(): PrivateScope, Public, HideBySig, SpecialName
    AddModifier(StringBlockTextModifier, Single): PrivateScope, Public, HideBySig
    RemoveLastModifier(StringBlockTextModifier): PrivateScope, Public, HideBySig
    Assign(StringFontSettings): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Assembly, HideBySig
    ResetAlign(): PrivateScope, Assembly, HideBySig
    ResetStyle(DXFontStyle): PrivateScope, Assembly, HideBySig
    get_FontFamily(): PrivateScope, Public, HideBySig, SpecialName
    set_FontFamily(String): PrivateScope, Assembly, HideBySig, SpecialName
    PushStyle(DXFontStyle): PrivateScope, Public, HideBySig
    PopStyle(): PrivateScope, Public, HideBySig
    PushAlign(HorzAlignment): PrivateScope, Public, HideBySig
    PopAlign(): PrivateScope, Public, HideBySig
Struct DevExpress.Utils.Text.Internal.StringBlockType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Utils.Text.Internal.StringBlockType Text = 0 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.StringBlockType Image = 1 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.StringBlockType Object = 2 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.StringBlockType Link = 3 : Public, Static, Literal, HasDefault
Struct DevExpress.Utils.Text.Internal.StringBlockAlignment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Utils.Text.Internal.StringBlockAlignment Top = 0 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.StringBlockAlignment Center = 1 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.StringBlockAlignment Bottom = 2 : Public, Static, Literal, HasDefault
Class DevExpress.Utils.Text.Internal.StringBlockTextModifierInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Text.Internal.StringBlockTextModifier Modifier 'get set' : 
    Int32 Height 'get set' : 
    Int32 AscentHeight 'get set' : 
    Int32 InternalLeading 'get set' : 
    Int32 InnerHeight 'get ' : 
    Single Size 'get set' : 
  Methods:
    get_Modifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Modifier(StringBlockTextModifier): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AscentHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_AscentHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_InternalLeading(): PrivateScope, Public, HideBySig, SpecialName
    set_InternalLeading(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_InnerHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Single): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Utils.Text.Internal.StringBlockTextModifier: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Utils.Text.Internal.StringBlockTextModifier SubScript = 0 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.StringBlockTextModifier SuperScript = 1 : Public, Static, Literal, HasDefault
    DevExpress.Utils.Text.Internal.StringBlockTextModifier Normal = 2 : Public, Static, Literal, HasDefault
Class DevExpress.Utils.Text.Internal.StringBlock: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single DpiScaleFactor 'get set' : 
    DevExpress.Utils.Text.Internal.StringBlockAlignment Alignment 'get ' : 
    Int32 Height 'get set' : 
    Int32 TextHeight 'get set' : 
    System.String ImageName 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.String Alt 'get ' : 
    System.String Link 'get set' : 
    DevExpress.Utils.Text.Internal.StringBlockType Type 'get set' : 
    System.Drawing.Font Font 'get ' : 
    DevExpress.Drawing.DXFont DXFont 'get ' : 
    Boolean IsEmpty 'get ' : 
    System.Object Data 'get set' : 
    System.String Text 'get set' : 
    Boolean NewLineBefore 'get set' : 
    Boolean NewLineAfter 'get set' : 
    Int32 LineNumber 'get set' : 
    Int32 FontHeight 'get ' : 
    Int32 FontAscentHeight 'get ' : 
    Int32 FontInnerHeight 'get ' : 
    Int32 FontBaseLine 'get ' : 
    Int32 FontInternalLeading 'get ' : 
    DevExpress.Utils.Text.Internal.StringFontSettings FontSettings 'get ' : 
    Int32[] MatchIndexes 'get ' : 
    Int32[] MatchLength 'get ' : 
    System.Drawing.Rectangle ClipBounds 'get set' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_DpiScaleFactor(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DpiScaleFactor(Single): PrivateScope, Assembly, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TextHeight(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TextHeight(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageName(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Alt(): PrivateScope, Public, HideBySig, SpecialName
    get_Link(): PrivateScope, Public, HideBySig, SpecialName
    set_Link(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(StringBlockType): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    get_DXFont(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_NewLineBefore(): PrivateScope, Assembly, HideBySig, SpecialName
    set_NewLineBefore(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_NewLineAfter(): PrivateScope, Assembly, HideBySig, SpecialName
    set_NewLineAfter(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FontHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_FontAscentHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_FontInnerHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_FontBaseLine(): PrivateScope, Public, HideBySig, SpecialName
    get_FontInternalLeading(): PrivateScope, Public, HideBySig, SpecialName
    get_FontSettings(): PrivateScope, Public, HideBySig, SpecialName
    ParseParameter(String, String&(Out), String&(Out)): PrivateScope, Public, Static, HideBySig
    GetMatchText(Int32): PrivateScope, Public, HideBySig
    get_MatchIndexes(): PrivateScope, Public, HideBySig, SpecialName
    get_MatchLength(): PrivateScope, Public, HideBySig, SpecialName
    get_ClipBounds(): PrivateScope, Public, HideBySig, SpecialName
    set_ClipBounds(Rectangle): PrivateScope, Assembly, HideBySig, SpecialName
    SetFontInfo(Font, DXFont, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SetFontInfo(Font, DXFont, Int32, Int32): PrivateScope, Public, HideBySig
    SetBlock(StringBlock): PrivateScope, Public, HideBySig
    SetAscentHeight(Int32): PrivateScope, Public, HideBySig
    SetMatchInfo(Int32, Int32): PrivateScope, Public, HideBySig
    SetMatchInfo(Int32[], Int32[]): PrivateScope, Public, HideBySig
    ResetMatchInfo(): PrivateScope, Public, HideBySig
Class DevExpress.Utils.Design.DXImageFormatConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
    GetStandardValues(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetStandardValuesSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Design.DXMarginsConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Design.LocalizableExpandableObjectTypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
    CreateInstance(ITypeDescriptorContext, IDictionary): PrivateScope, Public, Virtual, HideBySig
    GetCreateInstanceSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Design.DXMarginsTypeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Design.DXMarginsConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
    GetProperties(ITypeDescriptorContext, Object, Attribute[]): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Design.DXFontTypeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Utils.Design.DXFontTypeConverter Default 'get ' : 
  Methods:
    get_Default(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
    CreateInstance(ITypeDescriptorContext, IDictionary): PrivateScope, Public, Virtual, HideBySig
    GetCreateInstanceSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetProperties(ITypeDescriptorContext, Object, Attribute[]): PrivateScope, Public, Virtual, HideBySig
    GetPropertiesSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Design.DXFontAdditionalPropertyTypeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
Interface DevExpress.XtraPrinting.Native.IMeasurer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    DevExpress.Drawing.Internal.IDXMeasurer
    System.IDisposable
  Methods:
    GetFontMetrics(DXFont, DXGraphicsUnit): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.XtraPrinting.Native.IGdiMeasurer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    DevExpress.XtraPrinting.Native.IMeasurer
    DevExpress.Drawing.Internal.IDXMeasurer
    System.IDisposable
  Properties:
    System.Drawing.Graphics Graphics 'get ' : 
  Methods:
    get_Graphics(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class DevExpress.XtraPrinting.Native.IMeasurerExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    MeasureString(IMeasurer, String, DXFont, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
Class DevExpress.Emf.EmfPlusBeginContainerNoParamsRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusStateControlRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusBeginContainerRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 StackIndex 'get ' : 
    System.Drawing.RectangleF SrcRect 'get ' : 
    System.Drawing.RectangleF DstRect 'get ' : 
  Methods:
    get_StackIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_SrcRect(): PrivateScope, Public, HideBySig, SpecialName
    get_DstRect(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusEndContainerRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusStateControlRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfMetafileGraphicsPlayer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.IDXGraphics, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Emf.IEmfMetafileVisitor
  Methods:
    Play(EmfMetafileModel, RectangleF, RectangleF): PrivateScope, Public, HideBySig
    Visit(EmfPlusSetAntiAliasModeRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetComposingModeRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetComposingQualityRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetInterpolationModeRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetPixelOffsetModeRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetTextRenderingHintRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfMetafileHeaderRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusHeaderRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusClearRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusObjectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawArcRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawBeziersRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawDriverStringRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawEllipseRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawImagePointsRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawImageRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawLinesRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawPieRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawRectsRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusDrawStringRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusFillEllipseRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusFillPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusFillRegionRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusFillPieRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusFillPolygonRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusFillRectsRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusModifyWorldTransform): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusRotateWorldTransformRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusResetClipRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusResetWorldTransformRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusRestoreRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSaveRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusBeginContainerRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusBeginContainerNoParamsRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusEndContainerRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetClipPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetClipRectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetClipRegionRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetPageTransformRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusSetWorldTransformRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusEofRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetMetaRegionRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSaveDCRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfRestoreDCRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetViewportExtentRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfExCreateFontIndirectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSelectObjectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfDeleteObjectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetViewportOriginRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetWindowExtentRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetWindowOriginRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetMappingModeRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetTextAlignmentRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetBackgroundModeRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetTextColorRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfModifyWorldTransformRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSelectClipRegionRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfExtTextOutRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfCreateBrushIndirectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfFillRegionRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfAbortPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfBeginPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfCloseFigureRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfFlattenPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfEndPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfWidenPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfLineToRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfFillPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfMoveToEx): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetBackgroundColorRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfIntersectClipRectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfCreatePenIndirectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfDrawRectangleRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfBitBltRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPolygonRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetPolygonFillModeRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetArcDirectionRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetStretchBitmapRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfCreatePaletteRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSelectPaletteRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfRealizePaletteRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfStretchDIBBitsRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPolyBezierRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPolyBezierToRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPolylineRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPolylineToRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfArcRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfAngleArcRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPieRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfChordRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfEllipseRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfRoundRectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPolyDrawRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfStrokeAndFillPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfStrokePathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfExtCreatePenRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfCreateMonoBrushRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfCreateDIBPatternBrushRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetMiterLimitRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfExcludeClipRectRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfOffsetClipRegionRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSelectClipPathRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfScaleViewportExtExRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfScaleWindowExtExRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetWorldTransformRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfPlusGetDCRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetBrushOriginRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetROP2Record): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfSetLayoutRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(EmfAlphaBlendRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Emf.MetafileHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsEmfMetafile(Stream): PrivateScope, Public, Static, HideBySig
Class DevExpress.Emf.EmfTextureBrushWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusBrushWriter`1[DevExpress.Drawing.DXTextureBrush]
    Void .ctor(DevExpress.Drawing.DXTextureBrush): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BrushDataSize 'get ' : 
  Methods:
    get_BrushDataSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Emf.EmfPlusComposingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusComposingMode CompositingModeSourceOver = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusComposingMode CompositingModeSourceCopy = 1 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusComposingQuality: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusComposingQuality CompositingQualityDefault = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusComposingQuality CompositingQualityHighSpeed = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusComposingQuality CompositingQualityHighQuality = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusComposingQuality CompositingQualityGammaCorrected = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusComposingQuality CompositingQualityAssumeLinear = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusInterpolationMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusInterpolationMode InterpolationModeDefault = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusInterpolationMode InterpolationModeLowQuality = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusInterpolationMode InterpolationModeHighQuality = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusInterpolationMode InterpolationModeBilinear = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusInterpolationMode InterpolationModeBicubic = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusInterpolationMode InterpolationModeNearestNeighbor = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusInterpolationMode InterpolationModeHighQualityBilinear = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusInterpolationMode InterpolationModeHighQualityBicubic = 7 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusPixelOffsetMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusPixelOffsetMode PixelOffsetModeDefault = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelOffsetMode PixelOffsetModeHighSpeed = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelOffsetMode PixelOffsetModeHighQuality = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelOffsetMode PixelOffsetModeNone = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelOffsetMode PixelOffsetModeHalf = 4 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusRect: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int16, Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int16 X    'get ' : 
    Int16 Y    'get ' : 
    Int16 Width 'get ' : 
    Int16 Height 'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    ToNative(): PrivateScope, Public, HideBySig
Struct DevExpress.Emf.EmfPlusSmoothingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusSmoothingMode SmoothingModeDefault = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusSmoothingMode SmoothingModeHighSpeed = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusSmoothingMode SmoothingModeHighQuality = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusSmoothingMode SmoothingModeNone = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusSmoothingMode SmoothingModeAntiAlias8x4 = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusSmoothingMode SmoothingModeAntiAlias8x8 = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusTextRenderingHint: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusTextRenderingHint TextRenderingHintSystemDefault = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusTextRenderingHint TextRenderingHintSingleBitPerPixelGridFit = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusTextRenderingHint TextRenderingHintSingleBitPerPixel = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusTextRenderingHint TextRenderingHintAntialiasGridFit = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusTextRenderingHint TextRenderingHintAntialias = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusTextRenderingHint TextRenderingHintClearTypeGridFit = 5 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.FlagsHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    FlagsToObjectType(Int16): PrivateScope, Public, Static, HideBySig
    FlagsToContinuedObject(Int16): PrivateScope, Public, Static, HideBySig
    GetObjectFlags(Int32, EmfPlusObjectType): PrivateScope, Public, Static, HideBySig
    FlagsToProperty(Int16): PrivateScope, Public, Static, HideBySig
    PropertyToFlags(Int32): PrivateScope, Public, Static, HideBySig
    FlagsToSmoothingMode(Int16): PrivateScope, Public, Static, HideBySig
    FlagsToAntiAlias(Int16): PrivateScope, Public, Static, HideBySig
    GetAntiAliasModeFlags(EmfPlusSmoothingMode, Boolean): PrivateScope, Public, Static, HideBySig
Class DevExpress.Emf.EmfPlusBrushOrColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, System.Nullable`1[System.Drawing.Color]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BrushId 'get ' : 
    System.Nullable`1[System.Drawing.Color] Color 'get ' : 
  Methods:
    get_BrushId(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfPlusFillRegionRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusFillBase
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, DevExpress.Emf.EmfPlusBrushOrColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetAntiAliasModeRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(DevExpress.Emf.EmfPlusSmoothingMode, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPlusSmoothingMode SmoothingMode 'get ' : 
    Boolean AntiAlias 'get ' : 
  Methods:
    get_SmoothingMode(): PrivateScope, Public, HideBySig, SpecialName
    get_AntiAlias(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetComposingModeRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(DevExpress.Emf.EmfPlusComposingMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPlusComposingMode ComposingMode 'get ' : 
  Methods:
    get_ComposingMode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetComposingQualityRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(DevExpress.Emf.EmfPlusComposingQuality): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPlusComposingQuality ComposingQuality 'get ' : 
  Methods:
    get_ComposingQuality(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetInterpolationModeRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(DevExpress.Emf.EmfPlusInterpolationMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPlusInterpolationMode InterpolationMode 'get ' : 
  Methods:
    get_InterpolationMode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetPixelOffsetModeRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(DevExpress.Emf.EmfPlusPixelOffsetMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPlusPixelOffsetMode PixelOffsetMode 'get ' : 
  Methods:
    get_PixelOffsetMode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetTextRenderingHintRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(DevExpress.Emf.EmfPlusTextRenderingHint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPlusTextRenderingHint TextRenderingHint 'get ' : 
  Methods:
    get_TextRenderingHint(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfBrushWriterFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    DevExpress.Drawing.Internal.IDXBrushVisitor
  Methods:
    Create(DXBrush): PrivateScope, Public, Static, HideBySig
    Visit(DXSolidBrush): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DXHatchBrush): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DXLinearGradientBrush): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DXPathGradientBrush): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DXTextureBrush): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Emf.EmfHatchBrushWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusBrushWriter`1[DevExpress.Drawing.DXHatchBrush]
    Void .ctor(DevExpress.Drawing.DXHatchBrush): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BrushDataSize 'get ' : 
  Methods:
    get_BrushDataSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfLinearGradientBrushWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusBrushWriter`1[DevExpress.Drawing.DXLinearGradientBrush]
    Void .ctor(DevExpress.Drawing.DXLinearGradientBrush): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BrushDataSize 'get ' : 
  Methods:
    get_BrushDataSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPathGradientBrushWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusBrushWriter`1[DevExpress.Drawing.DXPathGradientBrush]
    Void .ctor(DevExpress.Drawing.DXPathGradientBrush): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BrushDataSize 'get ' : 
  Methods:
    get_BrushDataSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusBrushWriter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Int32 BrushDataSize 'get ' : 
  Methods:
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_BrushDataSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class DevExpress.Emf.EmfPlusBrushWriter`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, DevExpress.Drawing.DXBrush
  :DevExpress.Emf.EmfPlusBrushWriter
Class DevExpress.Emf.EmfSolidBrushWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusBrushWriter`1[DevExpress.Drawing.DXSolidBrush]
    Void .ctor(DevExpress.Drawing.DXSolidBrush): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BrushDataSize 'get ' : 
  Methods:
    get_BrushDataSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Emf.EmfPlusFontStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusFontStyle Regular = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusFontStyle Bold = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusFontStyle Italic = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusFontStyle Underline = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusFontStyle Strikeout = 8 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfContentWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.BinaryWriter
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(DXGraphicsPathData): PrivateScope, Public, HideBySig
    Write(EmfRectL): PrivateScope, Public, HideBySig
    Write(EmfSizeL): PrivateScope, Public, HideBySig
    Write(RectangleF): PrivateScope, Public, HideBySig
    Write(RectangleF, Boolean): PrivateScope, Public, HideBySig
    Write(EmfPlusRect): PrivateScope, Public, HideBySig
    Write(Color): PrivateScope, Public, HideBySig
    Write(DXMatrix): PrivateScope, Public, HideBySig
    Write(DXBlend): PrivateScope, Public, HideBySig
    Write(DXColorBlend): PrivateScope, Public, HideBySig
    Write(IEnumerable`1): PrivateScope, Public, HideBySig
    Write(PointF): PrivateScope, Public, HideBySig
Class DevExpress.Emf.EmfMetafileModel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IList`1[DevExpress.Emf.EmfRecord], DevExpress.Emf.EmfRectL): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IList`1[DevExpress.Emf.EmfRecord]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size, DevExpress.Drawing.Internal.DXMetafileFrameUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DevExpress.Emf.EmfRecord] Records 'get ' : 
    Boolean IsVideoDisplay 'get ' : 
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    DevExpress.Drawing.Internal.DXMetafileHeader Header 'get ' : 
    Boolean IsDisposed 'get set' : 
  Methods:
    Create(Byte[]): PrivateScope, Public, Static, HideBySig
    Create(Stream): PrivateScope, Public, Static, HideBySig
    get_Records(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVideoDisplay(): PrivateScope, Public, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_Header(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
Class DevExpress.Emf.EmfMetafileParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[DevExpress.Emf.EmfRecord]
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Emf.EmfPlusReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.BinaryReader
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadPathData(): PrivateScope, Public, HideBySig
    ReadPointF(): PrivateScope, Public, HideBySig
    ReadPointF(Boolean): PrivateScope, Public, HideBySig
    ReadPoints(Int32, Int16): PrivateScope, Public, HideBySig
    ReadRectangleF(Boolean): PrivateScope, Public, HideBySig
    ReadColor(): PrivateScope, Public, HideBySig
    ReadTransformMatrix(): PrivateScope, Public, HideBySig
    ReadBlend(): PrivateScope, Public, HideBySig
    ReadColorBlend(): PrivateScope, Public, HideBySig
Struct DevExpress.Emf.EmfPlusRecordType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusRecordType EmfPlusHeader = 16385 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusEndOfFile = 16386 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusComment = 16387 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusGetDC = 16388 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusMultiFormatStart = 16389 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusMultiFormatSection = 16390 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusMultiFormatEnd = 16391 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusObject = 16392 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusClear = 16393 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusFillRects = 16394 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawRects = 16395 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusFillPolygon = 16396 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawLines = 16397 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusFillEllipse = 16398 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawEllipse = 16399 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusFillPie = 16400 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawPie = 16401 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawArc = 16402 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusFillRegion = 16403 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusFillPath = 16404 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawPath = 16405 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusFillClosedCurve = 16406 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawClosedCurve = 16407 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawCurve = 16408 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawBeziers = 16409 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawImage = 16410 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawImagePoints = 16411 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawString = 16412 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetRenderingOrigin = 16413 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetAntiAliasMode = 16414 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetTextRenderingHint = 16415 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetTextContrast = 16416 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetInterpolationMode = 16417 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetPixelOffsetMode = 16418 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetCompositingMode = 16419 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetCompositingQuality = 16420 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSave = 16421 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusRestore = 16422 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusBeginContainer = 16423 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusBeginContainerNoParams = 16424 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusEndContainer = 16425 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetWorldTransform = 16426 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusResetWorldTransform = 16427 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusMultiplyWorldTransform = 16428 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusTranslateWorldTransform = 16429 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusScaleWorldTransform = 16430 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusRotateWorldTransform = 16431 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetPageTransform = 16432 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusResetClip = 16433 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetClipRect = 16434 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetClipPath = 16435 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetClipRegion = 16436 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusOffsetClip = 16437 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusDrawDriverString = 16438 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusStrokeFillPath = 16439 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSerializableObject = 16440 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetTSGraphics = 16441 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRecordType EmfPlusSetTSClip = 16442 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Emf.EmfMetafileModel): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(Stream): PrivateScope, Public, HideBySig
Class DevExpress.Emf.EmfReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.BinaryReader
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadSignedSizeL(): PrivateScope, Public, HideBySig
    ReadSizeL(): PrivateScope, Public, HideBySig
    ReadPoint(): PrivateScope, Public, HideBySig
    ReadPointS(): PrivateScope, Public, HideBySig
    ReadColor(): PrivateScope, Public, HideBySig
    ReadRect(): PrivateScope, Public, HideBySig
    ReadMatrix(): PrivateScope, Public, HideBySig
    ReadRegion(): PrivateScope, Public, HideBySig
    ReadUnicodeNullTerminatedString(Int32): PrivateScope, Public, HideBySig
Struct DevExpress.Emf.EmfRecordType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfRecordType EMR_HEADER = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYBEZIER = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYGON = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYLINE = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYBEZIERTO = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYLINETO = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYPOLYLINE = 7 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYPOLYGON = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETWINDOWEXTEX = 9 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETWINDOWORGEX = 10 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETVIEWPORTEXTEX = 11 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETVIEWPORTORGEX = 12 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETBRUSHORGEX = 13 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_EOF = 14 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETPIXELV = 15 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETMAPPERFLAGS = 16 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETMAPMODE = 17 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETBKMODE = 18 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETPOLYFILLMODE = 19 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETROP2 = 20 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETSTRETCHBLTMODE = 21 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETTEXTALIGN = 22 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETCOLORADJUSTMENT = 23 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETTEXTCOLOR = 24 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETBKCOLOR = 25 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_OFFSETCLIPRGN = 26 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_MOVETOEX = 27 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETMETARGN = 28 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_EXCLUDECLIPRECT = 29 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_INTERSECTCLIPRECT = 30 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SCALEVIEWPORTEXTEX = 31 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SCALEWINDOWEXTEX = 32 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SAVEDC = 33 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_RESTOREDC = 34 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETWORLDTRANSFORM = 35 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_MODIFYWORLDTRANSFORM = 36 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SELECTOBJECT = 37 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_CREATEPEN = 38 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_CREATEBRUSHINDIRECT = 39 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_DELETEOBJECT = 40 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_ANGLEARC = 41 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_ELLIPSE = 42 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_RECTANGLE = 43 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_ROUNDRECT = 44 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_ARC = 45 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_CHORD = 46 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_PIE = 47 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SELECTPALETTE = 48 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_CREATEPALETTE = 49 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETPALETTEENTRIES = 50 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_RESIZEPALETTE = 51 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_REALIZEPALETTE = 52 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_EXTFLOODFILL = 53 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_LINETO = 54 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_ARCTO = 55 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYDRAW = 56 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETARCDIRECTION = 57 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETMITERLIMIT = 58 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_BEGINPATH = 59 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_ENDPATH = 60 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_CLOSEFIGURE = 61 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_FILLPATH = 62 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_STROKEANDFILLPATH = 63 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_STROKEPATH = 64 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_FLATTENPATH = 65 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_WIDENPATH = 66 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SELECTCLIPPATH = 67 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_ABORTPATH = 68 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_COMMENT = 70 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_FILLRGN = 71 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_FRAMERGN = 72 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_INVERTRGN = 73 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_PAINTRGN = 74 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_EXTSELECTCLIPRGN = 75 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_BITBLT = 76 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_STRETCHBLT = 77 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_MASKBLT = 78 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_PLGBLT = 79 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETDIBITSTODEVICE = 80 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_STRETCHDIBITS = 81 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_EXTCREATEFONTINDIRECTW = 82 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_EXTTEXTOUTA = 83 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_EXTTEXTOUTW = 84 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYBEZIER16 = 85 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYGON16 = 86 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYLINE16 = 87 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYBEZIERTO16 = 88 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYLINETO16 = 89 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYPOLYLINE16 = 90 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYPOLYGON16 = 91 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYDRAW16 = 92 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_CREATEMONOBRUSH = 93 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_CREATEDIBPATTERNBRUSHPT = 94 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_EXTCREATEPEN = 95 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYTEXTOUTA = 96 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_POLYTEXTOUTW = 97 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETICMMODE = 98 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_CREATECOLORSPACE = 99 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETCOLORSPACE = 100 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_DELETECOLORSPACE = 101 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_GLSRECORD = 102 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_GLSBOUNDEDRECORD = 103 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_PIXELFORMAT = 104 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_DRAWESCAPE = 105 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_EXTESCAPE = 106 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SMALLTEXTOUT = 108 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_FORCEUFIMAPPING = 109 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_NAMEDESCAPE = 110 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_COLORCORRECTPALETTE = 111 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETICMPROFILEA = 112 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETICMPROFILEW = 113 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_ALPHABLEND = 114 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETLAYOUT = 115 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_TRANSPARENTBLT = 116 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_GRADIENTFILL = 118 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETLINKEDUFIS = 119 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_SETTEXTJUSTIFICATION = 120 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_COLORMATCHTOTARGETW = 121 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRecordType EMR_CREATECOLORSPACEW = 121 : Public, Static, Literal, HasDefault
Interface DevExpress.Emf.IEmfMetafileVisitor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Visit(EmfMetafileHeaderRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusHeaderRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusClearRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusObjectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawArcRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawBeziersRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawDriverStringRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawEllipseRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawImagePointsRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawImageRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawLinesRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawPieRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawRectsRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusDrawStringRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusFillEllipseRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusFillPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusFillRegionRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusFillPieRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusFillPolygonRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusFillRectsRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusModifyWorldTransform): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusRotateWorldTransformRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusResetClipRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusResetWorldTransformRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusRestoreRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSaveRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetClipPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetClipRectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetClipRegionRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetPageTransformRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetWorldTransformRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusEofRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetMetaRegionRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSaveDCRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfRestoreDCRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetViewportExtentRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfExCreateFontIndirectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSelectObjectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfDeleteObjectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetViewportOriginRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetWindowExtentRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetWindowOriginRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetTextAlignmentRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetBackgroundModeRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetTextColorRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfModifyWorldTransformRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSelectClipRegionRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfExtTextOutRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfFillRegionRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfCreateBrushIndirectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetMappingModeRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfAbortPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfBeginPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfCloseFigureRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfFlattenPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfEndPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfWidenPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfLineToRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfFillPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfMoveToEx): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetBackgroundColorRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfIntersectClipRectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfCreatePenIndirectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfDrawRectangleRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfBitBltRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPolygonRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetPolygonFillModeRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetArcDirectionRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetStretchBitmapRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfCreatePaletteRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSelectPaletteRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfRealizePaletteRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfStretchDIBBitsRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPolyBezierRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPolyBezierToRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPolylineRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPolylineToRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfArcRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfAngleArcRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPieRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfChordRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfEllipseRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfRoundRectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPolyDrawRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfStrokeAndFillPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfStrokePathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfExtCreatePenRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfCreateMonoBrushRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfCreateDIBPatternBrushRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetMiterLimitRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfExcludeClipRectRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfOffsetClipRegionRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSelectClipPathRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfScaleViewportExtExRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfScaleWindowExtExRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetWorldTransformRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusGetDCRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetBrushOriginRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetROP2Record): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfSetLayoutRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfAlphaBlendRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetAntiAliasModeRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetComposingModeRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetComposingQualityRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetInterpolationModeRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetPixelOffsetModeRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusSetTextRenderingHintRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusBeginContainerRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusBeginContainerNoParamsRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(EmfPlusEndContainerRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Emf.EmfPlusBrush: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusObject
    Void .ctor(DevExpress.Drawing.DXBrush): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXBrush Brush 'get ' : 
    DevExpress.Emf.EmfPlusObjectType Type 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    Create(EmfPlusReader): PrivateScope, Public, Static, HideBySig
    get_Brush(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Emf.EmfPlusBrushData: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusBrushData None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushData BrushDataPath = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushData BrushDataTransform = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushData BrushDataPresetColors = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushData BrushDataBlendFactors = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushData BrushDataFocusScales = 64 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushData BrushDataIsGammaCorrected = 128 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushData BrushDataDoNotTransform = 256 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusBrushType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusBrushType BrushTypeSolidColor = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushType BrushTypeHatchFill = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushType BrushTypeTextureFill = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushType BrushTypePathGradient = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusBrushType BrushTypeLinearGradient = 4 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusCombineMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusCombineMode CombineModeReplace = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusCombineMode CombineModeIntersect = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusCombineMode CombineModeUnion = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusCombineMode CombineModeXOR = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusCombineMode CombineModeExclude = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusCombineMode CombineModeComplement = 5 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfPlusContinuedObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Emf.EmfPlusObjectType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsObjectFinished 'get set' : 
  Methods:
    get_IsObjectFinished(): PrivateScope, Public, HideBySig, SpecialName
    Append(Byte[]): PrivateScope, Public, HideBySig
    ParseObject(): PrivateScope, Public, HideBySig
Struct DevExpress.Emf.EmfPlusCustomLineCapData: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusCustomLineCapData None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusCustomLineCapData FillPath = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusCustomLineCapData LinePath = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusCustomLineCapDataType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusCustomLineCapDataType Default = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusCustomLineCapDataType AdjustableArrow = 1 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfPlusCustomLineCapParser: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Read(Byte[]): PrivateScope, Public, Static, HideBySig
Class DevExpress.Emf.EmfPlusCustomLineCapWriter: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Write(DXCustomLineCapBase): PrivateScope, Public, Static, HideBySig
    GetSize(DXCustomLineCapBase): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Emf.EmfPlusDriverStringOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusDriverStringOptions None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusDriverStringOptions DriverStringOptionsCMapLookup = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusDriverStringOptions DriverStringOptionsVertical = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusDriverStringOptions DriverStringOptionsRealizedAdvance = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusDriverStringOptions DriverStringOptionsLimitSubPixel = 8 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfPlusFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusObject
    Void .ctor(DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Single, DevExpress.Emf.EmfPlusFontStyle, DevExpress.Drawing.DXGraphicsUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single EmSize 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit UnitType 'get ' : 
    DevExpress.Emf.EmfPlusFontStyle FontStyle 'get ' : 
    System.String FontFamily 'get ' : 
    DevExpress.Emf.EmfPlusObjectType Type 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    get_EmSize(): PrivateScope, Public, HideBySig, SpecialName
    get_UnitType(): PrivateScope, Public, HideBySig, SpecialName
    get_FontStyle(): PrivateScope, Public, HideBySig, SpecialName
    get_FontFamily(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusObject
    Void .ctor(DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXImage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXImage Image 'get ' : 
    DevExpress.Emf.EmfPlusObjectType Type 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    get_Image(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Emf.EmfPlusImageDataType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusImageDataType ImageDataTypeUnknown = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusImageDataType ImageDataTypeBitmap = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusImageDataType ImageDataTypeMetafile = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusMetafileDataType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusMetafileDataType MetafileDataTypeWmf = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusMetafileDataType MetafileDataTypeWmfPlaceable = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusMetafileDataType MetafileDataTypeEmf = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusMetafileDataType MetafileDataTypeEmfPlusOnly = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusMetafileDataType MetafileDataTypeEmfPlusDual = 5 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfPlusObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    DevExpress.Emf.EmfPlusObjectType Type 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    CreateObject(EmfPlusObjectRecord): PrivateScope, Public, Static, HideBySig
    CreateObject(EmfPlusObjectType, Byte[]): PrivateScope, Public, Static, HideBySig
    CreateObject(EmfPlusObjectType, EmfPlusReader): PrivateScope, Public, Static, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct DevExpress.Emf.EmfPlusObjectType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusObjectType ObjectTypeInvalid = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusObjectType ObjectTypeBrush = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusObjectType ObjectTypePen = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusObjectType ObjectTypePath = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusObjectType ObjectTypeRegion = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusObjectType ObjectTypeImage = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusObjectType ObjectTypeFont = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusObjectType ObjectTypeStringFormat = 7 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusObjectType ObjectTypeImageAttributes = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusObjectType ObjectTypeCustomLineCap = 9 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfPlusPath: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusObject
    Void .ctor(DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXGraphicsPathData PathData 'get ' : 
    Int32 Size 'get ' : 
    DevExpress.Emf.EmfPlusObjectType Type 'get ' : 
  Methods:
    GetPathObjectSize(DXGraphicsPathData): PrivateScope, Public, Static, HideBySig
    get_PathData(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusPen: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusObject
    Void .ctor(DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXPen): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXPen Pen 'get ' : 
    DevExpress.Emf.EmfPlusObjectType Type 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    get_Pen(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Emf.EmfPlusPenDataFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusPenDataFlags PenDataTransform = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataStartCap = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataEndCap = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataJoin = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataMiterLimit = 16 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataLineStyle = 32 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataDashedLineCap = 64 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataDashedLineOffset = 128 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataDashedLine = 256 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataNonCenter = 512 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataCompoundLine = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataCustomStartCap = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPenDataFlags PenDataCustomEndCap = 4096 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusPixelFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusPixelFormat PixelFormatUndefined = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat1bppIndexed = 196865 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat4bppIndexed = 197634 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat8bppIndexed = 198659 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat16bppGrayScale = 1052676 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat16bppRGB555 = 135173 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat16bppRGB565 = 135174 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat16bppARGB1555 = 397319 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat24bppRGB = 137224 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat32bppRGB = 139273 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat32bppARGB = 2498570 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat32bppPARGB = 925707 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat48bppRGB = 1060876 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat64bppARGB = 3424269 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusPixelFormat PixelFormat64bppPARGB = 1720334 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfPlusRegion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusObject
    Void .ctor(DevExpress.Drawing.Internal.DXRegionDataNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.DXRegionDataNode RegionData 'get ' : 
    DevExpress.Emf.EmfPlusObjectType Type 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    get_RegionData(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetTransformedRegion(DXMatrix): PrivateScope, Public, HideBySig
    Combine(EmfPlusCombineMode, EmfPlusRegion): PrivateScope, Public, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Emf.EmfPlusRegionNodeDataType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusRegionNodeDataType RegionNodeDataTypeAnd = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRegionNodeDataType RegionNodeDataTypeOr = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRegionNodeDataType RegionNodeDataTypeXor = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRegionNodeDataType RegionNodeDataTypeExclude = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRegionNodeDataType RegionNodeDataTypeComplement = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRegionNodeDataType RegionNodeDataTypeRect = 268435456 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRegionNodeDataType RegionNodeDataTypePath = 268435457 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRegionNodeDataType RegionNodeDataTypeEmpty = 268435458 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusRegionNodeDataType RegionNodeDataTypeInfinite = 268435459 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusStringAlignment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusStringAlignment Near = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringAlignment Center = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringAlignment Far = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusStringTrimming: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusStringTrimming None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringTrimming Character = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringTrimming Word = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringTrimming EllipsisCharacter = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringTrimming EllipsisWord = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringTrimming EllipsisPath = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPlusHotkeyPrefix: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusHotkeyPrefix None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusHotkeyPrefix Show = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusHotkeyPrefix Hide = 2 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfPlusStringFormat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusObject
    Void .ctor(DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXStringFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Emf.EmfPlusStringFormatFlags, DevExpress.Emf.EmfPlusStringAlignment, DevExpress.Emf.EmfPlusStringAlignment, DevExpress.Emf.EmfPlusStringTrimming, Single, Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPlusStringFormatFlags FormatFlags 'get ' : 
    DevExpress.Emf.EmfPlusStringAlignment Alignment 'get ' : 
    DevExpress.Emf.EmfPlusStringAlignment LineAlignment 'get ' : 
    DevExpress.Emf.EmfPlusHotkeyPrefix HotkeyPrefix 'get ' : 
    Single LeadingMarginFactor 'get ' : 
    Single TrailingMarginFactor 'get ' : 
    DevExpress.Emf.EmfPlusStringTrimming Trimming 'get ' : 
    Single FirstTabOffset 'get ' : 
    Single[] TabStops 'get ' : 
    DevExpress.Emf.EmfPlusObjectType Type 'get ' : 
    Int32 Size 'get ' : 
  Methods:
    get_FormatFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    get_LineAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_HotkeyPrefix(): PrivateScope, Public, HideBySig, SpecialName
    get_LeadingMarginFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_TrailingMarginFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_Trimming(): PrivateScope, Public, HideBySig, SpecialName
    get_FirstTabOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_TabStops(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
    ToDxStringFormat(): PrivateScope, Public, HideBySig
Struct DevExpress.Emf.EmfPlusStringFormatFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int64 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatDirectionRightToLeft = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatDirectionVertical = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatNoFitBlackBox = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatDisplayFormatControl = 32 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatNoFontFallback = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatMeasureTrailingSpaces = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatNoWrap = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatLineLimit = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatNoClip = 16384 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPlusStringFormatFlags StringFormatBypassGDI = 2147483648 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfArcDirection: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfArcDirection COUNTERCLOCKWISE = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfArcDirection CLOCKWISE = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfBackgroundMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfBackgroundMode TRANSPARENT = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBackgroundMode OPAQUE = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfBinaryRasterOperation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfBinaryRasterOperation R2_BLACK = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_NOTMERGEPEN = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_MASKNOTPEN = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_NOTCOPYPEN = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_MASKPENNOT = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_NOT = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_XORPEN = 7 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_NOTMASKPEN = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_MASKPEN = 9 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_NOTXORPEN = 10 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_NOP = 11 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_MERGENOTPEN = 12 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_COPYPEN = 13 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_MERGEPENNOT = 14 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_MERGEPEN = 15 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBinaryRasterOperation R2_WHITE = 16 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfBitCount: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfBitCount BITCOUNT_0 = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBitCount BITCOUNT_1 = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBitCount BITCOUNT_2 = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBitCount BITCOUNT_3 = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBitCount BITCOUNT_4 = 16 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBitCount BITCOUNT_5 = 24 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBitCount BITCOUNT_6 = 32 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfBrushStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfBrushStyle SOLID = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBrushStyle NULL = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBrushStyle HATCHED = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBrushStyle PATTERN = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBrushStyle INDEXED = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBrushStyle DIBPATTERN = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBrushStyle DIBPATTERNPT = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBrushStyle PATTERN8X8 = 7 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBrushStyle DIBPATTERN8X8 = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfBrushStyle MONOPATTERN = 9 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfCharacterSet: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfCharacterSet ANSI_CHARSET = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet DEFAULT_CHARSET = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet SYMBOL_CHARSET = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet MAC_CHARSET = 77 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet SHIFTJIS_CHARSET = 128 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet HANGUL_CHARSET = 129 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet JOHAB_CHARSET = 130 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet GB2312_CHARSET = 134 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet CHINESEBIG5_CHARSET = 136 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet GREEK_CHARSET = 161 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet TURKISH_CHARSET = 162 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet VIETNAMESE_CHARSET = 163 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet HEBREW_CHARSET = 177 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet ARABIC_CHARSET = 178 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet BALTIC_CHARSET = 186 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet RUSSIAN_CHARSET = 204 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet THAI_CHARSET = 222 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet EASTEUROPE_CHARSET = 238 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCharacterSet OEM_CHARSET = 255 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfClipPrecision: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfClipPrecision DEFAULT_PRECIS = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfClipPrecision CHARACTER_PRECIS = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfClipPrecision STROKE_PRECIS = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfClipPrecision LH_ANGLES = 16 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfClipPrecision TT_ALWAYS = 32 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfClipPrecision DFA_DISABLE = 64 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfClipPrecision EMBEDDED = 128 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfCompression: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfCompression RGB = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCompression RLE8 = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCompression RLE4 = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCompression BITFIELDS = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCompression JPEG = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCompression PNG = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCompression CMYK = 11 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCompression CMYKRLE8 = 12 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfCompression CMYKRLE4 = 13 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfDIBColors: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfDIBColors RGB_COLORS = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfDIBColors PAL_COLORS = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfDIBColors PAL_INDICES = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfExtTextOutOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfExtTextOutOptions OPAQUE = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions CLIPPED = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions GLYPH_INDEX = 16 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions RTLREADING = 128 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions NO_RECT = 256 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions SMALL_CHARS = 512 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions NUMERICSLOCAL = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions NUMERICSLATIN = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions IGNORELANGUAGE = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions PDY = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfExtTextOutOptions REVERSE_INDEX_MAP = 65536 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfFamilyFont: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfFamilyFont DONTCARE = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFamilyFont ROMAN = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFamilyFont SWISS = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFamilyFont MODERN = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFamilyFont SCRIPT = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFamilyFont DECORATIVE = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfFontQuality: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfFontQuality DEFAULT_QUALITY = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFontQuality DRAFT_QUALITY = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFontQuality PROOF_QUALITY = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFontQuality NONANTIALIASED_QUALITY = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFontQuality ANTIALIASED_QUALITY = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfFontQuality CLEARTYPE_QUALITY = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfGraphicsMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfGraphicsMode GM_COMPATIBLE = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfGraphicsMode GM_ADVANCED = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfHatchStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfHatchStyle HORIZONTAL = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle VERTICAL = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle FDIAGONAL = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle BDIAGONAL = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle CROSS = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle DIAGCROSS = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle SOLIDCLR = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle DITHEREDCLR = 7 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle SOLIDTEXTCLR = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle DITHEREDTEXTCLR = 9 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle SOLIDBKCLR = 10 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfHatchStyle DITHEREDBKCLR = 11 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfLayoutMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfLayoutMode LTR = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfLayoutMode RTL = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfLayoutMode BITMAPORIENTATIONPRESERVED = 8 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfLogFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Emf.EmfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    Int32 Escapement 'get ' : 
    Int32 Orientation 'get ' : 
    Int32 Weight 'get ' : 
    Boolean Italic 'get ' : 
    Boolean Underline 'get ' : 
    Boolean StrikeOut 'get ' : 
    DevExpress.Emf.EmfCharacterSet CharSet 'get ' : 
    DevExpress.Emf.EmfOutPrecision OutPrecision 'get ' : 
    DevExpress.Emf.EmfClipPrecision ClipPrecision 'get ' : 
    DevExpress.Emf.EmfFontQuality Quality 'get ' : 
    DevExpress.Emf.EmfFamilyFont Family 'get ' : 
    DevExpress.Emf.EmfPitchFont Pitch 'get ' : 
    System.String FaceName 'get ' : 
  Methods:
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Escapement(): PrivateScope, Public, HideBySig, SpecialName
    get_Orientation(): PrivateScope, Public, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, HideBySig, SpecialName
    get_Italic(): PrivateScope, Public, HideBySig, SpecialName
    get_Underline(): PrivateScope, Public, HideBySig, SpecialName
    get_StrikeOut(): PrivateScope, Public, HideBySig, SpecialName
    get_CharSet(): PrivateScope, Public, HideBySig, SpecialName
    get_OutPrecision(): PrivateScope, Public, HideBySig, SpecialName
    get_ClipPrecision(): PrivateScope, Public, HideBySig, SpecialName
    get_Quality(): PrivateScope, Public, HideBySig, SpecialName
    get_Family(): PrivateScope, Public, HideBySig, SpecialName
    get_Pitch(): PrivateScope, Public, HideBySig, SpecialName
    get_FaceName(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfLogFontEx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfLogFont
    Void .ctor(DevExpress.Emf.EmfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FullName 'get ' : 
    System.String Style 'get ' : 
    System.String Script 'get ' : 
  Methods:
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    get_Script(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfLogPenEx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Emf.EmfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPenStyle PenStyle 'get ' : 
    Int32 Width 'get ' : 
    DevExpress.Emf.EmfBrushStyle BrushStyle 'get ' : 
    System.Drawing.Color Color 'get ' : 
    DevExpress.Emf.EmfDIBColors ColorUsage 'get ' : 
    DevExpress.Emf.EmfHatchStyle HatchStyle 'get ' : 
    Int32[] DashPattern 'get ' : 
  Methods:
    get_PenStyle(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_BrushStyle(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    get_ColorUsage(): PrivateScope, Public, HideBySig, SpecialName
    get_HatchStyle(): PrivateScope, Public, HideBySig, SpecialName
    get_DashPattern(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Emf.EmfMapMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfMapMode TEXT = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfMapMode LOMETRIC = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfMapMode HIMETRIC = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfMapMode LOENGLISH = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfMapMode HIENGLISH = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfMapMode TWIPS = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfMapMode ISOTROPIC = 7 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfMapMode ANISOTROPIC = 8 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfOutPrecision: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfOutPrecision DEFAULT_PRECIS = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfOutPrecision STRING_PRECIS = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfOutPrecision STROKE_PRECIS = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfOutPrecision TT_PRECIS = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfOutPrecision DEVICE_PRECIS = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfOutPrecision RASTER_PRECIS = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfOutPrecision TT_ONLY_PRECIS = 7 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfOutPrecision OUTLINE_PRECIS = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfOutPrecision SCREEN_OUTLINE_PRECIS = 9 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfOutPrecision PS_ONLY_PRECIS = 10 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPenStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPenStyle COSMETIC = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle ENDCAP_ROUND = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle JOIN_ROUND = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle SOLID = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle DASH = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle DOT = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle DASHDOT = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle DASHDOTDOT = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle NULL = 5 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle INSIDEFRAME = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle USERSTYLE = 7 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle ALTERNATE = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle ENDCAP_SQUARE = 256 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle ENDCAP_FLAT = 512 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle JOIN_BEVEL = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle JOIN_MITER = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle GEOMETRIC = 65536 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle JOIN_MASK = 61440 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle ENDCAP_MASK = 3840 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPenStyle STYLE_MASK = 15 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPitchFont: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPitchFont DEFAULT_PITCH = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPitchFont FIXED_PITCH = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPitchFont VARIABLE_PITCH = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPointType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPointType CLOSEFIGURE = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPointType LINETO = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPointType BEZIERTO = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPointType MOVETO = 6 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfPolygonFillMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfPolygonFillMode ALTERNATE = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfPolygonFillMode WINDING = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfRectL: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Left 'get ' : 
    Int32 Top  'get ' : 
    Int32 Right 'get ' : 
    Int32 Bottom 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    ToNative(): PrivateScope, Public, HideBySig
Struct DevExpress.Emf.EmfRegionMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfRegionMode AND = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRegionMode OR = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRegionMode XOR = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRegionMode DIFF = 4 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfRegionMode COPY = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfSizeL: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Width 'get ' : 
    Int64 Height 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Emf.EmfStretchMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfStretchMode ANDSCANS = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfStretchMode ORSCANS = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfStretchMode DELETESCANS = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfStretchMode HALFTONE = 4 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfTernaryRasterOperation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfTernaryRasterOperation PATCOPY = 15728673 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTernaryRasterOperation SRCCOPY = 13369376 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTernaryRasterOperation D = 11141161 : Public, Static, Literal, HasDefault
Struct DevExpress.Emf.EmfTextAlignmentMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfTextAlignmentMode NOUPDATECP = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTextAlignmentMode LEFT = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTextAlignmentMode TOP = 0 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTextAlignmentMode UPDATECP = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTextAlignmentMode RIGHT = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTextAlignmentMode CENTER = 6 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTextAlignmentMode BOTTOM = 8 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTextAlignmentMode BASELINE = 24 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfTextAlignmentMode RTLREADING = 256 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmrText: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Emf.EmfReader, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Reference 'get ' : 
    DevExpress.Emf.EmfExtTextOutOptions Options 'get ' : 
    System.Nullable`1[DevExpress.Emf.EmfRectL] Rectangle 'get ' : 
    System.String Text 'get ' : 
    Int16[] GlyphIndices 'get ' : 
    Int64[] OutputDx 'get ' : 
  Methods:
    get_Reference(): PrivateScope, Public, HideBySig, SpecialName
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
    get_Rectangle(): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_GlyphIndices(): PrivateScope, Public, HideBySig, SpecialName
    get_OutputDx(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfIndexedPalette: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt16[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Emf.IEmfBitmapPalete
  Methods:
    CreatePalette(Color[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Emf.EmfPredefinedPalette: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.Color[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Emf.IEmfBitmapPalete
  Methods:
    CreatePalette(Color[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Emf.EmfSystemPalette: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Emf.IEmfBitmapPalete
  Methods:
    CreatePalette(Color[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Emf.IEmfBitmapPalete: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CreatePalette(Color[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Emf.EmfPlusCircleSegmentRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfPlusPenDrawingRecord
  Properties:
    Single StartAngle 'get ' : 
    Single SweepAngle 'get ' : 
    System.Drawing.RectangleF Bounds 'get ' : 
  Methods:
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_SweepAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfPlusClearRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color Color 'get ' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawArcRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusCircleSegmentRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.RectangleF, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawBeziersRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusPointBasedRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.PointF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawDriverStringRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Byte, DevExpress.Emf.EmfPlusBrushOrColor, Char[], System.Drawing.PointF[], DevExpress.Emf.EmfPlusDriverStringOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FontId 'get ' : 
    Int32 BrushId 'get ' : 
    System.Nullable`1[System.Drawing.Color] BrushColor 'get ' : 
    Char[] Glyphs 'get ' : 
    System.Drawing.PointF[] GlyphPos 'get ' : 
    DevExpress.Emf.EmfPlusDriverStringOptions StringOptions 'get ' : 
    DevExpress.Drawing.DXMatrix TransformMatrix 'get ' : 
  Methods:
    get_FontId(): PrivateScope, Public, HideBySig, SpecialName
    get_BrushId(): PrivateScope, Public, HideBySig, SpecialName
    get_BrushColor(): PrivateScope, Public, HideBySig, SpecialName
    get_Glyphs(): PrivateScope, Public, HideBySig, SpecialName
    get_GlyphPos(): PrivateScope, Public, HideBySig, SpecialName
    get_StringOptions(): PrivateScope, Public, HideBySig, SpecialName
    get_TransformMatrix(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawEllipseRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusPenDrawingRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.RectangleF Bounds 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawImagePointsRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ImageAttributesId 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit SrcUnit 'get ' : 
    System.Drawing.PointF[] Points 'get ' : 
    System.Drawing.RectangleF SrcRectangle 'get ' : 
  Methods:
    get_ImageAttributesId(): PrivateScope, Public, HideBySig, SpecialName
    get_SrcUnit(): PrivateScope, Public, HideBySig, SpecialName
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
    get_SrcRectangle(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawImageRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.RectangleF, System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.RectangleF, System.Drawing.RectangleF, DevExpress.Drawing.DXGraphicsUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ImageAttributesId 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit SrcUnit 'get ' : 
    System.Drawing.RectangleF BoundingBox 'get ' : 
    System.Drawing.RectangleF SrcRectangle 'get ' : 
  Methods:
    get_ImageAttributesId(): PrivateScope, Public, HideBySig, SpecialName
    get_SrcUnit(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingBox(): PrivateScope, Public, HideBySig, SpecialName
    get_SrcRectangle(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawLinesRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusPointBasedRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.PointF[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsPolygon 'get ' : 
  Methods:
    get_IsPolygon(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 PenId 'get ' : 
  Methods:
    get_PenId(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawPieRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusCircleSegmentRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.RectangleF, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawRectsRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusPenDrawingRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.RectangleF[] Rectangles 'get ' : 
  Methods:
    get_Rectangles(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusDrawStringRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Drawing.RectangleF, DevExpress.Emf.EmfPlusBrushOrColor, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Drawing.RectangleF, System.Drawing.Color, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BrushId 'get ' : 
    System.Nullable`1[System.Drawing.Color] BrushColor 'get ' : 
    Int32 FormatId 'get ' : 
    System.Drawing.RectangleF LayoutRect 'get ' : 
    System.String Text 'get ' : 
  Methods:
    get_BrushId(): PrivateScope, Public, HideBySig, SpecialName
    get_BrushColor(): PrivateScope, Public, HideBySig, SpecialName
    get_FormatId(): PrivateScope, Public, HideBySig, SpecialName
    get_LayoutRect(): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusEofRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusFillBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
  Properties:
    Int32 BrushId 'get ' : 
    System.Nullable`1[System.Drawing.Color] Color 'get ' : 
  Methods:
    get_BrushId(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    GetFlags(EmfPlusBrushOrColor, Byte): PrivateScope, Public, Static, HideBySig
    WriteBrushOrColor(EmfContentWriter, Nullable`1, Int32): PrivateScope, Assembly, Static, HideBySig
Class DevExpress.Emf.EmfPlusFillEllipseRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusFillBase
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Emf.EmfPlusBrushOrColor, System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.RectangleF Bounds 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusFillPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusFillBase
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, DevExpress.Emf.EmfPlusBrushOrColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusFillPieRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusFillBase
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, Single, Single, DevExpress.Emf.EmfPlusBrushOrColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, Single, Single, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, Single, Single, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.RectangleF Bounds 'get ' : 
    Single StartAngle 'get ' : 
    Single SweepAngle 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_SweepAngle(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusFillPolygonRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusFillBase
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF[], DevExpress.Emf.EmfPlusBrushOrColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF[], System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF[], Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF[] Points 'get ' : 
  Methods:
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusFillRectsRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusFillBase
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF[], DevExpress.Emf.EmfPlusBrushOrColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, DevExpress.Emf.EmfPlusBrushOrColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, System.Drawing.RectangleF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, System.Drawing.RectangleF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.RectangleF[] Rectangles 'get ' : 
  Methods:
    get_Rectangles(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusGetDCRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusHeaderRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 GraphicsVersion = -608169982 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsDualModeFile 'get ' : 
    Boolean IsVideoDisplay 'get ' : 
    Int32 LogicalDpiX 'get ' : 
    Int32 LogicalDpiY 'get ' : 
  Methods:
    get_IsDualModeFile(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVideoDisplay(): PrivateScope, Public, HideBySig, SpecialName
    get_LogicalDpiX(): PrivateScope, Public, HideBySig, SpecialName
    get_LogicalDpiY(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusModifyWorldTransform: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
  Properties:
    Boolean IsPostMultiplied 'get ' : 
    DevExpress.Drawing.DXMatrixOrder DXMatrixOrder 'get ' : 
    DevExpress.Drawing.DXMatrix Matrix 'get ' : 
  Methods:
    get_IsPostMultiplied(): PrivateScope, Public, HideBySig, SpecialName
    get_DXMatrixOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusMultiplyWorldTransformRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusModifyWorldTransform
    Void .ctor(DevExpress.Drawing.DXMatrix, DevExpress.Drawing.DXMatrixOrder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXMatrix Matrix 'get ' : 
  Methods:
    get_Matrix(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class DevExpress.Emf.EmfPlusObjectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, DevExpress.Emf.EmfPlusObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPlusObjectType ObjectType 'get ' : 
    Boolean IsContinued 'get ' : 
    Byte[] ObjectData 'get ' : 
  Methods:
    get_ObjectType(): PrivateScope, Public, HideBySig, SpecialName
    get_IsContinued(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectData(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusPenDrawingRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
  Properties:
    Int32 PenId 'get ' : 
  Methods:
    get_PenId(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfPlusPointBasedRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfPlusPenDrawingRecord
    Void .ctor(Int16, System.Drawing.PointF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF[] Points 'get ' : 
  Methods:
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfPlusRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
  Properties:
    Int32 ObjectId 'get ' : 
    Int32 RecordSize 'get ' : 
  Methods:
    Create(EmfPlusRecordType, Int16, Byte[]): PrivateScope, Public, Static, HideBySig
    get_ObjectId(): PrivateScope, Public, HideBySig, SpecialName
    get_RecordSize(): PrivateScope, Public, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Final, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusResetClipRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusResetWorldTransformRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusRestoreRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusStateControlRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusRotateWorldTransformRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, DevExpress.Drawing.DXMatrixOrder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Angle 'get ' : 
    Boolean IsPostMultiplied 'get ' : 
  Methods:
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPostMultiplied(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSaveRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusStateControlRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusScaleWorldTransformRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusModifyWorldTransform
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, DevExpress.Drawing.DXMatrixOrder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXMatrix Matrix 'get ' : 
  Methods:
    get_Matrix(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class DevExpress.Emf.EmfPlusSetClipPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusSetClipRecord
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, DevExpress.Emf.EmfPlusCombineMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetClipRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
  Properties:
    DevExpress.Emf.EmfPlusCombineMode CombineMode 'get ' : 
  Methods:
    get_CombineMode(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfPlusSetClipRectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusSetClipRecord
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, DevExpress.Emf.EmfPlusCombineMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.RectangleF Rectangle 'get ' : 
  Methods:
    get_Rectangle(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetClipRegionRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusSetClipRecord
    Void .ctor(Byte, DevExpress.Emf.EmfPlusCombineMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetPageTransformRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(Single, DevExpress.Drawing.DXGraphicsUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single ScaleFactor 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit Unit 'get ' : 
  Methods:
    get_ScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_Unit(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusSetWorldTransformRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(DevExpress.Drawing.DXMatrix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXMatrix Matrix 'get ' : 
  Methods:
    get_Matrix(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPlusStateControlRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
  Properties:
    Int32 StackIndex 'get ' : 
  Methods:
    get_StackIndex(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfPlusTranslateWorldTransformRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusModifyWorldTransform
    Void .ctor(Int16, DevExpress.Emf.EmfPlusReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, DevExpress.Drawing.DXMatrixOrder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXMatrix Matrix 'get ' : 
  Methods:
    get_Matrix(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class DevExpress.Emf.EmfPlusUnparsedRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPlusRecord
    Void .ctor(DevExpress.Emf.EmfPlusRecordType, Int16, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfAbortPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfAlphaBlendRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Dest 'get ' : 
    DevExpress.Emf.EmfRectL Src 'get ' : 
    Byte Alpha 'get ' : 
    Boolean BitmapWithAlpha 'get ' : 
    DevExpress.Drawing.DXMatrix Transform 'get ' : 
    System.Drawing.Color BkColorSrc 'get ' : 
    DevExpress.Emf.EmfBitmap Bitmap 'get ' : 
  Methods:
    get_Dest(): PrivateScope, Public, HideBySig, SpecialName
    get_Src(): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    get_BitmapWithAlpha(): PrivateScope, Public, HideBySig, SpecialName
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
    get_BkColorSrc(): PrivateScope, Public, HideBySig, SpecialName
    get_Bitmap(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfAngleArcRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Center 'get ' : 
    Int64 Radius 'get ' : 
    Single StartAngle 'get ' : 
    Single SweepAngle 'get ' : 
  Methods:
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_SweepAngle(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfArcRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, Boolean, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    System.Drawing.Point StartPoint 'get ' : 
    System.Drawing.Point EndPoint 'get ' : 
    Boolean UpdateCurrentPosition 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_UpdateCurrentPosition(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfBeginPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfBitBltRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    Int32 XDest 'get ' : 
    Int32 YDest 'get ' : 
    Int32 CxDest 'get ' : 
    Int32 CyDest 'get ' : 
    DevExpress.Emf.EmfTernaryRasterOperation BitBltRasterOperation 'get ' : 
    Int32 XSrc 'get ' : 
    Int32 YSrc 'get ' : 
    DevExpress.Drawing.DXMatrix SourceTransform 'get ' : 
    System.Drawing.Color BkColorSrc 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_XDest(): PrivateScope, Public, HideBySig, SpecialName
    get_YDest(): PrivateScope, Public, HideBySig, SpecialName
    get_CxDest(): PrivateScope, Public, HideBySig, SpecialName
    get_CyDest(): PrivateScope, Public, HideBySig, SpecialName
    get_BitBltRasterOperation(): PrivateScope, Public, HideBySig, SpecialName
    get_XSrc(): PrivateScope, Public, HideBySig, SpecialName
    get_YSrc(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceTransform(): PrivateScope, Public, HideBySig, SpecialName
    get_BkColorSrc(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfBitmap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfDIBColors, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    DevExpress.Emf.EmfCompression Compression 'get ' : 
    DevExpress.Emf.EmfBitCount BitCount 'get ' : 
    Boolean IsTopDown 'get ' : 
    Byte[] ImageData 'get ' : 
    DevExpress.Emf.IEmfBitmapPalete Palette 'get ' : 
    Int32 RedMask 'get ' : 
    Int32 GreenMask 'get ' : 
    Int32 BlueMask 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Compression(): PrivateScope, Public, HideBySig, SpecialName
    get_BitCount(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTopDown(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageData(): PrivateScope, Public, HideBySig, SpecialName
    get_Palette(): PrivateScope, Public, HideBySig, SpecialName
    get_RedMask(): PrivateScope, Public, HideBySig, SpecialName
    get_GreenMask(): PrivateScope, Public, HideBySig, SpecialName
    get_BlueMask(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfBitmapBrushRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
  Properties:
    Int32 Id   'get ' : 
    DevExpress.Emf.EmfBitmap Bitmap 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Bitmap(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfChordRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    System.Drawing.Point StartPoint 'get ' : 
    System.Drawing.Point EndPoint 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfCloseFigureRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfCommentEmfPlusRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IList`1[DevExpress.Emf.EmfPlusRecord]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IList`1[DevExpress.Emf.EmfPlusRecord], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 EmfPlusCommentIdentifier = 726027589 : Public, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.IList`1[DevExpress.Emf.EmfPlusRecord] Records 'get ' : 
  Methods:
    Parse(BinaryReader, Int32): PrivateScope, Public, Static, HideBySig
    get_Records(): PrivateScope, Public, HideBySig, SpecialName
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfCreateBrushIndirectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BrushId 'get ' : 
    System.Nullable`1[System.Drawing.Color] Color 'get ' : 
    System.Nullable`1[DevExpress.Emf.EmfHatchStyle] HatchStyle 'get ' : 
  Methods:
    get_BrushId(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    get_HatchStyle(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfCreateDIBPatternBrushRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfBitmapBrushRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfCreateMonoBrushRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfBitmapBrushRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfCreatePaletteRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ObjectId 'get ' : 
    System.Drawing.Color[] Palette 'get ' : 
  Methods:
    get_ObjectId(): PrivateScope, Public, HideBySig, SpecialName
    get_Palette(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfCreatePenIndirectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Id   'get ' : 
    DevExpress.Emf.EmfPenStyle PenStyle 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Color Color 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_PenStyle(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfDeleteObjectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Id   'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfDrawRectangleRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(DevExpress.Emf.EmfRectL): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Emf.EmfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Rectangle 'get ' : 
  Methods:
    get_Rectangle(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfEllipseRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfEndPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfEofRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 RecordSize = 20 : Public, Static, Literal, HasDefault
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfExcludeClipRectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Clip 'get ' : 
  Methods:
    get_Clip(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfExCreateFontIndirectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Id   'get ' : 
    DevExpress.Emf.EmfLogFont LogFont 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_LogFont(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfExtCreatePenRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Id   'get ' : 
    DevExpress.Emf.EmfLogPenEx Pen 'get ' : 
    DevExpress.Emf.EmfBitmap Bitmap 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Pen(): PrivateScope, Public, HideBySig, SpecialName
    get_Bitmap(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfExtTextOutRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, Boolean, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfGraphicsMode GraphicsMode 'get ' : 
    Single ExScale 'get ' : 
    Single EyScale 'get ' : 
    DevExpress.Emf.EmrText Text 'get ' : 
  Methods:
    get_GraphicsMode(): PrivateScope, Public, HideBySig, SpecialName
    get_ExScale(): PrivateScope, Public, HideBySig, SpecialName
    get_EyScale(): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfFillPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfFillRegionRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BrushId 'get ' : 
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    DevExpress.Emf.EmfRectL[] RegionRects 'get ' : 
  Methods:
    get_BrushId(): PrivateScope, Public, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_RegionRects(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfFlattenPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfIntersectClipRectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Clip 'get ' : 
  Methods:
    get_Clip(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfLineToRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Point 'get ' : 
  Methods:
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfMetafileHeaderRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(DevExpress.Emf.EmfRectL, DevExpress.Emf.EmfRectL, Int32, DevExpress.Emf.EmfSizeL, DevExpress.Emf.EmfSizeL): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 MinRecordSize = 88 : Public, Static, Literal, HasDefault
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    DevExpress.Emf.EmfRectL Frame 'get ' : 
    Int32 Size 'get ' : 
    Int32 RecordsCount 'get set' : 
    Int32 HandlesCount 'get set' : 
    Int32 PalEntries 'get set' : 
    DevExpress.Emf.EmfSizeL Device 'get ' : 
    DevExpress.Emf.EmfSizeL Millimeters 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_Frame(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_RecordsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_HandlesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_PalEntries(): PrivateScope, Public, HideBySig, SpecialName
    get_Device(): PrivateScope, Public, HideBySig, SpecialName
    get_Millimeters(): PrivateScope, Public, HideBySig, SpecialName
    TryRead(Byte[], EmfMetafileHeaderRecord&(Out)): PrivateScope, Public, Static, HideBySig
    Read(Byte[]): PrivateScope, Public, Static, HideBySig
    CreateFromSize(SizeF, Single, Single): PrivateScope, Public, Static, HideBySig
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
    UpdateMetafileSize(EmfContentWriter, Int64): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Emf.EmfModifyWorldTransformMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.EmfModifyWorldTransformMode IDENTITY = 1 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfModifyWorldTransformMode LEFTMULTIPLY = 2 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfModifyWorldTransformMode RIGHTMULTIPLY = 3 : Public, Static, Literal, HasDefault
    DevExpress.Emf.EmfModifyWorldTransformMode SET = 4 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.EmfModifyWorldTransformRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXMatrix Matrix 'get ' : 
    DevExpress.Emf.EmfModifyWorldTransformMode Mode 'get ' : 
  Methods:
    get_Matrix(): PrivateScope, Public, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfMoveToEx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Offset 'get ' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfOffsetClipRegionRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Offset 'get ' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPieRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    System.Drawing.Point StartPoint 'get ' : 
    System.Drawing.Point EndPoint 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPolyBezierRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPolyBezierRecordBase
    Void .ctor(DevExpress.Emf.EmfReader, System.Func`2[DevExpress.Emf.EmfReader,System.Drawing.Point], DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPolyBezierRecordBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    System.Drawing.Point[] Points 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfPolyBezierToRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPolyBezierRecordBase
    Void .ctor(DevExpress.Emf.EmfReader, System.Func`2[DevExpress.Emf.EmfReader,System.Drawing.Point], DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPolyDrawRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, System.Func`2[DevExpress.Emf.EmfReader,System.Drawing.Point], DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point[] Points 'get ' : 
    DevExpress.Emf.EmfPointType[] Types 'get ' : 
  Methods:
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
    get_Types(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPolygonRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    System.Drawing.Point[][] Points 'get ' : 
  Methods:
    ReadPolyPolygonRecord(EmfReader, Func`2, EmfRecordType, Byte[]): PrivateScope, Public, Static, HideBySig
    ReadPolygonRecord(EmfReader, Func`2, EmfRecordType, Byte[]): PrivateScope, Public, Static, HideBySig
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPolylineRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPolylineRecordBase
  Methods:
    ReadPolyPolylineRecord(EmfReader, Func`2, EmfRecordType, Byte[]): PrivateScope, Public, Static, HideBySig
    ReadPolylineRecord(EmfReader, Func`2, EmfRecordType, Byte[]): PrivateScope, Public, Static, HideBySig
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfPolylineRecordBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    System.Drawing.Point[][] LineData 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_LineData(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfPolylineToRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfPolylineRecordBase
  Methods:
    ReadPolylineToRecord(EmfReader, Func`2, EmfRecordType, Byte[]): PrivateScope, Public, Static, HideBySig
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfRealizePaletteRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Methods:
    Create(EmfRecordType, Byte[]): PrivateScope, Public, Static, HideBySig
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Emf.EmfRestoreDCRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 SavedDC 'get ' : 
  Methods:
    get_SavedDC(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfRoundRectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Box 'get ' : 
    DevExpress.Emf.EmfSizeL Corner 'get ' : 
  Methods:
    get_Box(): PrivateScope, Public, HideBySig, SpecialName
    get_Corner(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSaveDCRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfScaleExtRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
  Properties:
    Int32 XNum 'get ' : 
    Int32 XDenom 'get ' : 
    Int32 YNum 'get ' : 
    Int32 YDenom 'get ' : 
  Methods:
    get_XNum(): PrivateScope, Public, HideBySig, SpecialName
    get_XDenom(): PrivateScope, Public, HideBySig, SpecialName
    get_YNum(): PrivateScope, Public, HideBySig, SpecialName
    get_YDenom(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Emf.EmfScaleViewportExtExRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfScaleExtRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfScaleWindowExtExRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfScaleExtRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSelectClipPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRegionMode RegionMode 'get ' : 
  Methods:
    get_RegionMode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSelectClipRegionRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRegionMode RegionMode 'get ' : 
    DevExpress.Emf.EmfRectL[] RegionRects 'get ' : 
  Methods:
    get_RegionMode(): PrivateScope, Public, HideBySig, SpecialName
    get_RegionRects(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSelectObjectRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Id   'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSelectPaletteRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 PaletteId 'get ' : 
  Methods:
    get_PaletteId(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetArcDirectionRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfArcDirection ArcDirection 'get ' : 
  Methods:
    get_ArcDirection(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetBackgroundColorRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color Color 'get ' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetBackgroundModeRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfBackgroundMode BackgroundMode 'get ' : 
  Methods:
    get_BackgroundMode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetBrushOriginRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Origin 'get ' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetLayoutRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfLayoutMode LayoutMode 'get ' : 
  Methods:
    get_LayoutMode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetMappingModeRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(DevExpress.Emf.EmfMapMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Emf.EmfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfMapMode MappingMode 'get ' : 
  Methods:
    get_MappingMode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetMetaRegionRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetMiterLimitRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MiterLimit 'get ' : 
  Methods:
    get_MiterLimit(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetPolygonFillModeRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfPolygonFillMode FillMode 'get ' : 
  Methods:
    get_FillMode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetROP2Record: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfBinaryRasterOperation Operation 'get ' : 
  Methods:
    get_Operation(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetStretchBitmapRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfStretchMode StretchMode 'get ' : 
  Methods:
    get_StretchMode(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetTextAlignmentRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfTextAlignmentMode Alignment 'get ' : 
  Methods:
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetTextColorRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color TextColor 'get ' : 
  Methods:
    get_TextColor(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetViewportExtentRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(DevExpress.Emf.EmfSizeL): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Emf.EmfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfSizeL Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetViewportOriginRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Origin 'get ' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetWindowExtentRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(DevExpress.Emf.EmfSizeL): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Emf.EmfReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfSizeL Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetWindowOriginRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Origin 'get ' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfSetWorldTransformRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXMatrix Matrix 'get ' : 
  Methods:
    get_Matrix(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfStretchDIBBitsRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRectL Bounds 'get ' : 
    Int32 XDest 'get ' : 
    Int32 YDest 'get ' : 
    Int32 CxDest 'get ' : 
    Int32 CyDest 'get ' : 
    DevExpress.Emf.EmfRectL SrcRect 'get ' : 
    DevExpress.Emf.EmfTernaryRasterOperation BitBltRasterOperation 'get ' : 
    DevExpress.Emf.EmfBitmap Bitmap 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_XDest(): PrivateScope, Public, HideBySig, SpecialName
    get_YDest(): PrivateScope, Public, HideBySig, SpecialName
    get_CxDest(): PrivateScope, Public, HideBySig, SpecialName
    get_CyDest(): PrivateScope, Public, HideBySig, SpecialName
    get_SrcRect(): PrivateScope, Public, HideBySig, SpecialName
    get_BitBltRasterOperation(): PrivateScope, Public, HideBySig, SpecialName
    get_Bitmap(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfStrokeAndFillPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfStrokePathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfUnparsedRecord
    Void .ctor(DevExpress.Emf.EmfReader, DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfUnparsedRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(DevExpress.Emf.EmfRecordType, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Emf.EmfRecordType Type 'get ' : 
    Byte[] Content 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.EmfWidenPathRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Emf.EmfRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Accept(IEmfMetafileVisitor): PrivateScope, Public, Virtual, HideBySig
    Write(EmfContentWriter): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Emf.GraphicsPlayer.EmfBitmapData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXBitmapData
    System.IDisposable
  Properties:
    Int32 RowBytes 'get ' : 
    IntPtr DataPointer 'get ' : 
    Byte[] Data 'get ' : 
    Int32 Height 'get ' : 
  Methods:
    get_RowBytes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DataPointer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Emf.GraphicsPlayer.EmfBitmapDataReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    GetRowPadding(Int32): PrivateScope, Public, Static, HideBySig
    ConvertImageData(EmfBitmap, Boolean): PrivateScope, Public, Static, HideBySig
Class DevExpress.Emf.GraphicsPlayer.EmfBitmapWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    DevExpress.Drawing.Internal.IDXBitmap
    DevExpress.Drawing.Internal.IDXImage
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXImage]
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXBitmap]
  Properties:
    System.Drawing.SizeF PhysicalDimension 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions ImageFormatOptions 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat PixelFormat 'get ' : 
    DevExpress.Drawing.Internal.DXPalette Palette 'get ' : 
    Boolean CanGetPixels 'get ' : 
    Int32 NumberOfFrames 'get ' : 
    System.Object NativeImage 'get ' : 
    Single HorizontalResolution 'get ' : 
    Single VerticalResolution 'get ' : 
    DevExpress.Drawing.Internal.DXImageProperties ImageProperties 'get ' : 
  Methods:
    Create(EmfBitmap, DXPalette): PrivateScope, Public, Static, HideBySig
    Create(EmfBitmap, DXPalette, Boolean): PrivateScope, Public, Static, HideBySig
    get_PhysicalDimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageFormatOptions(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PixelFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Palette(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanGetPixels(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberOfFrames(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NativeImage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VerticalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Crop(Rectangle): PrivateScope, Public, HideBySig
    Crop(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Convert(DXPixelFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ConvertToJpeg(Stream, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormatOptions): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetBitmapData(DXImageLockMode): PrivateScope, Public, HideBySig
    GetBitmapData(Rectangle, DXImageLockMode, DXPixelFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(IDXBitmap): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(IDXImage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    FlipVertical(): PrivateScope, Public, HideBySig
    GetPixel(Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateGraphics(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetResolution(Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsDisposedOrInvalid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Emf.GraphicsPlayer.EmfRLE4BitmapDataReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    Read(Int32, Int32, Byte[]): PrivateScope, Public, Static, HideBySig
Class DevExpress.Emf.GraphicsPlayer.EmfRLE8BitmapDataReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    Read(Int32, Int32, Byte[]): PrivateScope, Public, Static, HideBySig
Class DevExpress.Emf.GraphicsPlayer.EmfPlusClip: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Emf.EmfPlusRegion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyClip(EmfIsolatedGraphicsStateHandler): PrivateScope, Public, HideBySig
    Combine(EmfPlusCombineMode, EmfPlusClip): PrivateScope, Public, HideBySig
    Transform(DXMatrix): PrivateScope, Public, HideBySig
Class DevExpress.Emf.GraphicsPlayer.EmfPlusExporter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object, DevExpress.Emf.GraphicsPlayer.EmfMetafileState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetLogicalDpi(Single, Single, Boolean): PrivateScope, Public, HideBySig
    Save(Int32): PrivateScope, Public, HideBySig
    Restore(Int32): PrivateScope, Public, HideBySig
    SetSmoothingMode(EmfPlusSmoothingMode): PrivateScope, Public, HideBySig
    SetComposingMode(EmfPlusComposingMode): PrivateScope, Public, HideBySig
    SetComposingQuality(EmfPlusComposingQuality): PrivateScope, Public, HideBySig
    SetInterpolationMode(EmfPlusInterpolationMode): PrivateScope, Public, HideBySig
    SetPixelOffsetMode(EmfPlusPixelOffsetMode): PrivateScope, Public, HideBySig
    SetTextRenderingHint(EmfPlusTextRenderingHint): PrivateScope, Public, HideBySig
    PerformDrawAction(Action`1): PrivateScope, Public, HideBySig
    DrawArc(Int32, RectangleF, Single, Single): PrivateScope, Public, HideBySig
    DrawPie(Int32, RectangleF, Single, Single): PrivateScope, Public, HideBySig
    DrawRectangles(Int32, RectangleF[]): PrivateScope, Public, HideBySig
    DrawBeziers(Int32, PointF[]): PrivateScope, Public, HideBySig
    DrawEllipse(Int32, RectangleF): PrivateScope, Public, HideBySig
    DrawLines(Int32, PointF[]): PrivateScope, Public, HideBySig
    DrawPolygon(Int32, PointF[]): PrivateScope, Public, HideBySig
    DrawPath(Int32, Int32): PrivateScope, Public, HideBySig
    FillEllipse(EmfPlusFillBase, RectangleF): PrivateScope, Public, HideBySig
    FillPie(EmfPlusFillBase, RectangleF, Single, Single): PrivateScope, Public, HideBySig
    FillPath(EmfPlusFillBase, Int32): PrivateScope, Public, HideBySig
    FillRegion(EmfPlusFillBase, Int32): PrivateScope, Public, HideBySig
    FillRects(EmfPlusFillBase, RectangleF[]): PrivateScope, Public, HideBySig
    FillPolygon(EmfPlusFillBase, PointF[]): PrivateScope, Public, HideBySig
    DrawImage(Int32, PointF[], RectangleF): PrivateScope, Public, HideBySig
    DrawImage(Int32, RectangleF, RectangleF): PrivateScope, Public, HideBySig
    ResetClip(): PrivateScope, Public, HideBySig
    SetPageUnit(DXGraphicsUnit, Single): PrivateScope, Public, HideBySig
    SetClipPath(Int32, EmfPlusCombineMode): PrivateScope, Public, HideBySig
    SetClipRegion(Int32, EmfPlusCombineMode): PrivateScope, Public, HideBySig
    SetClipRectangle(RectangleF, EmfPlusCombineMode): PrivateScope, Public, HideBySig
    DrawString(String, RectangleF, Int32, Nullable`1, Int32, Int32): PrivateScope, Public, HideBySig
    DrawUnicodeString(Char[], PointF[], Int32, Int32, Nullable`1): PrivateScope, Public, HideBySig
    Clear(Color): PrivateScope, Public, HideBySig
    ProcessEmfPlusObjectRecord(EmfPlusObjectRecord): PrivateScope, Public, HideBySig
    SetWorldTransform(DXMatrix): PrivateScope, Public, HideBySig
    RotateTransform(Single, Boolean): PrivateScope, Public, HideBySig
    MultiplyWorldTransform(DXMatrix, Boolean): PrivateScope, Public, HideBySig
Struct DevExpress.Emf.GraphicsPlayer.EmfStockObject: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Emf.GraphicsPlayer.EmfStockObject WHITE_BRUSH = 2147483648 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject LTGRAY_BRUSH = 2147483649 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject GRAY_BRUSH = 2147483650 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject DKGRAY_BRUSH = 2147483651 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject BLACK_BRUSH = 2147483652 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject NULL_BRUSH = 2147483653 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject WHITE_PEN = 2147483654 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject BLACK_PEN = 2147483655 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject NULL_PEN = 2147483656 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject OEM_FIXED_FONT = 2147483658 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject ANSI_FIXED_FONT = 2147483659 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject ANSI_VAR_FONT = 2147483660 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject SYSTEM_FONT = 2147483661 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject DEVICE_DEFAULT_FONT = 2147483662 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject DEFAULT_PALETTE = 2147483663 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject SYSTEM_FIXED_FONT = 2147483664 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject DEFAULT_GUI_FONT = 2147483665 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject DC_BRUSH = 2147483666 : Public, Static, Literal, HasDefault
    DevExpress.Emf.GraphicsPlayer.EmfStockObject DC_PEN = 2147483667 : Public, Static, Literal, HasDefault
Class DevExpress.Emf.GraphicsPlayer.EmfMetafileState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.IDXGraphics): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DevExpress.Emf.GraphicsPlayer.EmfPlusGraphicsStateStack EmfPlusState 'get ' : 
    DevExpress.Emf.GraphicsPlayer.IEmfGraphicsState EmfState 'get ' : 
  Methods:
    get_EmfPlusState(): PrivateScope, Public, HideBySig, SpecialName
    get_EmfState(): PrivateScope, Public, HideBySig, SpecialName
    StartMetafileDrawing(RectangleF, RectangleF): PrivateScope, Public, HideBySig
    EndMetafileDrawing(): PrivateScope, Public, HideBySig
    PerformEmfPlusDrawAction(Action`1): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Emf.GraphicsPlayer.EmfPlusGraphicsStateStack: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Emf.GraphicsPlayer.IEmfGraphicsState
  Properties:
    DevExpress.Emf.GraphicsPlayer.EmfPlusClip Clip 'get set' : 
    System.Nullable`1[System.Int32] CurrentId 'get ' : 
    DevExpress.Drawing.DXMatrix Transform 'get ' : 
    DevExpress.Drawing.DXMatrix PageUnitTransform 'get ' : 
    Boolean IsChanged 'get set' : 
  Methods:
    get_Clip(): PrivateScope, Public, HideBySig, SpecialName
    set_Clip(EmfPlusClip): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentId(): PrivateScope, Public, HideBySig, SpecialName
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
    get_PageUnitTransform(): PrivateScope, Public, HideBySig, SpecialName
    get_IsChanged(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Push(Int32): PrivateScope, Public, HideBySig
    Pop(): PrivateScope, Public, HideBySig
    SetTransform(DXMatrix): PrivateScope, Public, HideBySig
    SetPageUnitTransform(DXMatrix): PrivateScope, Public, HideBySig
    GetFullTransformationMatrix(): PrivateScope, Public, HideBySig
    ApplyState(EmfIsolatedGraphicsStateHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Emf.GraphicsPlayer.IEmfGraphicsState: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Boolean IsChanged 'get ' : 
  Methods:
    get_IsChanged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MarkChanged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ApplyState(EmfIsolatedGraphicsStateHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Emf.GraphicsPlayer.EmfIsolatedGraphicsStateHandler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.IDXGraphics): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    StartMetafileDrawing(RectangleF, RectangleF): PrivateScope, Public, HideBySig
    EndMetafileDrawing(): PrivateScope, Public, HideBySig
    ApplyTransform(DXMatrix): PrivateScope, Public, HideBySig
    ApplyClip(DXRegion): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.DXBlend: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single[] Factors 'get set' : 
    Single[] Positions 'get set' : 
  Methods:
    get_Factors(): PrivateScope, Public, HideBySig, SpecialName
    set_Factors(Single[]): PrivateScope, Public, HideBySig, SpecialName
    get_Positions(): PrivateScope, Public, HideBySig, SpecialName
    set_Positions(Single[]): PrivateScope, Public, HideBySig, SpecialName
    CreateSigmaBellBlend(Single, Single): PrivateScope, Assembly, Static, HideBySig
    GetInterpolatedColor(Color, Color, Single): PrivateScope, Assembly, HideBySig
Class DevExpress.Drawing.DXBrushes: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    DevExpress.Drawing.DXBrush Transparent 'get ' : 
    DevExpress.Drawing.DXBrush AliceBlue 'get ' : 
    DevExpress.Drawing.DXBrush AntiqueWhite 'get ' : 
    DevExpress.Drawing.DXBrush Aqua 'get ' : 
    DevExpress.Drawing.DXBrush Aquamarine 'get ' : 
    DevExpress.Drawing.DXBrush Azure 'get ' : 
    DevExpress.Drawing.DXBrush Beige 'get ' : 
    DevExpress.Drawing.DXBrush Bisque 'get ' : 
    DevExpress.Drawing.DXBrush Black 'get ' : 
    DevExpress.Drawing.DXBrush BlanchedAlmond 'get ' : 
    DevExpress.Drawing.DXBrush Blue 'get ' : 
    DevExpress.Drawing.DXBrush BlueViolet 'get ' : 
    DevExpress.Drawing.DXBrush Brown 'get ' : 
    DevExpress.Drawing.DXBrush BurlyWood 'get ' : 
    DevExpress.Drawing.DXBrush CadetBlue 'get ' : 
    DevExpress.Drawing.DXBrush Chartreuse 'get ' : 
    DevExpress.Drawing.DXBrush Chocolate 'get ' : 
    DevExpress.Drawing.DXBrush Coral 'get ' : 
    DevExpress.Drawing.DXBrush CornflowerBlue 'get ' : 
    DevExpress.Drawing.DXBrush Cornsilk 'get ' : 
    DevExpress.Drawing.DXBrush Crimson 'get ' : 
    DevExpress.Drawing.DXBrush Cyan 'get ' : 
    DevExpress.Drawing.DXBrush DarkBlue 'get ' : 
    DevExpress.Drawing.DXBrush DarkCyan 'get ' : 
    DevExpress.Drawing.DXBrush DarkGoldenrod 'get ' : 
    DevExpress.Drawing.DXBrush DarkGray 'get ' : 
    DevExpress.Drawing.DXBrush DarkGreen 'get ' : 
    DevExpress.Drawing.DXBrush DarkKhaki 'get ' : 
    DevExpress.Drawing.DXBrush DarkMagenta 'get ' : 
    DevExpress.Drawing.DXBrush DarkOliveGreen 'get ' : 
    DevExpress.Drawing.DXBrush DarkOrange 'get ' : 
    DevExpress.Drawing.DXBrush DarkOrchid 'get ' : 
    DevExpress.Drawing.DXBrush DarkRed 'get ' : 
    DevExpress.Drawing.DXBrush DarkSalmon 'get ' : 
    DevExpress.Drawing.DXBrush DarkSeaGreen 'get ' : 
    DevExpress.Drawing.DXBrush DarkSlateBlue 'get ' : 
    DevExpress.Drawing.DXBrush DarkSlateGray 'get ' : 
    DevExpress.Drawing.DXBrush DarkTurquoise 'get ' : 
    DevExpress.Drawing.DXBrush DarkViolet 'get ' : 
    DevExpress.Drawing.DXBrush DeepPink 'get ' : 
    DevExpress.Drawing.DXBrush DeepSkyBlue 'get ' : 
    DevExpress.Drawing.DXBrush DimGray 'get ' : 
    DevExpress.Drawing.DXBrush DodgerBlue 'get ' : 
    DevExpress.Drawing.DXBrush Firebrick 'get ' : 
    DevExpress.Drawing.DXBrush FloralWhite 'get ' : 
    DevExpress.Drawing.DXBrush ForestGreen 'get ' : 
    DevExpress.Drawing.DXBrush Fuchsia 'get ' : 
    DevExpress.Drawing.DXBrush Gainsboro 'get ' : 
    DevExpress.Drawing.DXBrush GhostWhite 'get ' : 
    DevExpress.Drawing.DXBrush Gold 'get ' : 
    DevExpress.Drawing.DXBrush Goldenrod 'get ' : 
    DevExpress.Drawing.DXBrush Gray 'get ' : 
    DevExpress.Drawing.DXBrush Green 'get ' : 
    DevExpress.Drawing.DXBrush GreenYellow 'get ' : 
    DevExpress.Drawing.DXBrush Honeydew 'get ' : 
    DevExpress.Drawing.DXBrush HotPink 'get ' : 
    DevExpress.Drawing.DXBrush IndianRed 'get ' : 
    DevExpress.Drawing.DXBrush Indigo 'get ' : 
    DevExpress.Drawing.DXBrush Ivory 'get ' : 
    DevExpress.Drawing.DXBrush Khaki 'get ' : 
    DevExpress.Drawing.DXBrush Lavender 'get ' : 
    DevExpress.Drawing.DXBrush LavenderBlush 'get ' : 
    DevExpress.Drawing.DXBrush LawnGreen 'get ' : 
    DevExpress.Drawing.DXBrush LemonChiffon 'get ' : 
    DevExpress.Drawing.DXBrush LightBlue 'get ' : 
    DevExpress.Drawing.DXBrush LightCoral 'get ' : 
    DevExpress.Drawing.DXBrush LightCyan 'get ' : 
    DevExpress.Drawing.DXBrush LightGoldenrodYellow 'get ' : 
    DevExpress.Drawing.DXBrush LightGray 'get ' : 
    DevExpress.Drawing.DXBrush LightGreen 'get ' : 
    DevExpress.Drawing.DXBrush LightPink 'get ' : 
    DevExpress.Drawing.DXBrush LightSalmon 'get ' : 
    DevExpress.Drawing.DXBrush LightSeaGreen 'get ' : 
    DevExpress.Drawing.DXBrush LightSkyBlue 'get ' : 
    DevExpress.Drawing.DXBrush LightSlateGray 'get ' : 
    DevExpress.Drawing.DXBrush LightSteelBlue 'get ' : 
    DevExpress.Drawing.DXBrush LightYellow 'get ' : 
    DevExpress.Drawing.DXBrush Lime 'get ' : 
    DevExpress.Drawing.DXBrush LimeGreen 'get ' : 
    DevExpress.Drawing.DXBrush Linen 'get ' : 
    DevExpress.Drawing.DXBrush Magenta 'get ' : 
    DevExpress.Drawing.DXBrush Maroon 'get ' : 
    DevExpress.Drawing.DXBrush MediumAquamarine 'get ' : 
    DevExpress.Drawing.DXBrush MediumBlue 'get ' : 
    DevExpress.Drawing.DXBrush MediumOrchid 'get ' : 
    DevExpress.Drawing.DXBrush MediumPurple 'get ' : 
    DevExpress.Drawing.DXBrush MediumSeaGreen 'get ' : 
    DevExpress.Drawing.DXBrush MediumSlateBlue 'get ' : 
    DevExpress.Drawing.DXBrush MediumSpringGreen 'get ' : 
    DevExpress.Drawing.DXBrush MediumTurquoise 'get ' : 
    DevExpress.Drawing.DXBrush MediumVioletRed 'get ' : 
    DevExpress.Drawing.DXBrush MidnightBlue 'get ' : 
    DevExpress.Drawing.DXBrush MintCream 'get ' : 
    DevExpress.Drawing.DXBrush MistyRose 'get ' : 
    DevExpress.Drawing.DXBrush Moccasin 'get ' : 
    DevExpress.Drawing.DXBrush NavajoWhite 'get ' : 
    DevExpress.Drawing.DXBrush Navy 'get ' : 
    DevExpress.Drawing.DXBrush OldLace 'get ' : 
    DevExpress.Drawing.DXBrush Olive 'get ' : 
    DevExpress.Drawing.DXBrush OliveDrab 'get ' : 
    DevExpress.Drawing.DXBrush Orange 'get ' : 
    DevExpress.Drawing.DXBrush OrangeRed 'get ' : 
    DevExpress.Drawing.DXBrush Orchid 'get ' : 
    DevExpress.Drawing.DXBrush PaleGoldenrod 'get ' : 
    DevExpress.Drawing.DXBrush PaleGreen 'get ' : 
    DevExpress.Drawing.DXBrush PaleTurquoise 'get ' : 
    DevExpress.Drawing.DXBrush PaleVioletRed 'get ' : 
    DevExpress.Drawing.DXBrush PapayaWhip 'get ' : 
    DevExpress.Drawing.DXBrush PeachPuff 'get ' : 
    DevExpress.Drawing.DXBrush Peru 'get ' : 
    DevExpress.Drawing.DXBrush Pink 'get ' : 
    DevExpress.Drawing.DXBrush Plum 'get ' : 
    DevExpress.Drawing.DXBrush PowderBlue 'get ' : 
    DevExpress.Drawing.DXBrush Purple 'get ' : 
    DevExpress.Drawing.DXBrush Red 'get ' : 
    DevExpress.Drawing.DXBrush RosyBrown 'get ' : 
    DevExpress.Drawing.DXBrush RoyalBlue 'get ' : 
    DevExpress.Drawing.DXBrush SaddleBrown 'get ' : 
    DevExpress.Drawing.DXBrush Salmon 'get ' : 
    DevExpress.Drawing.DXBrush SandyBrown 'get ' : 
    DevExpress.Drawing.DXBrush SeaGreen 'get ' : 
    DevExpress.Drawing.DXBrush SeaShell 'get ' : 
    DevExpress.Drawing.DXBrush Sienna 'get ' : 
    DevExpress.Drawing.DXBrush Silver 'get ' : 
    DevExpress.Drawing.DXBrush SkyBlue 'get ' : 
    DevExpress.Drawing.DXBrush SlateBlue 'get ' : 
    DevExpress.Drawing.DXBrush SlateGray 'get ' : 
    DevExpress.Drawing.DXBrush Snow 'get ' : 
    DevExpress.Drawing.DXBrush SpringGreen 'get ' : 
    DevExpress.Drawing.DXBrush SteelBlue 'get ' : 
    DevExpress.Drawing.DXBrush Tan 'get ' : 
    DevExpress.Drawing.DXBrush Teal 'get ' : 
    DevExpress.Drawing.DXBrush Thistle 'get ' : 
    DevExpress.Drawing.DXBrush Tomato 'get ' : 
    DevExpress.Drawing.DXBrush Turquoise 'get ' : 
    DevExpress.Drawing.DXBrush Violet 'get ' : 
    DevExpress.Drawing.DXBrush Wheat 'get ' : 
    DevExpress.Drawing.DXBrush White 'get ' : 
    DevExpress.Drawing.DXBrush WhiteSmoke 'get ' : 
    DevExpress.Drawing.DXBrush Yellow 'get ' : 
    DevExpress.Drawing.DXBrush YellowGreen 'get ' : 
  Methods:
    get_SpringGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SteelBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Teal(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Thistle(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tomato(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Turquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Violet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Wheat(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_White(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WhiteSmoke(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Yellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_YellowGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Transparent(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AliceBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AntiqueWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Aqua(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Aquamarine(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Azure(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Beige(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bisque(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Black(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlanchedAlmond(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlueViolet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Brown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BurlyWood(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CadetBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Chartreuse(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Chocolate(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Coral(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CornflowerBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cornsilk(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Crimson(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cyan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkCyan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkGoldenrod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkKhaki(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkMagenta(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkOliveGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkOrange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkOrchid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSalmon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSlateBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSlateGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkTurquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkViolet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DeepPink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DeepSkyBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DimGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DodgerBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Firebrick(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FloralWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ForestGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Fuchsia(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gainsboro(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GhostWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gold(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Goldenrod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GreenYellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Honeydew(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HotPink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IndianRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Indigo(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ivory(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Khaki(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Lavender(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LavenderBlush(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LawnGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LemonChiffon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightCoral(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightCyan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightGoldenrodYellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightPink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSalmon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSkyBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSlateGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSteelBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightYellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Lime(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LimeGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Linen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Magenta(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Maroon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumAquamarine(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumOrchid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumPurple(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumSeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumSlateBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumSpringGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumTurquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumVioletRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MidnightBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MintCream(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MistyRose(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Moccasin(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NavajoWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Navy(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OldLace(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Olive(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OliveDrab(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Orange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OrangeRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Orchid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleGoldenrod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleTurquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleVioletRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PapayaWhip(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PeachPuff(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Peru(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Pink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Plum(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PowderBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Purple(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Red(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RosyBrown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RoyalBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SaddleBrown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Salmon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SandyBrown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SeaShell(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sienna(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Silver(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SkyBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SlateBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SlateGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Snow(): PrivateScope, Public, Static, HideBySig, SpecialName
Class DevExpress.Drawing.DXColorBlend: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color[] Colors 'get set' : 
    Single[] Positions 'get set' : 
  Methods:
    get_Colors(): PrivateScope, Public, HideBySig, SpecialName
    set_Colors(Color[]): PrivateScope, Public, HideBySig, SpecialName
    get_Positions(): PrivateScope, Public, HideBySig, SpecialName
    set_Positions(Single[]): PrivateScope, Public, HideBySig, SpecialName
    GetInterpolatedColor(Single): PrivateScope, Assembly, HideBySig
Struct DevExpress.Drawing.DXLinearGradientMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXLinearGradientMode Horizontal = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLinearGradientMode Vertical = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLinearGradientMode ForwardDiagonal = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLinearGradientMode BackwardDiagonal = 3 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXCompositingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXCompositingMode SourceOver = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXCompositingMode SourceCopy = 1 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.DXSvgImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXImage
    Void .ctor(DevExpress.Drawing.Internal.IDXSvgImage): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.SizeF): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.DXSvgImage]
  Fields:
    DevExpress.Drawing.Internal.IDXSvgImage implementation : Assembly
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Virtual, HideBySig
    Equals(DXSvgImage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct DevExpress.Drawing.DXRotateFlipType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXRotateFlipType Rotate180FlipNone = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate180FlipX = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate180FlipXY = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate180FlipY = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate270FlipNone = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate270FlipX = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate270FlipXY = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate270FlipY = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate90FlipNone = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate90FlipX = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate90FlipXY = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType Rotate90FlipY = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType RotateNoneFlipNone = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType RotateNoneFlipX = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType RotateNoneFlipXY = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXRotateFlipType RotateNoneFlipY = 6 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXFontStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXFontStyle Regular = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXFontStyle Bold = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXFontStyle Italic = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXFontStyle Underline = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXFontStyle Strikeout = 8 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXGraphicsUnit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXGraphicsUnit World = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXGraphicsUnit Display = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXGraphicsUnit Pixel = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXGraphicsUnit Point = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXGraphicsUnit Inch = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXGraphicsUnit Document = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXGraphicsUnit Millimeter = 6 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXHotkeyPrefix: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXHotkeyPrefix None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHotkeyPrefix Show = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHotkeyPrefix Hide = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXInterpolationMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXInterpolationMode Invalid = -1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXInterpolationMode Default = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXInterpolationMode Low = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXInterpolationMode High = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXInterpolationMode Bilinear = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXInterpolationMode Bicubic = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXInterpolationMode NearestNeighbor = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXInterpolationMode HighQualityBilinear = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXInterpolationMode HighQualityBicubic = 7 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXMatrixOrder: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXMatrixOrder Prepend = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXMatrixOrder Append = 1 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXSmoothingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXSmoothingMode Invalid = -1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXSmoothingMode Default = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXSmoothingMode HighSpeed = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXSmoothingMode HighQuality = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXSmoothingMode None = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXSmoothingMode AntiAlias = 4 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXStringAlignment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXStringAlignment Near = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringAlignment Center = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringAlignment Far = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXStringTrimming: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXStringTrimming None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringTrimming Character = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringTrimming Word = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringTrimming EllipsisCharacter = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringTrimming EllipsisWord = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringTrimming EllipsisPath = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXTextRenderingHint: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXTextRenderingHint SystemDefault = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXTextRenderingHint SingleBitPerPixelGridFit = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXTextRenderingHint SingleBitPerPixel = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXTextRenderingHint AntiAliasGridFit = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXTextRenderingHint AntiAlias = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXTextRenderingHint ClearTypeGridFit = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXWrapMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXWrapMode Tile = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXWrapMode TileFlipX = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXWrapMode TileFlipY = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXWrapMode TileFlipXY = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXWrapMode Clamp = 4 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.DXGraphics: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.IDXGraphics): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Single DpiX 'get ' : 
    Single DpiY 'get ' : 
    System.Drawing.RectangleF ClipBounds 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit PageUnit 'get set' : 
    Single PageScale 'get set' : 
    DevExpress.Drawing.DXSmoothingMode SmoothingMode 'get set' : 
    DevExpress.Drawing.DXCompositingMode CompositingMode 'get set' : 
    DevExpress.Drawing.DXInterpolationMode InterpolationMode 'get set' : 
    DevExpress.Drawing.DXTextRenderingHint TextRenderingHint 'get set' : 
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
  Methods:
    FromImage(DXBitmap): PrivateScope, Public, Static, HideBySig
    get_DpiX(): PrivateScope, Public, HideBySig, SpecialName
    get_DpiY(): PrivateScope, Public, HideBySig, SpecialName
    get_ClipBounds(): PrivateScope, Public, HideBySig, SpecialName
    get_PageUnit(): PrivateScope, Public, HideBySig, SpecialName
    set_PageUnit(DXGraphicsUnit): PrivateScope, Public, HideBySig, SpecialName
    get_PageScale(): PrivateScope, Public, HideBySig, SpecialName
    set_PageScale(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SmoothingMode(): PrivateScope, Public, HideBySig, SpecialName
    set_SmoothingMode(DXSmoothingMode): PrivateScope, Public, HideBySig, SpecialName
    get_CompositingMode(): PrivateScope, Public, HideBySig, SpecialName
    set_CompositingMode(DXCompositingMode): PrivateScope, Public, HideBySig, SpecialName
    get_InterpolationMode(): PrivateScope, Public, HideBySig, SpecialName
    set_InterpolationMode(DXInterpolationMode): PrivateScope, Public, HideBySig, SpecialName
    get_TextRenderingHint(): PrivateScope, Public, HideBySig, SpecialName
    set_TextRenderingHint(DXTextRenderingHint): PrivateScope, Public, HideBySig, SpecialName
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
    set_Transform(DXMatrix): PrivateScope, Public, HideBySig, SpecialName
    DrawArc(DXPen, RectangleF, Single, Single): PrivateScope, Public, HideBySig
    DrawBezier(DXPen, PointF, PointF, PointF, PointF): PrivateScope, Public, HideBySig
    DrawBeziers(DXPen, PointF[]): PrivateScope, Public, HideBySig
    DrawEllipse(DXPen, RectangleF): PrivateScope, Public, HideBySig
    DrawImage(DXImage, Int32, Int32): PrivateScope, Public, HideBySig
    DrawImage(DXImage, RectangleF): PrivateScope, Public, HideBySig
    DrawImage(DXImage, RectangleF, RectangleF): PrivateScope, Public, HideBySig
    DrawLine(DXPen, PointF, PointF): PrivateScope, Public, HideBySig
    DrawLine(DXPen, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    DrawLines(DXPen, PointF[]): PrivateScope, Public, HideBySig
    DrawLines(DXPen, Point[]): PrivateScope, Public, HideBySig
    DrawPath(DXPen, DXGraphicsPath): PrivateScope, Public, HideBySig
    DrawPie(DXPen, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    DrawPolygon(DXPen, PointF[]): PrivateScope, Public, HideBySig
    DrawRectangle(DXPen, RectangleF): PrivateScope, Public, HideBySig
    DrawString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, HideBySig
    DrawString(String, DXFont, DXBrush, PointF, DXStringFormat): PrivateScope, Public, HideBySig
    FillEllipse(DXBrush, RectangleF): PrivateScope, Public, HideBySig
    FillPath(DXBrush, DXGraphicsPath): PrivateScope, Public, HideBySig
    FillPie(DXBrush, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    FillPolygon(DXBrush, PointF[]): PrivateScope, Public, HideBySig
    FillRectangle(DXBrush, RectangleF): PrivateScope, Public, HideBySig
    FillRectangle(DXBrush, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    FillRectangles(DXBrush, IList`1): PrivateScope, Public, HideBySig
    FillRegion(DXBrush, DXRegion): PrivateScope, Public, HideBySig
    MeasureString(String, DXFont, Single, DXStringFormat): PrivateScope, Public, HideBySig
    MeasureString(String, DXFont, SizeF, DXStringFormat): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
    Save(): PrivateScope, Public, HideBySig
    Restore(Object): PrivateScope, Public, HideBySig
    ResetTransform(): PrivateScope, Public, HideBySig
    RotateTransform(Single): PrivateScope, Public, HideBySig
    RotateTransform(Single, DXMatrixOrder): PrivateScope, Public, HideBySig
    ScaleTransform(Single, Single): PrivateScope, Public, HideBySig
    ScaleTransform(Single, Single, DXMatrixOrder): PrivateScope, Public, HideBySig
    TranslateTransform(Single, Single): PrivateScope, Public, HideBySig
    TranslateTransform(Single, Single, DXMatrixOrder): PrivateScope, Public, HideBySig
    MultiplyTransform(DXMatrix): PrivateScope, Public, HideBySig
    MultiplyTransform(DXMatrix, DXMatrixOrder): PrivateScope, Public, HideBySig
    SetClip(RectangleF): PrivateScope, Public, HideBySig
    SetClip(RectangleF, DXClipCombineMode): PrivateScope, Public, HideBySig
    SetClip(DXGraphicsPath): PrivateScope, Public, HideBySig
    SetClip(DXGraphicsPath, DXClipCombineMode): PrivateScope, Public, HideBySig
    SetClip(DXRegion): PrivateScope, Public, HideBySig
    SetClip(DXRegion, DXClipCombineMode): PrivateScope, Public, HideBySig
    GetClip(): PrivateScope, Public, HideBySig
    Clear(Color): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.DXMargins: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.DXMargins]
  Properties:
    Single Left 'get set' : 
    Single Right 'get set' : 
    Single Top 'get set' : 
    Single Bottom 'get set' : 
  Methods:
    op_Implicit(DXMargins): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Margins): PrivateScope, Public, Static, HideBySig, SpecialName
    ConvertToMarginF(DXMargins): PrivateScope, Assembly, Static, HideBySig
    ConvertToMarginF(DXMargins, Single): PrivateScope, Assembly, Static, HideBySig
    ConvertFromMarginF(MarginsF): PrivateScope, Assembly, Static, HideBySig
    ConvertFromMarginF(MarginsF, Single): PrivateScope, Assembly, Static, HideBySig
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    set_Bottom(Single): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DXMargins): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
    op_Equality(DXMargins, DXMargins): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DXMargins, DXMargins): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.DXFontAdditionalProperty: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String GdiCharSet = GdiCharSet : Public, Static, Literal, HasDefault
    System.String GdiVerticalFont = GdiVerticalFont : Public, Static, Literal, HasDefault
  Properties:
    System.String Name 'get set' : 
    System.Object Value 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.DXClipCombineMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXClipCombineMode Replace = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXClipCombineMode Intersect = 1 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXFontData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, System.String, Int32, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, DevExpress.Drawing.Internal.Fonts.DXFontInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FilePath 'get ' : 
    System.String Name 'get ' : 
    Int32 TtcIndex 'get ' : 
    Boolean Bold 'get ' : 
    Boolean Italic 'get ' : 
  Methods:
    get_FilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_TtcIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_Bold(): PrivateScope, Public, HideBySig, SpecialName
    get_Italic(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.DXFontRepository: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    DevExpress.Drawing.DXFontRepository Instance 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    AddFont(String): PrivateScope, Public, HideBySig
    AddFont(Byte[]): PrivateScope, Public, HideBySig
    AddFont(Stream): PrivateScope, Public, HideBySig
    RaiseOnChanged(): PrivateScope, Assembly, HideBySig
    RegisterListener(IFontRepositoryListener): PrivateScope, Assembly, HideBySig
    UnregisterListener(IFontRepositoryListener): PrivateScope, Assembly, HideBySig
    GetFontProvider(): PrivateScope, Assembly, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    GetFonts(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.DXFontAdditionalPropertyCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[DevExpress.Drawing.DXFontAdditionalProperty]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXFontAdditionalProperty Item [System.String] 'get ' : 
  Methods:
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    AddRange(IList`1): PrivateScope, Public, HideBySig
    GetGdiCharSet(): PrivateScope, Assembly, HideBySig
    GetGdiVerticalFont(): PrivateScope, Assembly, HideBySig
Struct DevExpress.Drawing.DXFillMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXFillMode Alternate = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXFillMode Winding = 1 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.DXGraphicsPathData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF], System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType], DevExpress.Drawing.DXFillMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF], System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.IDXGraphicsPath): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF] PathPoints 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType] PathTypes 'get ' : 
    DevExpress.Drawing.DXFillMode FillMode 'get ' : 
  Methods:
    get_PathPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_PathTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_FillMode(): PrivateScope, Public, HideBySig, SpecialName
    FromRectangle(RectangleF): PrivateScope, Assembly, Static, HideBySig
    GetBounds(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.DXFont: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.String, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Single, DevExpress.Drawing.DXFontStyle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Single, DevExpress.Drawing.DXFontStyle, DevExpress.Drawing.DXGraphicsUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Single, DevExpress.Drawing.DXFontStyle, DevExpress.Drawing.DXGraphicsUnit, DevExpress.Drawing.DXFontAdditionalProperty[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXFont, DevExpress.Drawing.DXFontStyle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXFont, Single): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.DXFont]
  Properties:
    System.String Name 'get ' : 
    Single Size 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit Unit 'get ' : 
    Single SizeInPoints 'get ' : 
    Boolean Bold 'get ' : 
    Boolean Italic 'get ' : 
    Boolean Strikeout 'get ' : 
    Boolean Underline 'get ' : 
    DevExpress.Drawing.DXFontStyle Style 'get ' : 
    DevExpress.Drawing.DXFontAdditionalPropertyCollection AdditionalProperties 'get ' : 
    System.Lazy`1[DevExpress.Drawing.Internal.DXPlatformFontInfo] PlatformFontInfo 'get ' : 
    Int32 Height 'get ' : 
    Single Ascent 'get ' : 
    Single Descent 'get ' : 
    Single LineSpacing 'get ' : 
    System.String ActualName 'get ' : 
  Methods:
    op_Implicit(DXFont): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Font): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Unit(): PrivateScope, Public, HideBySig, SpecialName
    get_SizeInPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_Bold(): PrivateScope, Public, HideBySig, SpecialName
    get_Italic(): PrivateScope, Public, HideBySig, SpecialName
    get_Strikeout(): PrivateScope, Public, HideBySig, SpecialName
    get_Underline(): PrivateScope, Public, HideBySig, SpecialName
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_PlatformFontInfo(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Ascent(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Descent(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LineSpacing(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ActualName(): PrivateScope, Assembly, HideBySig, SpecialName
    GetHeight(DXGraphicsUnit): PrivateScope, Public, HideBySig
    GetHeight(Single): PrivateScope, Public, HideBySig
    CalculateHeight(Int32, Single): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DXFont): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.DXBitmap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXImage
    Void .ctor(DevExpress.Drawing.Internal.IDXBitmap): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, System.Drawing.Imaging.PixelFormat, System.Drawing.Color[], Byte[], Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, DevExpress.Drawing.Internal.DXPixelFormat, DevExpress.Drawing.Internal.DXPalette, Byte[], Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXImage, System.Action`1[DevExpress.Drawing.Internal.IDXGraphics]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXImage, Int32, Int32, System.Action`1[DevExpress.Drawing.Internal.IDXGraphics]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, DevExpress.Drawing.Internal.DXPixelFormat): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.DXPixelFormat PixelFormat 'get ' : 
    DevExpress.Drawing.Internal.DXPalette Palette 'get ' : 
    Boolean CanGetPixels 'get ' : 
  Methods:
    get_PixelFormat(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Palette(): PrivateScope, Assembly, HideBySig, SpecialName
    get_CanGetPixels(): PrivateScope, Assembly, HideBySig, SpecialName
    Crop(Rectangle): PrivateScope, Public, HideBySig
    Crop(RectangleF): PrivateScope, Public, HideBySig
    GetPixel(Int32, Int32): PrivateScope, Public, HideBySig
    SetResolution(Single, Single): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Equals(DXBitmap): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Virtual, HideBySig
    CloneBitmap(): PrivateScope, Assembly, HideBySig
    GetBitmapData(DXImageLockMode(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    GetBitmapData(Rectangle, DXImageLockMode, DXPixelFormat): PrivateScope, Assembly, HideBySig
    Convert(DXPixelFormat): PrivateScope, Assembly, HideBySig
    ConvertToJpeg(Stream, Int64): PrivateScope, Assembly, HideBySig
Class DevExpress.Drawing.DXImage: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.DXImage]
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Single HorizontalResolution 'get ' : 
    Single VerticalResolution 'get ' : 
    DevExpress.Drawing.DXImageFormat ImageFormat 'get ' : 
    DevExpress.Drawing.Internal.DXImageProperties ImageProperties 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions ImageFormatOptions 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Int32 NumberOfFrames 'get ' : 
    System.Drawing.SizeF PhysicalDimension 'get ' : 
    System.Object NativeImage 'get ' : 
    Boolean IsDisposedOrInvalid 'get ' : 
    System.Drawing.RectangleF Bounds 'get ' : 
  Methods:
    op_Implicit(DXImage): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Image): PrivateScope, Public, Static, HideBySig, SpecialName
    FromStream(Stream): PrivateScope, Public, Static, HideBySig
    FromBase64String(String): PrivateScope, Public, Static, HideBySig
    Equals(DXImage, DXImage): PrivateScope, Assembly, Static, HideBySig
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalResolution(): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalResolution(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageProperties(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ImageFormatOptions(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfFrames(): PrivateScope, Assembly, HideBySig, SpecialName
    get_PhysicalDimension(): PrivateScope, Assembly, HideBySig, SpecialName
    get_NativeImage(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsDisposedOrInvalid(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    Save(Stream): PrivateScope, Public, HideBySig
    Save(Stream, DXImageFormat): PrivateScope, Public, HideBySig
    Save(String, DXImageFormat): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Equals(DXImage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormatOptions): PrivateScope, Assembly, HideBySig
    Save(String, DXImageFormatOptions): PrivateScope, Assembly, HideBySig
    FlipVertical(): PrivateScope, Assembly, HideBySig
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateGraphics(): PrivateScope, Assembly, HideBySig
Class DevExpress.Drawing.DXMetafile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXImage
    Void .ctor(DevExpress.Drawing.Internal.IDXMetafile): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size, DevExpress.Drawing.Internal.DXMetafileFrameUnit, DevExpress.Drawing.Internal.DXEmfType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Drawing.Size, DevExpress.Drawing.Internal.DXMetafileFrameUnit, DevExpress.Drawing.Internal.DXEmfType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.DXMetafile]
  Properties:
    DevExpress.Drawing.Internal.DXMetafileHeader Header 'get ' : 
    System.Drawing.RectangleF Bounds 'get ' : 
  Methods:
    get_Header(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Equals(DXMetafile): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToEmfMetafileModel(): PrivateScope, Assembly, HideBySig
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Drawing.DXDashStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXDashStyle Solid = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXDashStyle Dash = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXDashStyle Dot = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXDashStyle DashDot = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXDashStyle DashDotDot = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXDashStyle Custom = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXLineCap: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXLineCap Flat = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap Square = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap Round = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap Triangle = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap NoAnchor = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap SquareAnchor = 17 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap RoundAnchor = 18 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap DiamondAnchor = 19 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap ArrowAnchor = 20 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap Custom = 255 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineCap AnchorMask = 240 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXLineJoin: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXLineJoin Miter = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineJoin Bevel = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineJoin Round = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXLineJoin MiterClipped = 3 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXPenAlignment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXPenAlignment Center = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPenAlignment Inset = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPenAlignment Outset = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPenAlignment Left = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPenAlignment Right = 4 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.DXPens: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    DevExpress.Drawing.DXPen Transparent 'get ' : 
    DevExpress.Drawing.DXPen AliceBlue 'get ' : 
    DevExpress.Drawing.DXPen AntiqueWhite 'get ' : 
    DevExpress.Drawing.DXPen Aqua 'get ' : 
    DevExpress.Drawing.DXPen Aquamarine 'get ' : 
    DevExpress.Drawing.DXPen Azure 'get ' : 
    DevExpress.Drawing.DXPen Beige 'get ' : 
    DevExpress.Drawing.DXPen Bisque 'get ' : 
    DevExpress.Drawing.DXPen Black 'get ' : 
    DevExpress.Drawing.DXPen BlanchedAlmond 'get ' : 
    DevExpress.Drawing.DXPen Blue 'get ' : 
    DevExpress.Drawing.DXPen BlueViolet 'get ' : 
    DevExpress.Drawing.DXPen Brown 'get ' : 
    DevExpress.Drawing.DXPen BurlyWood 'get ' : 
    DevExpress.Drawing.DXPen CadetBlue 'get ' : 
    DevExpress.Drawing.DXPen Chartreuse 'get ' : 
    DevExpress.Drawing.DXPen Chocolate 'get ' : 
    DevExpress.Drawing.DXPen Coral 'get ' : 
    DevExpress.Drawing.DXPen CornflowerBlue 'get ' : 
    DevExpress.Drawing.DXPen Cornsilk 'get ' : 
    DevExpress.Drawing.DXPen Crimson 'get ' : 
    DevExpress.Drawing.DXPen Cyan 'get ' : 
    DevExpress.Drawing.DXPen DarkBlue 'get ' : 
    DevExpress.Drawing.DXPen DarkCyan 'get ' : 
    DevExpress.Drawing.DXPen DarkGoldenrod 'get ' : 
    DevExpress.Drawing.DXPen DarkGray 'get ' : 
    DevExpress.Drawing.DXPen DarkGreen 'get ' : 
    DevExpress.Drawing.DXPen DarkKhaki 'get ' : 
    DevExpress.Drawing.DXPen DarkMagenta 'get ' : 
    DevExpress.Drawing.DXPen DarkOliveGreen 'get ' : 
    DevExpress.Drawing.DXPen DarkOrange 'get ' : 
    DevExpress.Drawing.DXPen DarkOrchid 'get ' : 
    DevExpress.Drawing.DXPen DarkRed 'get ' : 
    DevExpress.Drawing.DXPen DarkSalmon 'get ' : 
    DevExpress.Drawing.DXPen DarkSeaGreen 'get ' : 
    DevExpress.Drawing.DXPen DarkSlateBlue 'get ' : 
    DevExpress.Drawing.DXPen DarkSlateGray 'get ' : 
    DevExpress.Drawing.DXPen DarkTurquoise 'get ' : 
    DevExpress.Drawing.DXPen DarkViolet 'get ' : 
    DevExpress.Drawing.DXPen DeepPink 'get ' : 
    DevExpress.Drawing.DXPen DeepSkyBlue 'get ' : 
    DevExpress.Drawing.DXPen DimGray 'get ' : 
    DevExpress.Drawing.DXPen DodgerBlue 'get ' : 
    DevExpress.Drawing.DXPen Firebrick 'get ' : 
    DevExpress.Drawing.DXPen FloralWhite 'get ' : 
    DevExpress.Drawing.DXPen ForestGreen 'get ' : 
    DevExpress.Drawing.DXPen Fuchsia 'get ' : 
    DevExpress.Drawing.DXPen Gainsboro 'get ' : 
    DevExpress.Drawing.DXPen GhostWhite 'get ' : 
    DevExpress.Drawing.DXPen Gold 'get ' : 
    DevExpress.Drawing.DXPen Goldenrod 'get ' : 
    DevExpress.Drawing.DXPen Gray 'get ' : 
    DevExpress.Drawing.DXPen Green 'get ' : 
    DevExpress.Drawing.DXPen GreenYellow 'get ' : 
    DevExpress.Drawing.DXPen Honeydew 'get ' : 
    DevExpress.Drawing.DXPen HotPink 'get ' : 
    DevExpress.Drawing.DXPen IndianRed 'get ' : 
    DevExpress.Drawing.DXPen Indigo 'get ' : 
    DevExpress.Drawing.DXPen Ivory 'get ' : 
    DevExpress.Drawing.DXPen Khaki 'get ' : 
    DevExpress.Drawing.DXPen Lavender 'get ' : 
    DevExpress.Drawing.DXPen LavenderBlush 'get ' : 
    DevExpress.Drawing.DXPen LawnGreen 'get ' : 
    DevExpress.Drawing.DXPen LemonChiffon 'get ' : 
    DevExpress.Drawing.DXPen LightBlue 'get ' : 
    DevExpress.Drawing.DXPen LightCoral 'get ' : 
    DevExpress.Drawing.DXPen LightCyan 'get ' : 
    DevExpress.Drawing.DXPen LightGoldenrodYellow 'get ' : 
    DevExpress.Drawing.DXPen LightGray 'get ' : 
    DevExpress.Drawing.DXPen LightGreen 'get ' : 
    DevExpress.Drawing.DXPen LightPink 'get ' : 
    DevExpress.Drawing.DXPen LightSalmon 'get ' : 
    DevExpress.Drawing.DXPen LightSeaGreen 'get ' : 
    DevExpress.Drawing.DXPen LightSkyBlue 'get ' : 
    DevExpress.Drawing.DXPen LightSlateGray 'get ' : 
    DevExpress.Drawing.DXPen LightSteelBlue 'get ' : 
    DevExpress.Drawing.DXPen LightYellow 'get ' : 
    DevExpress.Drawing.DXPen Lime 'get ' : 
    DevExpress.Drawing.DXPen LimeGreen 'get ' : 
    DevExpress.Drawing.DXPen Linen 'get ' : 
    DevExpress.Drawing.DXPen Magenta 'get ' : 
    DevExpress.Drawing.DXPen Maroon 'get ' : 
    DevExpress.Drawing.DXPen MediumAquamarine 'get ' : 
    DevExpress.Drawing.DXPen MediumBlue 'get ' : 
    DevExpress.Drawing.DXPen MediumOrchid 'get ' : 
    DevExpress.Drawing.DXPen MediumPurple 'get ' : 
    DevExpress.Drawing.DXPen MediumSeaGreen 'get ' : 
    DevExpress.Drawing.DXPen MediumSlateBlue 'get ' : 
    DevExpress.Drawing.DXPen MediumSpringGreen 'get ' : 
    DevExpress.Drawing.DXPen MediumTurquoise 'get ' : 
    DevExpress.Drawing.DXPen MediumVioletRed 'get ' : 
    DevExpress.Drawing.DXPen MidnightBlue 'get ' : 
    DevExpress.Drawing.DXPen MintCream 'get ' : 
    DevExpress.Drawing.DXPen MistyRose 'get ' : 
    DevExpress.Drawing.DXPen Moccasin 'get ' : 
    DevExpress.Drawing.DXPen NavajoWhite 'get ' : 
    DevExpress.Drawing.DXPen Navy 'get ' : 
    DevExpress.Drawing.DXPen OldLace 'get ' : 
    DevExpress.Drawing.DXPen Olive 'get ' : 
    DevExpress.Drawing.DXPen OliveDrab 'get ' : 
    DevExpress.Drawing.DXPen Orange 'get ' : 
    DevExpress.Drawing.DXPen OrangeRed 'get ' : 
    DevExpress.Drawing.DXPen Orchid 'get ' : 
    DevExpress.Drawing.DXPen PaleGoldenrod 'get ' : 
    DevExpress.Drawing.DXPen PaleGreen 'get ' : 
    DevExpress.Drawing.DXPen PaleTurquoise 'get ' : 
    DevExpress.Drawing.DXPen PaleVioletRed 'get ' : 
    DevExpress.Drawing.DXPen PapayaWhip 'get ' : 
    DevExpress.Drawing.DXPen PeachPuff 'get ' : 
    DevExpress.Drawing.DXPen Peru 'get ' : 
    DevExpress.Drawing.DXPen Pink 'get ' : 
    DevExpress.Drawing.DXPen Plum 'get ' : 
    DevExpress.Drawing.DXPen PowderBlue 'get ' : 
    DevExpress.Drawing.DXPen Purple 'get ' : 
    DevExpress.Drawing.DXPen Red 'get ' : 
    DevExpress.Drawing.DXPen RosyBrown 'get ' : 
    DevExpress.Drawing.DXPen RoyalBlue 'get ' : 
    DevExpress.Drawing.DXPen SaddleBrown 'get ' : 
    DevExpress.Drawing.DXPen Salmon 'get ' : 
    DevExpress.Drawing.DXPen SandyBrown 'get ' : 
    DevExpress.Drawing.DXPen SeaGreen 'get ' : 
    DevExpress.Drawing.DXPen SeaShell 'get ' : 
    DevExpress.Drawing.DXPen Sienna 'get ' : 
    DevExpress.Drawing.DXPen Silver 'get ' : 
    DevExpress.Drawing.DXPen SkyBlue 'get ' : 
    DevExpress.Drawing.DXPen SlateBlue 'get ' : 
    DevExpress.Drawing.DXPen SlateGray 'get ' : 
    DevExpress.Drawing.DXPen Snow 'get ' : 
    DevExpress.Drawing.DXPen SpringGreen 'get ' : 
    DevExpress.Drawing.DXPen SteelBlue 'get ' : 
    DevExpress.Drawing.DXPen Tan 'get ' : 
    DevExpress.Drawing.DXPen Teal 'get ' : 
    DevExpress.Drawing.DXPen Thistle 'get ' : 
    DevExpress.Drawing.DXPen Tomato 'get ' : 
    DevExpress.Drawing.DXPen Turquoise 'get ' : 
    DevExpress.Drawing.DXPen Violet 'get ' : 
    DevExpress.Drawing.DXPen Wheat 'get ' : 
    DevExpress.Drawing.DXPen White 'get ' : 
    DevExpress.Drawing.DXPen WhiteSmoke 'get ' : 
    DevExpress.Drawing.DXPen Yellow 'get ' : 
    DevExpress.Drawing.DXPen YellowGreen 'get ' : 
  Methods:
    get_SpringGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SteelBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Teal(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Thistle(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tomato(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Turquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Violet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Wheat(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_White(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WhiteSmoke(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Yellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_YellowGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Transparent(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AliceBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AntiqueWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Aqua(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Aquamarine(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Azure(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Beige(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bisque(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Black(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlanchedAlmond(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlueViolet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Brown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BurlyWood(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CadetBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Chartreuse(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Chocolate(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Coral(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CornflowerBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cornsilk(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Crimson(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cyan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkCyan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkGoldenrod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkKhaki(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkMagenta(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkOliveGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkOrange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkOrchid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSalmon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSlateBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSlateGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkTurquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkViolet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DeepPink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DeepSkyBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DimGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DodgerBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Firebrick(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FloralWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ForestGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Fuchsia(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gainsboro(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GhostWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gold(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Goldenrod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GreenYellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Honeydew(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HotPink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IndianRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Indigo(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ivory(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Khaki(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Lavender(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LavenderBlush(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LawnGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LemonChiffon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightCoral(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightCyan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightGoldenrodYellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightPink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSalmon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSkyBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSlateGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSteelBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightYellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Lime(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LimeGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Linen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Magenta(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Maroon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumAquamarine(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumOrchid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumPurple(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumSeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumSlateBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumSpringGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumTurquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumVioletRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MidnightBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MintCream(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MistyRose(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Moccasin(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NavajoWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Navy(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OldLace(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Olive(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OliveDrab(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Orange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OrangeRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Orchid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleGoldenrod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleTurquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleVioletRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PapayaWhip(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PeachPuff(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Peru(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Pink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Plum(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PowderBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Purple(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Red(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RosyBrown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RoyalBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SaddleBrown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Salmon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SandyBrown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SeaShell(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sienna(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Silver(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SkyBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SlateBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SlateGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Snow(): PrivateScope, Public, Static, HideBySig, SpecialName
Class DevExpress.Drawing.DXAdjustableArrowCap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXCustomLineCapBase
    Void .ctor(Single, Single, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Width 'get set' : 
    Single Height 'get set' : 
    Single MiddleInset 'get set' : 
    Boolean Filled 'get set' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleInset(): PrivateScope, Public, HideBySig, SpecialName
    set_MiddleInset(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Filled(): PrivateScope, Public, HideBySig, SpecialName
    set_Filled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.DXBrush: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.DXBrush]
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Accept(IDXBrushVisitor): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.DXCustomLineCap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXCustomLineCapBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXLineCap BaseCap 'get set' : 
    Single BaseInset 'get set' : 
    DevExpress.Drawing.DXGraphicsPathData FillPath 'get set' : 
    DevExpress.Drawing.DXGraphicsPathData StrokePath 'get set' : 
  Methods:
    get_BaseCap(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseCap(DXLineCap): PrivateScope, Public, HideBySig, SpecialName
    get_BaseInset(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseInset(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FillPath(): PrivateScope, Public, HideBySig, SpecialName
    set_FillPath(DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName
    get_StrokePath(): PrivateScope, Public, HideBySig, SpecialName
    set_StrokePath(DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.DXCustomLineCapBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    DevExpress.Drawing.DXLineCap StrokeStartCap 'get set' : 
    DevExpress.Drawing.DXLineCap StrokeEndCap 'get set' : 
    DevExpress.Drawing.DXLineJoin StrokeJoin 'get set' : 
    Single StrokeMiterLimit 'get set' : 
    Single WidthScale 'get set' : 
  Methods:
    get_StrokeStartCap(): PrivateScope, Public, HideBySig, SpecialName
    set_StrokeStartCap(DXLineCap): PrivateScope, Public, HideBySig, SpecialName
    get_StrokeEndCap(): PrivateScope, Public, HideBySig, SpecialName
    set_StrokeEndCap(DXLineCap): PrivateScope, Public, HideBySig, SpecialName
    get_StrokeJoin(): PrivateScope, Public, HideBySig, SpecialName
    set_StrokeJoin(DXLineJoin): PrivateScope, Public, HideBySig, SpecialName
    get_StrokeMiterLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_StrokeMiterLimit(Single): PrivateScope, Public, HideBySig, SpecialName
    get_WidthScale(): PrivateScope, Public, HideBySig, SpecialName
    set_WidthScale(Single): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Drawing.DXPenType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXPenType SolidColor = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPenType HatchFill = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPenType TextureFill = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPenType PathGradient = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPenType LinearGradient = 4 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.ResFinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Drawing.DXGraphicsPath: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXFillMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF], System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType], DevExpress.Drawing.DXFillMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.IDXGraphicsPath): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 PointCount 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF] PathPoints 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType] PathTypes 'get ' : 
    DevExpress.Drawing.DXFillMode FillMode 'get set' : 
  Methods:
    get_PointCount(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PathPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_PathTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_FillMode(): PrivateScope, Public, HideBySig, SpecialName
    set_FillMode(DXFillMode): PrivateScope, Public, HideBySig, SpecialName
    AddLines(IReadOnlyList`1): PrivateScope, Assembly, HideBySig
    AddRectangle(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddRectangles(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddLine(Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddLine(PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddLines(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddEllipse(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddEllipse(Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddPie(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddPie(Rectangle, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddPath(DXGraphicsPath, Boolean): PrivateScope, Public, HideBySig
    AddBezier(PointF, PointF, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddBezier(Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddBeziers(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddArc(RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddArc(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddPolygon(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddString(String, DXFont, PointF, DXStringFormat): PrivateScope, Public, HideBySig
    AddString(String, DXFont, RectangleF, DXStringFormat): PrivateScope, Public, HideBySig
    AddCurve(PointF[], Single): PrivateScope, Public, HideBySig
    AddCurve(PointF[]): PrivateScope, Public, HideBySig
    StartFigure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseFigure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Transform(DXMatrix): PrivateScope, Public, HideBySig
    GetBounds(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Widen(DXPen, DXMatrix): PrivateScope, Public, HideBySig
    Widen(DXPen): PrivateScope, Public, HideBySig
    IsVisible(PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsVisible(Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flatten(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flatten(DXMatrix): PrivateScope, Public, HideBySig
    Flatten(DXMatrix, Single): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    GetPathData(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    GetLastPoint(): PrivateScope, Public, HideBySig
    WindingOutline(Single): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct DevExpress.Drawing.DXHatchStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXHatchStyle Horizontal = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Vertical = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle ForwardDiagonal = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle BackwardDiagonal = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Cross = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DiagonalCross = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent05 = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent10 = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent20 = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent25 = 9 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent30 = 10 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent40 = 11 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent50 = 12 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent60 = 13 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent70 = 14 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent75 = 15 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent80 = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Percent90 = 17 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle LightDownwardDiagonal = 18 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle LightUpwardDiagonal = 19 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DarkDownwardDiagonal = 20 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DarkUpwardDiagonal = 21 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle WideDownwardDiagonal = 22 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle WideUpwardDiagonal = 23 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle LightVertical = 24 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle LightHorizontal = 25 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle NarrowVertical = 26 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle NarrowHorizontal = 27 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DarkVertical = 28 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DarkHorizontal = 29 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DashedDownwardDiagonal = 30 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DashedUpwardDiagonal = 31 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DashedHorizontal = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DashedVertical = 33 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle SmallConfetti = 34 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle LargeConfetti = 35 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle ZigZag = 36 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Wave = 37 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DiagonalBrick = 38 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle HorizontalBrick = 39 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Weave = 40 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Plaid = 41 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Divot = 42 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DottedGrid = 43 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle DottedDiamond = 44 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Shingle = 45 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Trellis = 46 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Sphere = 47 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle SmallGrid = 48 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle SmallCheckerBoard = 49 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle LargeCheckerBoard = 50 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle OutlinedDiamond = 51 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle SolidDiamond = 52 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle LargeGrid = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Min = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXHatchStyle Max = 4 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.DXHatchBrush: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXBrush
    Void .ctor(DevExpress.Drawing.DXHatchStyle, System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXHatchStyle HatchStyle 'get ' : 
    System.Drawing.Color ForegroundColor 'get ' : 
    System.Drawing.Color BackgroundColor 'get ' : 
  Methods:
    get_HatchStyle(): PrivateScope, Public, HideBySig, SpecialName
    get_ForegroundColor(): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    Accept(IDXBrushVisitor): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Clone(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.DXLinearGradientBrush: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXTilingBrush
    Void .ctor(System.Drawing.PointF, System.Drawing.PointF, System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, System.Drawing.Color, System.Drawing.Color, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, System.Drawing.Color, System.Drawing.Color, DevExpress.Drawing.DXLinearGradientMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXBlend DefaultBlend 'get ' : 
    DevExpress.Drawing.DXLinearGradientMode Mode 'get ' : 
    DevExpress.Drawing.DXColorBlend InterpolationColors 'get set' : 
    DevExpress.Drawing.DXBlend Blend 'get set' : 
    System.Drawing.Color[] LinearColors 'get set' : 
    System.Drawing.RectangleF Rectangle 'get set' : 
    Boolean GammaCorrection 'get set' : 
  Methods:
    get_DefaultBlend(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Mode(): PrivateScope, Assembly, HideBySig, SpecialName
    get_InterpolationColors(): PrivateScope, Public, HideBySig, SpecialName
    set_InterpolationColors(DXColorBlend): PrivateScope, Public, HideBySig, SpecialName
    get_Blend(): PrivateScope, Public, HideBySig, SpecialName
    set_Blend(DXBlend): PrivateScope, Public, HideBySig, SpecialName
    get_LinearColors(): PrivateScope, Public, HideBySig, SpecialName
    set_LinearColors(Color[]): PrivateScope, Public, HideBySig, SpecialName
    get_Rectangle(): PrivateScope, Public, HideBySig, SpecialName
    set_Rectangle(RectangleF): PrivateScope, Public, HideBySig, SpecialName
    get_GammaCorrection(): PrivateScope, Assembly, HideBySig, SpecialName
    set_GammaCorrection(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    SetSigmaBellShape(Single, Single(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    Accept(IDXBrushVisitor): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Clone(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    SetBlendTriangularShape(Single): PrivateScope, Public, HideBySig
    SetBlendTriangularShape(Single, Single): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.DXMatrix: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single[] Elements 'get ' : 
    Single OffsetX 'get ' : 
    Single OffsetY 'get ' : 
    Boolean IsInvertible 'get ' : 
    Boolean IsIdentity 'get ' : 
    Single A   'get ' : 
    Single B   'get ' : 
    Single C   'get ' : 
    Single D   'get ' : 
    Single E   'get ' : 
    Single F   'get ' : 
  Methods:
    CreateRotateMatrix(Single): PrivateScope, Public, Static, HideBySig
    CreateScaleMatrix(Single, Single): PrivateScope, Public, Static, HideBySig
    CreateTranslateMatrix(Single, Single): PrivateScope, Public, Static, HideBySig
    CreateShearMatrix(Single, Single): PrivateScope, Public, Static, HideBySig
    CreateWarpMatrix(RectangleF, RectangleF): PrivateScope, Public, Static, HideBySig
    CreateWarpMatrix(RectangleF, IReadOnlyList`1): PrivateScope, Public, Static, HideBySig
    CreateWarpMatrix(IReadOnlyList`1, IReadOnlyList`1): PrivateScope, Assembly, Static, HideBySig
    CreateRotateFlipMatrix(DXRotateFlipType, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInvertible(): PrivateScope, Public, HideBySig, SpecialName
    get_IsIdentity(): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    get_C(): PrivateScope, Public, HideBySig, SpecialName
    get_D(): PrivateScope, Public, HideBySig, SpecialName
    get_E(): PrivateScope, Public, HideBySig, SpecialName
    get_F(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    Translate(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Scale(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Rotate(Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    RotateAt(Single, PointF, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Shear(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Multiply(DXMatrix, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Invert(): PrivateScope, Public, HideBySig
    TransformPoints(PointF[]): PrivateScope, Public, HideBySig
    TransformPoint(PointF): PrivateScope, Public, HideBySig
    TransformPoints(IReadOnlyList`1): PrivateScope, Public, HideBySig
    Equals(DXMatrix): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.DXPathGradientBrush: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXTilingBrush
    Void .ctor(DevExpress.Drawing.DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXPathGradientBrush): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXBlend DefaultBlend 'get ' : 
    DevExpress.Drawing.DXGraphicsPathData PathData 'get ' : 
    DevExpress.Drawing.DXBlend Blend 'get set' : 
    DevExpress.Drawing.DXColorBlend InterpolationColors 'get set' : 
    System.Drawing.PointF FocusScales 'get set' : 
    System.Drawing.Color CenterColor 'get set' : 
    System.Nullable`1[System.Drawing.PointF] CenterPoint 'get set' : 
    System.Drawing.Color[] SurroundColors 'get set' : 
  Methods:
    get_DefaultBlend(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_PathData(): PrivateScope, Public, HideBySig, SpecialName
    get_Blend(): PrivateScope, Public, HideBySig, SpecialName
    set_Blend(DXBlend): PrivateScope, Public, HideBySig, SpecialName
    get_InterpolationColors(): PrivateScope, Public, HideBySig, SpecialName
    set_InterpolationColors(DXColorBlend): PrivateScope, Public, HideBySig, SpecialName
    get_FocusScales(): PrivateScope, Public, HideBySig, SpecialName
    set_FocusScales(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_CenterColor(): PrivateScope, Public, HideBySig, SpecialName
    set_CenterColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_CenterPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_CenterPoint(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_SurroundColors(): PrivateScope, Public, HideBySig, SpecialName
    set_SurroundColors(Color[]): PrivateScope, Public, HideBySig, SpecialName
    GetActualCenterPoint(): PrivateScope, Assembly, HideBySig
    GetSurroundingColor(Int32): PrivateScope, Assembly, HideBySig
    Accept(IDXBrushVisitor): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Clone(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Drawing.DXPathPointType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXPathPointType Start = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPathPointType Line = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPathPointType Bezier = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPathPointType PathTypeMask = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXPathPointType CloseSubpath = 128 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.DXDashCap: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXDashCap Flat = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXDashCap Square = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXDashCap Round = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXDashCap Triangle = 3 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.DXPen: AutoLayout, AnsiClass, Class, Public
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXBrush): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXBrush, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, Single, DevExpress.Drawing.DXLineCap): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.DXPen]
    System.IDisposable
  Fields:
    System.Collections.Generic.IDictionary`2[DevExpress.Drawing.DXDashStyle,System.Single[]] DashPatterns : Assembly, Static, InitOnly
  Properties:
    Boolean IsLineJoinInvisible 'get ' : 
    DevExpress.Drawing.DXPenAlignment Alignment 'get set' : 
    Single Width 'get set' : 
    System.Drawing.Color Color 'get set' : 
    DevExpress.Drawing.DXBrush Brush 'get set' : 
    DevExpress.Drawing.DXLineCap StartCap 'get set' : 
    DevExpress.Drawing.DXLineCap EndCap 'get set' : 
    Single MiterLimit 'get set' : 
    DevExpress.Drawing.DXDashCap DashCap 'get set' : 
    DevExpress.Drawing.DXDashStyle DashStyle 'get set' : 
    Single DashOffset 'get set' : 
    Single[] DashPattern 'get set' : 
    DevExpress.Drawing.DXLineJoin LineJoin 'get set' : 
    DevExpress.Drawing.DXCustomLineCapBase CustomStartCap 'get set' : 
    DevExpress.Drawing.DXCustomLineCapBase CustomEndCap 'get set' : 
    Single[] CompoundArray 'get set' : 
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
    DevExpress.Drawing.DXPenType PenType 'get ' : 
  Methods:
    get_IsLineJoinInvisible(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Alignment(DXPenAlignment): PrivateScope, Assembly, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Brush(): PrivateScope, Public, HideBySig, SpecialName
    set_Brush(DXBrush): PrivateScope, Public, HideBySig, SpecialName
    get_StartCap(): PrivateScope, Public, HideBySig, SpecialName
    set_StartCap(DXLineCap): PrivateScope, Public, HideBySig, SpecialName
    get_EndCap(): PrivateScope, Public, HideBySig, SpecialName
    set_EndCap(DXLineCap): PrivateScope, Public, HideBySig, SpecialName
    get_MiterLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_MiterLimit(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DashCap(): PrivateScope, Public, HideBySig, SpecialName
    set_DashCap(DXDashCap): PrivateScope, Public, HideBySig, SpecialName
    get_DashStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_DashStyle(DXDashStyle): PrivateScope, Public, HideBySig, SpecialName
    get_DashOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_DashOffset(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DashPattern(): PrivateScope, Public, HideBySig, SpecialName
    set_DashPattern(Single[]): PrivateScope, Public, HideBySig, SpecialName
    get_LineJoin(): PrivateScope, Public, HideBySig, SpecialName
    set_LineJoin(DXLineJoin): PrivateScope, Public, HideBySig, SpecialName
    get_CustomStartCap(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStartCap(DXCustomLineCapBase): PrivateScope, Public, HideBySig, SpecialName
    get_CustomEndCap(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomEndCap(DXCustomLineCapBase): PrivateScope, Public, HideBySig, SpecialName
    get_CompoundArray(): PrivateScope, Assembly, HideBySig, SpecialName
    set_CompoundArray(Single[]): PrivateScope, Assembly, HideBySig, SpecialName
    get_Transform(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Transform(DXMatrix): PrivateScope, Assembly, HideBySig, SpecialName
    get_PenType(): PrivateScope, Public, HideBySig, SpecialName
    MultiplyTransform(DXMatrix, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    ResetTransform(): PrivateScope, Assembly, HideBySig
    RotateTransform(Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    ScaleTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    TranslateTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DXPen): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.DXSolidBrush: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXBrush
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color Color 'get set' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    Accept(IDXBrushVisitor): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Clone(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.DXStringFormat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXStringFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.DXStringFormat]
  Fields:
    DevExpress.Drawing.DXStringFormatFlags DefaultFormatFlags = 0 : Assembly, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringAlignment DefaultAlignment = 0 : Assembly, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringAlignment DefaultLineAlignment = 0 : Assembly, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringTrimming DefaultTrimming = 1 : Assembly, Static, Literal, HasDefault
    DevExpress.Drawing.DXHotkeyPrefix DefaultHotkeyPrefix = 0 : Assembly, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXStringFormatPrototypeKind DefaultStringFormatPrototypeKind = 0 : Assembly, Static, Literal, HasDefault
  Properties:
    DevExpress.Drawing.DXStringFormatFlags FormatFlags 'get set' : 
    DevExpress.Drawing.DXStringAlignment Alignment 'get set' : 
    DevExpress.Drawing.DXStringAlignment LineAlignment 'get set' : 
    DevExpress.Drawing.DXStringTrimming Trimming 'get set' : 
    DevExpress.Drawing.DXHotkeyPrefix HotkeyPrefix 'get set' : 
    Single[] TabStops 'get set' : 
    DevExpress.Drawing.Internal.DXStringFormatPrototypeKind PrototypeKind 'get set' : 
    Single LeadingMarginFactor 'get set' : 
    Single TrailingMarginFactor 'get set' : 
  Methods:
    op_Implicit(DXStringFormat): PrivateScope, Public, Static, HideBySig, SpecialName
    Create(DXStringFormatPrototypeKind): PrivateScope, Assembly, Static, HideBySig
    CreateGenericDefault(): PrivateScope, Public, Static, HideBySig
    CreateGenericTypographic(): PrivateScope, Public, Static, HideBySig
    get_FormatFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_FormatFlags(DXStringFormatFlags): PrivateScope, Public, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    set_Alignment(DXStringAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_LineAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_LineAlignment(DXStringAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_Trimming(): PrivateScope, Public, HideBySig, SpecialName
    set_Trimming(DXStringTrimming): PrivateScope, Public, HideBySig, SpecialName
    get_HotkeyPrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_HotkeyPrefix(DXHotkeyPrefix): PrivateScope, Public, HideBySig, SpecialName
    get_TabStops(): PrivateScope, Public, HideBySig, SpecialName
    set_TabStops(Single[]): PrivateScope, Public, HideBySig, SpecialName
    get_PrototypeKind(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LeadingMarginFactor(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LeadingMarginFactor(Single): PrivateScope, Assembly, HideBySig, SpecialName
    get_TrailingMarginFactor(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TrailingMarginFactor(Single): PrivateScope, Assembly, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.DXTextureBrush: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.DXTilingBrush
    Void .ctor(DevExpress.Drawing.DXImage, DevExpress.Drawing.DXWrapMode, DevExpress.Drawing.Internal.DXImageAttributes): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXImage, DevExpress.Drawing.DXWrapMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXImage Image 'get ' : 
  Methods:
    get_Image(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig
    Accept(IDXBrushVisitor): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Clone(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.DXTilingBrush: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.Drawing.DXBrush
  Properties:
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
    DevExpress.Drawing.DXWrapMode WrapMode 'get set' : 
  Methods:
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
    set_Transform(DXMatrix): PrivateScope, Public, HideBySig, SpecialName
    get_WrapMode(): PrivateScope, Public, HideBySig, SpecialName
    set_WrapMode(DXWrapMode): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.DXImageFormat: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXImageFormat Png 'get ' : 
    DevExpress.Drawing.DXImageFormat Jpeg 'get ' : 
    DevExpress.Drawing.DXImageFormat Svg 'get ' : 
    DevExpress.Drawing.DXImageFormat Bmp 'get ' : 
    DevExpress.Drawing.DXImageFormat Emf 'get ' : 
    DevExpress.Drawing.DXImageFormat Wmf 'get ' : 
    DevExpress.Drawing.DXImageFormat Tiff 'get ' : 
    DevExpress.Drawing.DXImageFormat Gif 'get ' : 
    DevExpress.Drawing.DXImageFormat Icon 'get ' : 
    DevExpress.Drawing.DXImageFormat Unknown 'get ' : 
  Methods:
    op_Implicit(ImageFormat): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Jpeg(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Svg(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bmp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Emf(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Wmf(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tiff(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gif(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Icon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Unknown(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.DXRegion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXGraphicsPath): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.IDXRegion): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.DXRegionDataNode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Intersect(DXRegion): PrivateScope, Public, HideBySig
    Intersect(DXGraphicsPath): PrivateScope, Public, HideBySig
    Intersect(RectangleF): PrivateScope, Public, HideBySig
    Union(DXRegion): PrivateScope, Public, HideBySig
    Union(DXGraphicsPath): PrivateScope, Public, HideBySig
    Union(RectangleF): PrivateScope, Public, HideBySig
    Xor(DXRegion): PrivateScope, Public, HideBySig
    Xor(DXGraphicsPath): PrivateScope, Public, HideBySig
    Xor(RectangleF): PrivateScope, Public, HideBySig
    Exclude(DXRegion): PrivateScope, Public, HideBySig
    Exclude(DXGraphicsPath): PrivateScope, Public, HideBySig
    Exclude(RectangleF): PrivateScope, Public, HideBySig
    Complement(DXRegion): PrivateScope, Public, HideBySig
    Complement(DXGraphicsPath): PrivateScope, Public, HideBySig
    Complement(RectangleF): PrivateScope, Public, HideBySig
    MakeEmpty(): PrivateScope, Public, HideBySig
    MakeInfinite(): PrivateScope, Public, HideBySig
    GetBounds(): PrivateScope, Public, HideBySig
    IsVisible(PointF): PrivateScope, Public, HideBySig
    IsVisible(Rectangle): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    Transform(DXMatrix): PrivateScope, Public, HideBySig
    GetData(): PrivateScope, Assembly, HideBySig
Struct DevExpress.Drawing.DXStringFormatFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.DXStringFormatFlags DirectionRightToLeft = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringFormatFlags DirectionVertical = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringFormatFlags FitBlackBox = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringFormatFlags DisplayFormatControl = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringFormatFlags NoFontFallback = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringFormatFlags MeasureTrailingSpaces = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringFormatFlags NoWrap = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringFormatFlags LineLimit = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.DXStringFormatFlags NoClip = 16384 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.DXGraphicsUnitConverter: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Convert(Int32, Single, Single): PrivateScope, Public, Static, HideBySig
    Convert(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Convert(Single, DXGraphicsUnit, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    Convert(Size, Single, Single): PrivateScope, Public, Static, HideBySig
    Convert(SizeF, Single, Single): PrivateScope, Public, Static, HideBySig
    Convert(SizeF, DXGraphicsUnit, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    Convert(DXMargins, Single, Single): PrivateScope, Public, Static, HideBySig
    Convert(MarginsF, Single, Single): PrivateScope, Assembly, Static, HideBySig
    Convert(MarginsF, DXGraphicsUnit, DXGraphicsUnit): PrivateScope, Assembly, Static, HideBySig
Class DevExpress.Drawing.Design.DXImageTypeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Utils.Design.LocalizableExpandableObjectTypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Extensions.DXImageExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConvertToGdiPlusImage(DXImage): PrivateScope, Public, Static, HideBySig
    GetNativeImage(DXImage): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Extensions.DXGraphicsExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryDrawAsEmfMetafile(IDXGraphics, DXImage, Int32, Int32): PrivateScope, Public, Static, HideBySig
    TryDrawAsEmfMetafile(IDXGraphics, DXImage, RectangleF): PrivateScope, Public, Static, HideBySig
    TryDrawAsEmfMetafile(IDXGraphics, DXImage, RectangleF, RectangleF): PrivateScope, Public, Static, HideBySig
    TryDrawAsEmfMetafile(IDXGraphics, DXImage, RectangleF, RectangleF, DXImageAttributes): PrivateScope, Public, Static, HideBySig
    TryDrawSvgImage(IDXGraphics, DXImage, Int32, Int32): PrivateScope, Public, Static, HideBySig
    TryDrawSvgImage(IDXGraphics, DXImage, RectangleF): PrivateScope, Public, Static, HideBySig
    TryDrawSvgImage(IDXGraphics, DXImage, RectangleF, RectangleF): PrivateScope, Public, Static, HideBySig
    TryDrawSvgImage(IDXGraphics, DXImage, RectangleF, RectangleF, DXImageAttributes): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Extensions.DXGraphicsUnitExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToDpi(DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToDpiI(DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Extensions.PaperSizeCollectionExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToDXPaperSizeCollection(PaperSizeCollection): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Emf.Internal.EmfGraphics: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Emf.EmfMetafileModel): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXGraphics
    System.IDisposable
  Properties:
    DevExpress.Drawing.Internal.DXGraphicsKind GraphicsKind 'get ' : 
    Single DpiX 'get ' : 
    Single DpiY 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit PageUnit 'get set' : 
    Single PageScale 'get set' : 
    DevExpress.Drawing.DXSmoothingMode SmoothingMode 'get set' : 
    DevExpress.Drawing.DXCompositingMode CompositingMode 'get set' : 
    DevExpress.Drawing.Internal.DXCompositingQuality CompositingQuality 'get set' : 
    DevExpress.Drawing.DXInterpolationMode InterpolationMode 'get set' : 
    DevExpress.Drawing.Internal.DXPixelOffsetMode PixelOffsetMode 'get set' : 
    DevExpress.Drawing.DXTextRenderingHint TextRenderingHint 'get set' : 
    System.Drawing.RectangleF ClipBounds 'get ' : 
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
  Methods:
    get_GraphicsKind(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiX(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiY(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageUnit(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageUnit(DXGraphicsUnit): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageScale(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageScale(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SmoothingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SmoothingMode(DXSmoothingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompositingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CompositingMode(DXCompositingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompositingQuality(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CompositingQuality(DXCompositingQuality): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InterpolationMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_InterpolationMode(DXInterpolationMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PixelOffsetMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PixelOffsetMode(DXPixelOffsetMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextRenderingHint(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextRenderingHint(DXTextRenderingHint): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ClipBounds(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Transform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Transform(DXMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clear(Color): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawArc(DXPen, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawBezier(DXPen, PointF, PointF, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawBeziers(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawEllipse(DXPen, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLines(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLines(DXPen, Point[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPie(DXPen, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    DrawPie(DXPen, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPolygon(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawRectangle(DXPen, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPath(DXPen, DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillEllipse(DXBrush, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPath(DXBrush, DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPie(DXBrush, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    FillPie(DXBrush, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPolygon(DXBrush, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangle(DXBrush, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangle(DXBrush, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangles(DXBrush, IList`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRegion(DXBrush, DXRegion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF, DXGraphicsUnit, DXImageAttributes): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawJustifiedString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawString(String, DXFont, DXBrush, PointF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont, Single, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont, SizeF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Restore(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetTransform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MultiplyTransform(DXMatrix, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RotateTransform(Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ScaleTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TranslateTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(RectangleF, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXGraphicsPath, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXRegion, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetClip(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetClip(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Present(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Emf.Internal.EmfMetafile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.Size, DevExpress.Drawing.Internal.DXMetafileFrameUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Emf.EmfMetafileModel): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXMetafile
    DevExpress.Drawing.Internal.IDXImage
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXImage]
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXMetafile]
  Properties:
    System.Drawing.SizeF PhysicalDimension 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions ImageFormatOptions 'get ' : 
    DevExpress.Drawing.Internal.DXMetafileHeader Header 'get ' : 
    Single HorizontalResolution 'get ' : 
    Single VerticalResolution 'get ' : 
    Int32 NumberOfFrames 'get ' : 
    System.Object NativeImage 'get ' : 
    DevExpress.Drawing.Internal.DXImageProperties ImageProperties 'get ' : 
  Methods:
    Wrap(EmfMetafileModel): PrivateScope, Public, Static, HideBySig
    Decode(Stream): PrivateScope, Public, Static, HideBySig
    TryCreateEmfMetafile(Stream, IDXMetafile&(Out)): PrivateScope, Public, Static, HideBySig
    get_PhysicalDimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageFormatOptions(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Header(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VerticalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberOfFrames(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NativeImage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormatOptions): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateGraphics(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToEmfMetafileModel(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(IDXImage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(IDXMetafile): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsDisposedOrInvalid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Native.SpanExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConcatWith(Span`1, Span`1): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Drawing.Compatibility.Internal.ReadOnlySpan`1[T]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T Item [Int32] 'get set' : 
    Int32 Length 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, T): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(T[]): PrivateScope, Public, Static, HideBySig, SpecialName
Class DevExpress.Drawing.Compatibility.Internal.Span`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T Item [Int32] 'get set' : 
    Int32 Length 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, T): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
    Slice(Int32, Int32): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    op_Implicit(T[]): PrivateScope, Public, Static, HideBySig, SpecialName
Class DevExpress.Drawing.TextFormatter.FontMetrics: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXFont, DevExpress.Drawing.DXGraphicsUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Ascent 'get ' : 
    Single Descent 'get ' : 
    Single Height 'get ' : 
  Methods:
    CreateInstance(DXFont, DXGraphicsUnit, IMeasurer(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Ascent(): PrivateScope, Public, HideBySig, SpecialName
    get_Descent(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    CalculateHeight(Int32): PrivateScope, Public, HideBySig
Interface DevExpress.Drawing.TextFormatter.ITextFormatter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    FormatMultilineText(String, DXFont, Single, Single, DXStringFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FormatHtmlMultilineText(String, DXFont, Single, Single, DXStringFormat, Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.TextFormatter.TextFormatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.DXGraphicsUnit, DevExpress.XtraPrinting.Native.IMeasurer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.TextFormatter.ITextFormatter
  Methods:
    TrimByCharacter(DXStringFormat): PrivateScope, Assembly, Static, HideBySig
    TrimByWord(DXStringFormat): PrivateScope, Assembly, Static, HideBySig
    SplitTextByNewLine(String): PrivateScope, Public, Static, HideBySig
    RotateBasis(DXStringFormat, Single&, Single&): PrivateScope, Assembly, Static, HideBySig
    FormatMultilineText(String, DXFont, Single, Single, DXStringFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FormatHtmlMultilineText(String, DXFont, Single, Single, DXStringFormat, Boolean(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CalculateHeightOfLines(DXFont, Int32, DXGraphicsUnit, IMeasurer): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Drawing.TextFormatter.Internal.CharKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.TextFormatter.Internal.CharKind None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.CharKind WhiteSpace = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.CharKind OpenBrace = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.CharKind CloseBrace = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.CharKind InseparableEndSymbol = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.CharKind Separator = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.CharKind BackSlash = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.CharKind Digit = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.CharKind NonBreakingSpace = 8 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.TextFormatter.Internal.IMeasurerExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    MeasureStringI(IMeasurer, String, DXFont, Single, DXStringFormat, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.TextFormatter.Internal.Measurement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    DevExpress.Drawing.DXStringFormat DefaultStringFormat : Public, Static, InitOnly
    Single UnspecifiedSize = 999999 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.TextFormatter.Internal.TextScanner: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, DevExpress.Drawing.DXStringFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetWords(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.TextFormatter.Internal.Word: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get ' : 
    System.String TextWithSpaces 'get ' : 
    Int32 LeadSpaceCount 'get ' : 
    Boolean SpacesOnly 'get ' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_TextWithSpaces(): PrivateScope, Public, HideBySig, SpecialName
    get_LeadSpaceCount(): PrivateScope, Public, HideBySig, SpecialName
    IncrementLeadSpaceCount(): PrivateScope, Public, HideBySig
    DecrementLeadSpaceCount(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_SpacesOnly(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.TextFormatter.Internal.WordFormatMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.TextFormatter.Internal.WordFormatMode FirstLine = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.WordFormatMode NewLine = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.WordFormatMode Line = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.TextFormatter.Internal.WordFormatMode ByChar = 3 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.TextFormatter.Internal.WordFormatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Single, Single, DevExpress.Drawing.DXFont, DevExpress.Drawing.DXStringFormat, DevExpress.Drawing.DXGraphicsUnit, DevExpress.XtraPrinting.Native.IMeasurer, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsDisposed 'get ' : 
    Single Width 'get ' : 
    Single Height 'get ' : 
    DevExpress.Drawing.DXFont Font 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit PageUnit 'get ' : 
    DevExpress.Drawing.DXStringFormat StringFormat 'get ' : 
    Int32 AdditionalLineCount 'get ' : 
    Boolean LineLimit 'get ' : 
    System.String Line 'get set' : 
    DevExpress.Drawing.TextFormatter.Internal.WordFormatMode Mode 'get set' : 
    System.Collections.Generic.List`1[System.String] LinesForTest 'get ' : 
    System.String[] Lines 'get ' : 
  Methods:
    CompareDoubles(Double, Double): PrivateScope, Assembly, Static, HideBySig
    TrimTextByCharacter(String, IMeasurer, DXFont, DXStringFormat, DXGraphicsUnit, Single, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    TrimTextByWord(String, IMeasurer, DXFont, DXStringFormat, DXGraphicsUnit, Single, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    HasTrimmedByEllipsis(String): PrivateScope, Assembly, Static, HideBySig
    get_IsDisposed(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Width(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Height(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Font(): PrivateScope, Assembly, HideBySig, SpecialName
    get_PageUnit(): PrivateScope, Assembly, HideBySig, SpecialName
    get_StringFormat(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AdditionalLineCount(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LineLimit(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Line(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Line(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Mode(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Mode(WordFormatMode): PrivateScope, Assembly, HideBySig, SpecialName
    get_LinesForTest(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Lines(): PrivateScope, Public, HideBySig, SpecialName
    GetLine(Word): PrivateScope, Public, HideBySig
    SetLine(String): PrivateScope, Public, HideBySig
    UpdateLines(): PrivateScope, Public, HideBySig
    CreateAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FormatWords(List`1, Int32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.TextFormatter.Internal.WordFormatterException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Drawing.TextFormatter.Internal.WordFormatterAlgorithm: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.TextFormatter.Internal.WordFormatter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyWordToLines(Word): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FormatLastLine(Word): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetNextMode(Word): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SupportsMode(WordFormatMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Svg.Internal.DXSvgGraphicsComplexRegionHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CollectComplexClipPathElements(DXRegionDataNodeComplex, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Svg.Internal.DXSvgGraphicsIdManager: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Utils.Svg.SvgRoot, System.Collections.Generic.List`1[DevExpress.Utils.Svg.SvgElement]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterElementId(SvgElement): PrivateScope, Public, HideBySig
    GetUriElement(Uri): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Svg.Internal.DXSvgGraphicsStateManager: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXGraphicsStateHandler
    Void .ctor(DevExpress.Utils.Svg.SvgRoot, DevExpress.Utils.Svg.SvgDefinitions, DevExpress.Drawing.Svg.Internal.DXSvgGraphicsIdManager, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
    DevExpress.Utils.Svg.SvgElement CurrentContainer 'get ' : 
  Methods:
    get_Transform(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CurrentContainer(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    SetClip(RectangleF, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    SetClip(DXGraphicsPath, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    SetClip(DXRegion, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    Save(): PrivateScope, Public, Virtual, HideBySig
    Restore(Object): PrivateScope, Public, Virtual, HideBySig
    ResetTransform(): PrivateScope, Public, Virtual, HideBySig
    ResetClip(): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Svg.Internal.DXSvgGraphicsHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToHtml(Color): PrivateScope, Public, Static, HideBySig
    ToSvgStrokeLineJoin(DXLineJoin): PrivateScope, Public, Static, HideBySig
    ToUnit(Int32, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToUnit(Double, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToUnit(Single, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    FromUnit(Int32, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    FromUnit(Double, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    FromUnit(Single, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToSvgPoint(Point, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToSvgPoint(PointF, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToSvgPoints(Point[], DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToSvgPoints(PointF[], DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToSvgFontWeight(DXFont): PrivateScope, Public, Static, HideBySig
    ToSvgFontStyle(DXFont): PrivateScope, Public, Static, HideBySig
    ToSvgTextAnchor(DXStringAlignment): PrivateScope, Public, Static, HideBySig
    ToSvgMatrix(DXMatrix, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    FromSvgMatrix(SvgMatrix, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToSvgUnit(Int32, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToSvgUnit(Double, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToSvgUnit(Single, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    ToId(Uri): PrivateScope, Public, Static, HideBySig
    GetSvgElementProperties(DXPen, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    GetSvgElementProperties(DXBrush, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    GetSvgEmbeddedImage(DXMetafile, Double, Double, Double, Double, Boolean, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    GetSvgEmbeddedImage(DXBitmap, Double, Double, Double, Double, Boolean, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    CalculateSvgPathSegmentCollection(DXGraphicsPath, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    CalculateSvgEllipse(SvgElementProperties, RectangleF, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    CalculateSvgPathArcSegment(RectangleF, Single, Single, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    CalculateSvgPiePath(SvgElementProperties, RectangleF, Single, Single, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    GetClipRectangleElement(RectangleF, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    GetClipPathElement(DXGraphicsPath, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    GetClipRegionDataNodeElement(DXRegionDataNode, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    GetTag(SvgElement): PrivateScope, Public, Static, HideBySig
    IsInfiniteClipRectangle(RectangleF): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Svg.Internal.DXSvgImageHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsSvgImage(Stream): PrivateScope, Public, Static, HideBySig
    CreateImage(Stream): PrivateScope, Public, Static, HideBySig
    CreateImage(SizeF): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Svg.Internal.SvgImageWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Utils.Svg.SvgImage): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXSvgImage
    DevExpress.Drawing.Internal.IDXImage
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXImage]
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXSvgImage]
  Properties:
    System.Collections.Generic.IEnumerable`1[DevExpress.Utils.Svg.SvgElementWrapper] RootElements 'get ' : 
    DevExpress.Utils.Svg.SvgRoot SvgRoot 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions ImageFormatOptions 'get ' : 
    DevExpress.Drawing.Internal.DXImageProperties ImageProperties 'get ' : 
    Int32 NumberOfFrames 'get ' : 
    System.Object NativeImage 'get ' : 
    Single HorizontalResolution 'get ' : 
    Single VerticalResolution 'get ' : 
    System.Drawing.SizeF PhysicalDimension 'get ' : 
  Methods:
    Wrap(SvgImage): PrivateScope, Public, Static, HideBySig
    get_RootElements(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SvgRoot(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageFormatOptions(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberOfFrames(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NativeImage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VerticalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PhysicalDimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Save(Stream, DXImageFormatOptions): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateGraphics(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(IDXImage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(IDXSvgImage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsDisposedOrInvalid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Svg.Internal.DXSvgGraphics: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Utils.Svg.SvgRoot, System.Collections.Generic.List`1[DevExpress.Utils.Svg.SvgElement]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXGraphics
    System.IDisposable
  Properties:
    DevExpress.Drawing.Internal.DXGraphicsKind GraphicsKind 'get ' : 
    Single DpiX 'get ' : 
    Single DpiY 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit PageUnit 'get set' : 
    Single PageScale 'get set' : 
    DevExpress.Drawing.DXSmoothingMode SmoothingMode 'get set' : 
    DevExpress.Drawing.DXCompositingMode CompositingMode 'get set' : 
    DevExpress.Drawing.Internal.DXCompositingQuality CompositingQuality 'get set' : 
    DevExpress.Drawing.DXInterpolationMode InterpolationMode 'get set' : 
    DevExpress.Drawing.Internal.DXPixelOffsetMode PixelOffsetMode 'get set' : 
    DevExpress.Drawing.DXTextRenderingHint TextRenderingHint 'get set' : 
    System.Drawing.RectangleF ClipBounds 'get ' : 
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
  Methods:
    get_GraphicsKind(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiX(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiY(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageUnit(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageUnit(DXGraphicsUnit): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageScale(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageScale(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SmoothingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SmoothingMode(DXSmoothingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompositingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CompositingMode(DXCompositingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompositingQuality(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CompositingQuality(DXCompositingQuality): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InterpolationMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_InterpolationMode(DXInterpolationMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PixelOffsetMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PixelOffsetMode(DXPixelOffsetMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextRenderingHint(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextRenderingHint(DXTextRenderingHint): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ClipBounds(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Transform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Transform(DXMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clear(Color): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLines(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLines(DXPen, Point[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawBezier(DXPen, PointF, PointF, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawBeziers(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawEllipse(DXPen, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillEllipse(DXBrush, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawRectangle(DXPen, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangle(DXBrush, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangle(DXBrush, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangles(DXBrush, IList`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPolygon(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPolygon(DXBrush, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawArc(DXPen, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPie(DXPen, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    DrawPie(DXPen, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPie(DXBrush, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    FillPie(DXBrush, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPath(DXPen, DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPath(DXBrush, DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRegion(DXBrush, DXRegion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF, DXGraphicsUnit, DXImageAttributes): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawJustifiedString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawString(String, DXFont, DXBrush, PointF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont, Single, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont, SizeF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MultiplyTransform(DXMatrix, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TranslateTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ScaleTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RotateTransform(Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(RectangleF, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXGraphicsPath, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXRegion, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetClip(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetTransform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetClip(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Restore(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Present(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Printing.DXPrinterSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Collate 'get set' : 
    Int16 Copies 'get set' : 
    DevExpress.Drawing.Printing.DXDuplexMode Duplex 'get set' : 
    System.String PrinterName 'get set' : 
    System.String PageRange 'get set' : 
  Methods:
    get_Collate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Collate(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Copies(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Copies(Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Duplex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Duplex(DXDuplexMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PrinterName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PrinterName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageRange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageRange(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Assign(DXPrinterSettings): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Printing.DXDuplexMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Printing.DXDuplexMode Default = -1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXDuplexMode Simplex = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXDuplexMode DuplexShortEdge = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXDuplexMode DuplexLongEdge = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Printing.DXPaperKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Printing.DXPaperKind Custom = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Letter = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Legal = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A4 = 9 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind CSheet = 24 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind DSheet = 25 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind ESheet = 26 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind LetterSmall = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Tabloid = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Ledger = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Statement = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Executive = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A3 = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A4Small = 10 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A5 = 11 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B4 = 12 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B5 = 13 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Folio = 14 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Quarto = 15 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Standard10x14 = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Standard11x17 = 17 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Note = 18 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Number9Envelope = 19 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Number10Envelope = 20 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Number11Envelope = 21 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Number12Envelope = 22 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Number14Envelope = 23 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind DLEnvelope = 27 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind C5Envelope = 28 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind C3Envelope = 29 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind C4Envelope = 30 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind C6Envelope = 31 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind C65Envelope = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B4Envelope = 33 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B5Envelope = 34 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B6Envelope = 35 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind ItalyEnvelope = 36 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind MonarchEnvelope = 37 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PersonalEnvelope = 38 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind USStandardFanfold = 39 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind GermanStandardFanfold = 40 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind GermanLegalFanfold = 41 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind IsoB4 = 42 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapanesePostcard = 43 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Standard9x11 = 44 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Standard10x11 = 45 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Standard15x11 = 46 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind InviteEnvelope = 47 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind LetterExtra = 50 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind LegalExtra = 51 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind TabloidExtra = 52 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A4Extra = 53 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind LetterTransverse = 54 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A4Transverse = 55 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind LetterExtraTransverse = 56 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind APlus = 57 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind BPlus = 58 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind LetterPlus = 59 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A4Plus = 60 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A5Transverse = 61 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B5Transverse = 62 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A3Extra = 63 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A5Extra = 64 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B5Extra = 65 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A2 = 66 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A3Transverse = 67 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A3ExtraTransverse = 68 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseDoublePostcard = 69 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A6 = 70 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeKakuNumber2 = 71 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeKakuNumber3 = 72 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeChouNumber3 = 73 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeChouNumber4 = 74 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind LetterRotated = 75 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A3Rotated = 76 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A4Rotated = 77 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A5Rotated = 78 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B4JisRotated = 79 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B5JisRotated = 80 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapanesePostcardRotated = 81 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseDoublePostcardRotated = 82 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind A6Rotated = 83 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeKakuNumber2Rotated = 84 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeKakuNumber3Rotated = 85 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeChouNumber3Rotated = 86 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeChouNumber4Rotated = 87 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B6Jis = 88 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind B6JisRotated = 89 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Standard12x11 = 90 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeYouNumber4 = 91 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind JapaneseEnvelopeYouNumber4Rotated = 92 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Prc16K = 93 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Prc32K = 94 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Prc32KBig = 95 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber1 = 96 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber2 = 97 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber3 = 98 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber4 = 99 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber5 = 100 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber6 = 101 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber7 = 102 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber8 = 103 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber9 = 104 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber10 = 105 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Prc16KRotated = 106 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Prc32KRotated = 107 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind Prc32KBigRotated = 108 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber1Rotated = 109 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber2Rotated = 110 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber3Rotated = 111 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber4Rotated = 112 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber5Rotated = 113 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber6Rotated = 114 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber7Rotated = 115 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber8Rotated = 116 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber9Rotated = 117 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.DXPaperKind PrcEnvelopeNumber10Rotated = 118 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Printing.DXPaperSize: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Printing.DXPaperKind, System.String, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Height 'get set' : 
    DevExpress.Drawing.Printing.DXPaperKind Kind 'get ' : 
    System.String PaperName 'get set' : 
    Int32 RawKind 'get set' : 
    Int32 Width 'get set' : 
  Methods:
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    get_PaperName(): PrivateScope, Public, HideBySig, SpecialName
    set_PaperName(String): PrivateScope, Public, HideBySig, SpecialName
    get_RawKind(): PrivateScope, Public, HideBySig, SpecialName
    set_RawKind(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Printing.Internal.DXPrinterSettingsWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Printing.DXPrinterSettings
    Void .ctor(System.Drawing.Printing.PrinterSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Collate 'get set' : 
    Int16 Copies 'get set' : 
    DevExpress.Drawing.Printing.DXDuplexMode Duplex 'get set' : 
    System.String PrinterName 'get set' : 
  Methods:
    get_Collate(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Collate(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Copies(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Copies(Int16): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Duplex(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Duplex(DXDuplexMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PrinterName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_PrinterName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class DevExpress.Drawing.Printing.Internal.PrintDocumentPrinterSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Printing.Internal.DXPrinterSettingsWrapper
    Void .ctor(System.Drawing.Printing.PrintDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PageRange 'get set' : 
  Methods:
    get_PageRange(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_PageRange(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
Interface DevExpress.Drawing.Printing.Internal.ILibCupsInterop: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    cupsGetDests(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsCopyDestInfo(Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsLastErrorString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsCreateDestJob(Int32, IntPtr, IntPtr, Int32&, String, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsGetJobs(IntPtr&(Out), String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsStartDestDocument(Int32, IntPtr, IntPtr, Int32, String, String, Int32, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsWriteRequestData(Int32, IntPtr, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsFinishDestDocument(Int32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsAddOption(String, String, Int32, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsGetDestMediaCount(Int32, IntPtr, IntPtr, Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsGetDestMediaByIndex(Int32, IntPtr, IntPtr, Int32, Int16, cups_size_t&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsFreeDestInfo(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsFreeOptions(Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsFreeDests(Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    cupsFreeJobs(Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Printing.Internal.CupsNativeStructure`1[TStruct]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TStruct, System.ValueType,  NotNullableValueType DefaultConstructor
  :DevExpress.Drawing.Printing.Internal.CupsMemoryObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TStruct Structure 'get set' : 
  Methods:
    get_Structure(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Structure(TStruct): PrivateScope, Assembly, HideBySig, SpecialName
Class DevExpress.Drawing.Printing.Internal.CupsMemoryObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr Pointer 'get set' : 
  Methods:
    get_Pointer(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Pointer(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName
    op_Implicit(CupsMemoryObject): PrivateScope, Public, Static, HideBySig, SpecialName
Class DevExpress.Drawing.Printing.Internal.CupsJobInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Printing.Internal.CupsNativeStructure`1[DevExpress.Drawing.Printing.Internal.cups_job_t]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Id   'get ' : 
    System.String Dest 'get ' : 
    System.String Title 'get ' : 
    System.String User 'get ' : 
    System.String Format 'get ' : 
    DevExpress.Drawing.Printing.Internal.Cups_IPPJobState State 'get ' : 
    Int32 Size 'get ' : 
    Int32 Priority 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Dest(): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    get_User(): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Priority(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Printing.Internal.CupsMediaInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Printing.Internal.CupsNativeStructure`1[DevExpress.Drawing.Printing.Internal.cups_size_t]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Width 'get ' : 
    Double Length 'get ' : 
    Double Bottom 'get ' : 
    Double Left 'get ' : 
    Double Right 'get ' : 
    Double Top 'get ' : 
    System.String MediaName 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    get_MediaName(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Printing.Internal.CupsPrinterOptionsInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Printing.Internal.CupsNativeStructure`1[DevExpress.Drawing.Printing.Internal.cups_option_t]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Key 'get ' : 
    System.String Value 'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Printing.Internal.CupsPrinterInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Printing.Internal.CupsNativeStructure`1[DevExpress.Drawing.Printing.Internal.cups_dest_t]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.String PrinterName 'get ' : 
    System.String PrinterInstance 'get ' : 
    Boolean IsDefault 'get ' : 
    DevExpress.Drawing.Printing.Internal.CupsEndPointInfo EndPointInfo 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,DevExpress.Drawing.Printing.Internal.CupsPrinterOptionsInfo] PredifinedOptions 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.String] CustomOptions 'get ' : 
    IntPtr CustomOptionsHandle 'get ' : 
  Methods:
    get_PrinterName(): PrivateScope, Public, HideBySig, SpecialName
    get_PrinterInstance(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefault(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPointInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_PredifinedOptions(): PrivateScope, Public, HideBySig, SpecialName
    get_CustomOptions(): PrivateScope, Public, HideBySig, SpecialName
    get_CustomOptionsHandle(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Printing.Internal.CupsEndPointInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Printing.Internal.CupsNativeStructure`1[DevExpress.Drawing.Printing.Internal.cups_dinfo_t]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class DevExpress.Drawing.Printing.Internal.LibCupsInterop: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 CUPS_HTTP_DEFAULT = 0 : Public, Static, Literal, HasDefault
  Properties:
    DevExpress.Drawing.Printing.Internal.ILibCupsInterop Interop 'get ' : 
  Methods:
    get_Interop(): PrivateScope, Public, Static, HideBySig, SpecialName
    EnsureLoaded(): PrivateScope, Public, Static, HideBySig
    GetPrinterInfos(): PrivateScope, Public, HideBySig
    CreatePrinterJob(CupsPrinterInfo, String): PrivateScope, Public, HideBySig
    JobPending(CupsPrinterInfo, CupsJobInfo): PrivateScope, Public, HideBySig
    JobProcessing(CupsPrinterInfo, CupsJobInfo): PrivateScope, Public, HideBySig
    StartDocumentPrinting(CupsPrinterInfo, CupsJobInfo): PrivateScope, Public, HideBySig
    WriteDocumentData(IntPtr, Int64): PrivateScope, Public, HideBySig
    FinishDocumentPrinting(CupsPrinterInfo): PrivateScope, Public, HideBySig
    GetJobs(CupsPrinterInfo): PrivateScope, Public, HideBySig
    GetMediaInfo(CupsPrinterInfo): PrivateScope, Public, HideBySig
    GetCustomMediaInfo(CupsPrinterInfo, Size): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MarshallArray(Int32, IntPtr): PrivateScope, Public, Static, HideBySig
    MarshallValue(IntPtr): PrivateScope, Public, Static, HideBySig
    GetLastErrorString(): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Drawing.Printing.Internal.Cups_IPPJobState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Printing.Internal.Cups_IPPJobState IPP_JSTATE_PENDING = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPJobState IPP_JSTATE_HELD = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPJobState IPP_JSTATE_PROCESSING = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPJobState IPP_JSTATE_STOPPED = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPJobState IPP_JSTATE_CANCELED = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPJobState IPP_JSTATE_ABORTED = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPJobState IPP_JSTATE_COMPLETED = 9 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Printing.Internal.Cups_HttpStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_ERROR = -1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_NONE = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_CONTINUE = 100 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_SWITCHING_PROTOCOLS = 101 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_OK = 200 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_CREATED = 201 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_ACCEPTED = 202 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_NOT_AUTHORITATIVE = 203 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_NO_CONTENT = 204 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_RESET_CONTENT = 205 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_PARTIAL_CONTENT = 206 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_MULTIPLE_CHOICES = 300 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_MOVED_PERMANENTLY = 301 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_FOUND = 302 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_SEE_OTHER = 303 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_NOT_MODIFIED = 304 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_USE_PROXY = 305 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_TEMPORARY_REDIRECT = 307 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_BAD_REQUEST = 400 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_UNAUTHORIZED = 401 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_PAYMENT_REQUIRED = 402 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_FORBIDDEN = 403 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_NOT_FOUND = 404 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_METHOD_NOT_ALLOWED = 405 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_NOT_ACCEPTABLE = 406 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_PROXY_AUTHENTICATION = 407 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_REQUEST_TIMEOUT = 408 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_CONFLICT = 409 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_GONE = 410 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_LENGTH_REQUIRED = 411 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_PRECONDITION = 412 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_REQUEST_TOO_LARGE = 413 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_URI_TOO_LONG = 414 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_UNSUPPORTED_MEDIATYPE = 415 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_REQUESTED_RANGE = 416 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_EXPECTATION_FAILED = 417 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_UPGRADE_REQUIRED = 426 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_SERVER_ERROR = 500 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_NOT_IMPLEMENTED = 501 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_BAD_GATEWAY = 502 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_SERVICE_UNAVAILABLE = 503 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_GATEWAY_TIMEOUT = 504 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_NOT_SUPPORTED = 505 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_CUPS_AUTHORIZATION_CANCELED = 1000 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_CUPS_PKI_ERROR = 1001 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_HttpStatus HTTP_STATUS_CUPS_WEBIF_DISABLED = 1002 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Printing.Internal.Cups_IPPStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_CUPS_INVALID = -1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_OK = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_OK_IGNORED_OR_SUBSTITUTED = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_OK_CONFLICTING = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_OK_IGNORED_SUBSCRIPTIONS = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_OK_IGNORED_NOTIFICATIONS = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_OK_TOO_MANY_EVENTS = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_OK_BUT_CANCEL_SUBSCRIPTION = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_OK_EVENTS_COMPLETE = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_REDIRECTION_OTHER_SITE = 512 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_CUPS_SEE_OTHER = 640 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_BAD_REQUEST = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_FORBIDDEN = 1025 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_NOT_AUTHENTICATED = 1026 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_NOT_AUTHORIZED = 1027 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_NOT_POSSIBLE = 1028 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_TIMEOUT = 1029 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_NOT_FOUND = 1030 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_GONE = 1031 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_REQUEST_ENTITY = 1032 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_REQUEST_VALUE = 1033 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_DOCUMENT_FORMAT_NOT_SUPPORTED = 1034 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_ATTRIBUTES_OR_VALUES = 1035 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_URI_SCHEME = 1036 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_CHARSET = 1037 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_CONFLICTING = 1038 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_COMPRESSION_NOT_SUPPORTED = 1039 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_COMPRESSION_ERROR = 1040 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_DOCUMENT_FORMAT_ERROR = 1041 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_DOCUMENT_ACCESS = 1042 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_ATTRIBUTES_NOT_SETTABLE = 1043 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_IGNORED_ALL_SUBSCRIPTIONS = 1044 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_TOO_MANY_SUBSCRIPTIONS = 1045 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_IGNORED_ALL_NOTIFICATIONS = 1046 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_PRINT_SUPPORT_FILE_NOT_FOUND = 1047 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_DOCUMENT_PASSWORD = 1048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_DOCUMENT_PERMISSION = 1049 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_DOCUMENT_SECURITY = 1050 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_DOCUMENT_UNPRINTABLE = 1051 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_ACCOUNT_INFO_NEEDED = 1052 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_ACCOUNT_CLOSED = 1053 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_ACCOUNT_LIMIT_REACHED = 1054 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_ACCOUNT_AUTHORIZATION_FAILED = 1055 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_NOT_FETCHABLE = 1056 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_CUPS_ACCOUNT_INFO_NEEDED = 1180 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_CUPS_ACCOUNT_CLOSED = 1181 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_CUPS_ACCOUNT_LIMIT_REACHED = 1182 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_CUPS_ACCOUNT_AUTHORIZATION_FAILED = 1183 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_INTERNAL = 1280 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_OPERATION_NOT_SUPPORTED = 1281 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_SERVICE_UNAVAILABLE = 1282 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_VERSION_NOT_SUPPORTED = 1283 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_DEVICE = 1284 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_TEMPORARY = 1285 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_NOT_ACCEPTING_JOBS = 1286 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_BUSY = 1287 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_JOB_CANCELED = 1288 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_MULTIPLE_JOBS_NOT_SUPPORTED = 1289 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_PRINTER_IS_DEACTIVATED = 1290 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_TOO_MANY_JOBS = 1291 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_TOO_MANY_DOCUMENTS = 1292 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_CUPS_AUTHENTICATION_CANCELED = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_CUPS_PKI = 4097 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Printing.Internal.Cups_IPPStatus IPP_STATUS_ERROR_CUPS_UPGRADE_REQUIRED = 4098 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Printing.Internal.cups_dest_t: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String name : Public
    System.String instance : Public
    Int32 is_default : Public
    Int32 num_options : Public
    IntPtr options : Public
Struct DevExpress.Drawing.Printing.Internal.cups_option_t: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String name : Public
    System.String value : Public
Struct DevExpress.Drawing.Printing.Internal.cups_dinfo_t: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct DevExpress.Drawing.Printing.Internal.cups_job_t: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 id : Public
    System.String dest : Public
    System.String title : Public
    System.String user : Public
    System.String format : Public
    DevExpress.Drawing.Printing.Internal.Cups_IPPJobState state : Public
    Int32 size : Public
    Int32 priority : Public
    IntPtr completed_time : Public
    IntPtr creation_time : Public
    IntPtr processing_time : Public
Struct DevExpress.Drawing.Printing.Internal.cups_size_t: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte[] media : Public, HasFieldMarshal
    Int32 width : Public
    Int32 length : Public
    Int32 bottom : Public
    Int32 left : Public
    Int32 right : Public
    Int32 top : Public
Class DevExpress.Drawing.Printing.Internal.PageIndexValidator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[System.Int32] ValidatedIndexes 'get ' : 
  Methods:
    get_ValidatedIndexes(): PrivateScope, Public, HideBySig, SpecialName
    ValidateIndex(Int32): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Printing.Internal.PageRangeParser: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetIndices(String, Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetNumbers(String, Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ValidateString(String): PrivateScope, Public, Static, HideBySig
    GetPageRangeString(Int32[], Boolean, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Printing.Internal.PageScope: AutoLayout, AnsiClass, Class, Public
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    DevExpress.Drawing.Printing.Internal.PageScope Empty : Public, Static, InitOnly
  Properties:
    Int32 FromPage 'get set' : 
    Int32 ToPage 'get set' : 
    System.String PageRange 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_FromPage(): PrivateScope, Public, HideBySig, SpecialName
    set_FromPage(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ToPage(): PrivateScope, Public, HideBySig, SpecialName
    set_ToPage(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PageRange(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Validate(Int32): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Printing.Internal.DXPageSizeInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Drawing.Size DefaultSize : Public, Static, InitOnly
  Methods:
    GetAppropriatePaperKind(Int32, Int32): PrivateScope, Public, Static, HideBySig
    GetPageSize(String, String, Size): PrivateScope, Public, Static, HideBySig
    GetPageSize(DXPaperKind): PrivateScope, Public, Static, HideBySig
    GetPageSize(DXPaperKind, Size): PrivateScope, Public, Static, HideBySig
    GetPageSize(DXPaperKind, DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    GetPageSize(DXPaperKind, Single): PrivateScope, Public, Static, HideBySig
    GetPageSize(DXPaperKind, DXGraphicsUnit, Size): PrivateScope, Public, Static, HideBySig
    GetPageSize(DXPaperKind, Single, Size): PrivateScope, Public, Static, HideBySig
    GetPageSizeF(DXPaperKind, Single): PrivateScope, Public, Static, HideBySig
    GetPageSizeF(DXPaperKind, Single, SizeF): PrivateScope, Public, Static, HideBySig
    GetAppropriatePaperSize(ICollection`1, DXPaperSize): PrivateScope, Public, Static, HideBySig
    GetAppropriatePaperSize(ICollection`1, DXPaperKind, Int32, Int32): PrivateScope, Public, Static, HideBySig
    GetPaperSize(DXPaperKind, Size, ICollection`1): PrivateScope, Assembly, Static, HideBySig
    GetRawKind(DXPaperSize): PrivateScope, Assembly, Static, HideBySig
    CreatePaperSizeCollection(Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RoundPageSize(SizeF): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Printing.Internal.DXUnitName: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, DevExpress.Drawing.DXGraphicsUnit): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    DevExpress.Drawing.Printing.Internal.DXUnitName[] Names : Assembly, Static, InitOnly
  Properties:
    System.String Name 'get set' : 
    DevExpress.Drawing.DXGraphicsUnit Unit 'get set' : 
  Methods:
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Unit(): PrivateScope, Assembly, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.DXGraphicsColorModifier: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.DXColorMatrix, DevExpress.Drawing.Internal.DXColorMap[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DevExpress.Drawing.Internal.DXImageAttributes ImageAttributes 'get ' : 
  Methods:
    get_ImageAttributes(): PrivateScope, Public, HideBySig, SpecialName
    GetModifiedBrush(DXBrush): PrivateScope, Public, HideBySig
    GetModifiedPen(DXPen): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.DXModifiedGraphics: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.IDXGraphics, DevExpress.Drawing.Internal.DXGraphicsColorModifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXGraphics
    System.IDisposable
  Properties:
    DevExpress.Drawing.Internal.DXGraphicsKind GraphicsKind 'get ' : 
    Single DpiX 'get ' : 
    Single DpiY 'get ' : 
    System.Drawing.RectangleF ClipBounds 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit PageUnit 'get set' : 
    Single PageScale 'get set' : 
    DevExpress.Drawing.DXSmoothingMode SmoothingMode 'get set' : 
    DevExpress.Drawing.DXCompositingMode CompositingMode 'get set' : 
    DevExpress.Drawing.Internal.DXCompositingQuality CompositingQuality 'get set' : 
    DevExpress.Drawing.DXInterpolationMode InterpolationMode 'get set' : 
    DevExpress.Drawing.Internal.DXPixelOffsetMode PixelOffsetMode 'get set' : 
    DevExpress.Drawing.DXTextRenderingHint TextRenderingHint 'get set' : 
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
  Methods:
    get_GraphicsKind(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiX(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiY(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ClipBounds(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageUnit(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageUnit(DXGraphicsUnit): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageScale(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageScale(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SmoothingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SmoothingMode(DXSmoothingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompositingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CompositingMode(DXCompositingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompositingQuality(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CompositingQuality(DXCompositingQuality): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InterpolationMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_InterpolationMode(DXInterpolationMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PixelOffsetMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PixelOffsetMode(DXPixelOffsetMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextRenderingHint(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextRenderingHint(DXTextRenderingHint): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Transform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Transform(DXMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DrawArc(DXPen, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawBezier(DXPen, PointF, PointF, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawBeziers(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawEllipse(DXPen, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF, DXGraphicsUnit, DXImageAttributes): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawJustifiedString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLines(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLines(DXPen, Point[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPath(DXPen, DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPie(DXPen, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    DrawPie(DXPen, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPolygon(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawRectangle(DXPen, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawString(String, DXFont, DXBrush, PointF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillEllipse(DXBrush, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPath(DXBrush, DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPie(DXBrush, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    FillPie(DXBrush, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPolygon(DXBrush, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangle(DXBrush, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangle(DXBrush, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangles(DXBrush, IList`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRegion(DXBrush, DXRegion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetClip(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont, Single, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont, SizeF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MultiplyTransform(DXMatrix, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Present(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(RectangleF, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXGraphicsPath, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXRegion, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetClip(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetTransform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Restore(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RotateTransform(Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ScaleTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TranslateTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(Color): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.UnicodeHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsSupplementaryPlanesChar(Int32): PrivateScope, Public, Static, HideBySig
    IsBmpChar(Int32): PrivateScope, Public, Static, HideBySig
    GetUtf16Lenght(Int32): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Utf32Enumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.StringView): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Int32]
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.IDXSvgImage: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    DevExpress.Drawing.Internal.IDXImage
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXImage]
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXSvgImage]
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.DXColorsHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    PremulComponentToUnpremul(Byte, Byte): PrivateScope, Public, Static, HideBySig
    UnpremulComponentToPremul(Byte, Byte): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Drawing.Internal.DXGraphicsKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXGraphicsKind GdiPlus = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXGraphicsKind Skia = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXGraphicsKind Emf = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXGraphicsKind Svg = 3 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.DXGraphicsStateHandler: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DevExpress.Drawing.DXGraphicsUnit PageUnit 'get set' : 
    Single PageScale 'get set' : 
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
    System.Drawing.RectangleF ClipBounds 'get ' : 
    DevExpress.Drawing.DXSmoothingMode SmoothingMode 'get set' : 
    DevExpress.Drawing.DXCompositingMode CompositingMode 'get set' : 
    DevExpress.Drawing.Internal.DXCompositingQuality CompositingQuality 'get set' : 
    DevExpress.Drawing.DXInterpolationMode InterpolationMode 'get set' : 
    DevExpress.Drawing.Internal.DXPixelOffsetMode PixelOffsetMode 'get set' : 
    DevExpress.Drawing.DXTextRenderingHint TextRenderingHint 'get set' : 
    DevExpress.Drawing.Internal.GdiPlusTransformEmulation TransformEmulation 'get ' : 
    DevExpress.Drawing.DXRegion ClipInDevice 'get ' : 
    DevExpress.Drawing.DXMatrix WorldToDeviveTransform 'get ' : 
  Methods:
    get_PageUnit(): PrivateScope, Public, HideBySig, SpecialName
    set_PageUnit(DXGraphicsUnit): PrivateScope, Public, HideBySig, SpecialName
    get_PageScale(): PrivateScope, Public, HideBySig, SpecialName
    set_PageScale(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Transform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ClipBounds(): PrivateScope, Public, HideBySig, SpecialName
    get_SmoothingMode(): PrivateScope, Public, HideBySig, SpecialName
    set_SmoothingMode(DXSmoothingMode): PrivateScope, Public, HideBySig, SpecialName
    get_CompositingMode(): PrivateScope, Public, HideBySig, SpecialName
    set_CompositingMode(DXCompositingMode): PrivateScope, Public, HideBySig, SpecialName
    get_CompositingQuality(): PrivateScope, Public, HideBySig, SpecialName
    set_CompositingQuality(DXCompositingQuality): PrivateScope, Public, HideBySig, SpecialName
    get_InterpolationMode(): PrivateScope, Public, HideBySig, SpecialName
    set_InterpolationMode(DXInterpolationMode): PrivateScope, Public, HideBySig, SpecialName
    get_PixelOffsetMode(): PrivateScope, Public, HideBySig, SpecialName
    set_PixelOffsetMode(DXPixelOffsetMode): PrivateScope, Public, HideBySig, SpecialName
    get_TextRenderingHint(): PrivateScope, Public, HideBySig, SpecialName
    set_TextRenderingHint(DXTextRenderingHint): PrivateScope, Public, HideBySig, SpecialName
    get_TransformEmulation(): PrivateScope, Public, HideBySig, SpecialName
    get_ClipInDevice(): PrivateScope, Public, HideBySig, SpecialName
    get_WorldToDeviveTransform(): PrivateScope, Public, HideBySig, SpecialName
    GetClip(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetClip(RectangleF, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXGraphicsPath, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXRegion, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetClip(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RotateTransform(Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ScaleTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    TranslateTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MultiplyTransform(DXMatrix, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Save(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Restore(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.DXGraphicsStateRef: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct DevExpress.Drawing.Internal.DXImageExifProperty: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXImageExifProperty Orientation = 0 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.DXImageProperties: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[DevExpress.Drawing.Internal.DXImageProperty]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    HasProperty(DXImageExifProperty): PrivateScope, Public, HideBySig
    GetPropertyValue(DXImageExifProperty): PrivateScope, Public, HideBySig
    SetPropertyValue(DXImageExifProperty, T): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.DXImageProperty: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.DXImageExifProperty, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.DXImageExifProperty Property 'get ' : 
    System.Object Value 'get set' : 
  Methods:
    get_Property(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.DXImageAttributes: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.DXColorMatrix ColorMatrix 'get set' : 
    DevExpress.Drawing.Internal.DXColorMap[] RemapTable 'get set' : 
    System.Nullable`1[DevExpress.Drawing.DXWrapMode] WrapMode 'get set' : 
  Methods:
    get_ColorMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorMatrix(DXColorMatrix): PrivateScope, Public, HideBySig, SpecialName
    get_RemapTable(): PrivateScope, Public, HideBySig, SpecialName
    set_RemapTable(DXColorMap[]): PrivateScope, Public, HideBySig, SpecialName
    get_WrapMode(): PrivateScope, Public, HideBySig, SpecialName
    set_WrapMode(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.DXColorMap: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color OldColor 'get set' : 
    System.Drawing.Color NewColor 'get set' : 
  Methods:
    get_OldColor(): PrivateScope, Public, HideBySig, SpecialName
    set_OldColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_NewColor(): PrivateScope, Public, HideBySig, SpecialName
    set_NewColor(Color): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.DXPlatformFontInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(DevExpress.Drawing.Internal.IDXPlatformFont): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Single Height 'get ' : 
    Single Ascent 'get ' : 
    Single Descent 'get ' : 
    Single LineSpacing 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Ascent(): PrivateScope, Public, HideBySig, SpecialName
    get_Descent(): PrivateScope, Public, HideBySig, SpecialName
    get_LineSpacing(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.FontNameProvider: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetFontFamiliesNames(): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.GeometryParametrizedLine: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF Origin 'get ' : 
    Single X0  'get ' : 
    Single Y0  'get ' : 
    Single A   'get ' : 
    Single B   'get ' : 
    Double Angle 'get ' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    get_X0(): PrivateScope, Public, HideBySig, SpecialName
    get_Y0(): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    FromPoints(PointF, PointF): PrivateScope, Public, Static, HideBySig
    FromAngle(PointF, Double, Single): PrivateScope, Public, Static, HideBySig
    GetSmallestAngleBetween(GeometryParametrizedLine): PrivateScope, Public, HideBySig
    GetMiddleSmallestAngleBetween(GeometryParametrizedLine): PrivateScope, Public, HideBySig
    GetPointOnLine(Single): PrivateScope, Public, HideBySig
    GetPointProjection(PointF): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.DXImageLockMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXImageLockMode ReadOnly = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXImageLockMode WriteOnly = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXImageLockMode ReadWrite = 3 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.DXRegionDataCombineMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXRegionDataCombineMode Intersect = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXRegionDataCombineMode Union = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXRegionDataCombineMode XOR = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXRegionDataCombineMode Exclude = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXRegionDataCombineMode Complement = 4 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.DXRegionImplementationBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXRegionDataNodeVisitor
  Methods:
    Build(DXRegionDataNode, IDXGraphicsObjectsFactory): PrivateScope, Public, Static, HideBySig
    Visit(DXRegionDataNodeRectangle): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DXRegionDataNodePath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DXRegionDataNodeEmpty): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DXRegionDataNodeInfinite): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Visit(DXRegionDataNodeComplex): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.BinaryHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ReadBytes(Stream, Int32): PrivateScope, Public, Static, HideBySig
    AreEqual(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    WriteUInt32Be(Stream, UInt32): PrivateScope, Public, Static, HideBySig
    ReadUInt32Be(Stream): PrivateScope, Public, Static, HideBySig
    WriteUInt32Le(Stream, UInt32): PrivateScope, Public, Static, HideBySig
    ReadUInt32Le(Stream): PrivateScope, Public, Static, HideBySig
    WriteUInt16Be(Stream, UInt16): PrivateScope, Public, Static, HideBySig
    ReadUInt16Be(Stream): PrivateScope, Public, Static, HideBySig
    ReadByte(Stream): PrivateScope, Public, Static, HideBySig
    ReadAsciiString(Stream, Int32): PrivateScope, Public, Static, HideBySig
    WriteAsciiString(Stream, String): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.PathDetector: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CheckRectanglePath(DXGraphicsPathData): PrivateScope, Public, Static, HideBySig
    CheckEllipse(DXGraphicsPathData): PrivateScope, Public, Static, HideBySig
Interface DevExpress.Drawing.Internal.IDXPlatformFont: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    System.String Name 'get ' : 
    Single Height 'get ' : 
    Single Ascent 'get ' : 
    Single Descent 'get ' : 
    Single LineSpacing 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Ascent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Descent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LineSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct DevExpress.Drawing.Internal.DXStringFormatPrototypeKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXStringFormatPrototypeKind GenericDefault = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXStringFormatPrototypeKind GenericTypographic = 1 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.InnerMatrix: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.Internal.InnerMatrix]
  Fields:
    DevExpress.Drawing.Internal.InnerMatrix Identity : Assembly, Static, InitOnly
  Properties:
    Single[] Elements 'get ' : 
    Single OffsetX 'get ' : 
    Single OffsetY 'get ' : 
    Boolean IsInvertible 'get ' : 
    Boolean IsIdentity 'get ' : 
    Single A   'get ' : 
    Single B   'get ' : 
    Single C   'get ' : 
    Single D   'get ' : 
    Single E   'get ' : 
    Single F   'get ' : 
  Methods:
    GetSinCosFromAngle(Single): PrivateScope, Assembly, Static, HideBySig
    GetRotateMatrix(Single): PrivateScope, Assembly, Static, HideBySig
    GetScaleMatrix(Single, Single): PrivateScope, Assembly, Static, HideBySig
    GetTranslateMatrix(Single, Single): PrivateScope, Assembly, Static, HideBySig
    GetShearMatrix(Single, Single): PrivateScope, Assembly, Static, HideBySig
    Multiply(InnerMatrix, InnerMatrix): PrivateScope, Assembly, Static, HideBySig
    Multiply(PointF, InnerMatrix): PrivateScope, Assembly, Static, HideBySig
    Multiply(Single, Single, InnerMatrix): PrivateScope, Assembly, Static, HideBySig
    Invert(InnerMatrix): PrivateScope, Assembly, Static, HideBySig
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInvertible(): PrivateScope, Public, HideBySig, SpecialName
    get_IsIdentity(): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    get_C(): PrivateScope, Public, HideBySig, SpecialName
    get_D(): PrivateScope, Public, HideBySig, SpecialName
    get_E(): PrivateScope, Public, HideBySig, SpecialName
    get_F(): PrivateScope, Public, HideBySig, SpecialName
    Translate(Single, Single, DXMatrixOrder): PrivateScope, Assembly, HideBySig
    Scale(Single, Single, DXMatrixOrder): PrivateScope, Assembly, HideBySig
    Rotate(Single, DXMatrixOrder): PrivateScope, Assembly, HideBySig
    Shear(Single, Single, DXMatrixOrder): PrivateScope, Assembly, HideBySig
    Equals(InnerMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXColorMatrix: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single[][] Matrix 'get ' : 
    Single Matrix00 'get set' : 
    Single Matrix01 'get set' : 
    Single Matrix02 'get set' : 
    Single Matrix03 'get set' : 
    Single Matrix04 'get set' : 
    Single Matrix10 'get set' : 
    Single Matrix11 'get set' : 
    Single Matrix12 'get set' : 
    Single Matrix13 'get set' : 
    Single Matrix14 'get set' : 
    Single Matrix20 'get set' : 
    Single Matrix21 'get set' : 
    Single Matrix22 'get set' : 
    Single Matrix23 'get set' : 
    Single Matrix24 'get set' : 
    Single Matrix30 'get set' : 
    Single Matrix31 'get set' : 
    Single Matrix32 'get set' : 
    Single Matrix33 'get set' : 
    Single Matrix34 'get set' : 
    Single Matrix40 'get set' : 
    Single Matrix41 'get set' : 
    Single Matrix42 'get set' : 
    Single Matrix43 'get set' : 
    Single Matrix44 'get set' : 
    Single Item [Int32, Int32] 'get set' : 
  Methods:
    CreateTransparencyColorMatrix(Int32): PrivateScope, Public, Static, HideBySig
    CreateGrayscaleColorMatrix(): PrivateScope, Public, Static, HideBySig
    get_Matrix(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Matrix00(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix00(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix01(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix01(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix02(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix02(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix03(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix03(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix04(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix04(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix10(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix10(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix11(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix11(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix12(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix12(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix13(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix13(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix14(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix14(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix20(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix20(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix21(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix21(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix22(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix22(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix23(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix23(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix24(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix24(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix30(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix30(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix31(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix31(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix32(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix32(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix33(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix33(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix34(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix34(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix40(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix40(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix41(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix41(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix42(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix42(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix43(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix43(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Matrix44(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix44(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, Single): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.DXGraphicsDpi: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Drawing.SizeF DefaultImageResolutionSize : Public, Static, InitOnly
    Single DeviceIndependentPixel = 96 : Public, Static, Literal, HasDefault
    Single DefaultImageResolution = 96 : Public, Static, Literal, HasDefault
  Methods:
    UnitToDpi(DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    UnitToDpiI(DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    UnitToString(DXGraphicsUnit): PrivateScope, Public, Static, HideBySig
    GetSafeResolution(Single): PrivateScope, Public, Static, HideBySig
    GetGraphicsDpi(IDXGraphics): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.DXGraphicsPrimitiveExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Mul(PointF, Single): PrivateScope, Public, Static, HideBySig
    Add(PointF, PointF): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.DXMathUtils: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Lerp(PointF, PointF, Single): PrivateScope, Public, Static, HideBySig
    NearlyZero(Single): PrivateScope, Assembly, Static, HideBySig
    NearlyEquals(Single, Single, Single(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    NearlyEquals(Double, Double, Double(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    NearlyEquals(PointF, PointF, Single(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    NearlyEquals(RectangleF, RectangleF, Single(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
Struct DevExpress.Drawing.Internal.DXEmfType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXEmfType EmfOnly = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXEmfType EmfPlusOnly = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXEmfType EmfPlusDual = 5 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.DXMetafileFrameUnit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXMetafileFrameUnit Pixel = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXMetafileFrameUnit Point = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXMetafileFrameUnit Inch = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXMetafileFrameUnit Document = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXMetafileFrameUnit Millimeter = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXMetafileFrameUnit GdiCompatible = 7 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.DXCompositingQuality: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXCompositingQuality Invalid = -1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXCompositingQuality Default = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXCompositingQuality HighSpeed = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXCompositingQuality HighQuality = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXCompositingQuality GammaCorrected = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXCompositingQuality AssumeLinear = 4 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.DXPixelOffsetMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXPixelOffsetMode Invalid = -1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXPixelOffsetMode Default = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXPixelOffsetMode HighSpeed = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXPixelOffsetMode HighQuality = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXPixelOffsetMode None = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXPixelOffsetMode Half = 4 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.DXCubicBezierCurve: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.PointF, System.Drawing.PointF, System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF P0 'get ' : 
    System.Drawing.PointF P1 'get ' : 
    System.Drawing.PointF P2 'get ' : 
    System.Drawing.PointF P3 'get ' : 
  Methods:
    get_P0(): PrivateScope, Public, HideBySig, SpecialName
    get_P1(): PrivateScope, Public, HideBySig, SpecialName
    get_P2(): PrivateScope, Public, HideBySig, SpecialName
    get_P3(): PrivateScope, Public, HideBySig, SpecialName
    Split(Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Flatten(Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetLastFlatSegment(): PrivateScope, Public, HideBySig
    CalculatePoint(Single): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.DXGDIPlusCompatiblePathAdapter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.IDXLowLevelGraphicsPath): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF] PathPoints 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType] PathTypes 'get ' : 
  Methods:
    get_PathPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_PathTypes(): PrivateScope, Public, HideBySig, SpecialName
    StartFigure(): PrivateScope, Public, HideBySig
    CloseFigure(): PrivateScope, Public, HideBySig
    AddLine(Single, Single, Single, Single): PrivateScope, Public, HideBySig
    AddLine(PointF, PointF): PrivateScope, Public, HideBySig
    AddLines(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddLines(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddBezier(PointF, PointF, PointF, PointF): PrivateScope, Public, HideBySig
    AddBeziers(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddPolygon(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddRectangle(RectangleF): PrivateScope, Public, HideBySig
    AddRectangles(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddArc(RectangleF, Single, Single): PrivateScope, Public, HideBySig
    AddArc(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    AddEllipse(Single, Single, Single, Single): PrivateScope, Public, HideBySig
    AddEllipse(RectangleF): PrivateScope, Public, HideBySig
    AddPie(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    AddPie(Rectangle, Single, Single): PrivateScope, Public, HideBySig
    AddPath(IReadOnlyList`1, IReadOnlyList`1, Boolean): PrivateScope, Public, HideBySig
    Transform(DXMatrix): PrivateScope, Public, HideBySig
    Flatten(Single): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    AddCurve(PointF[], Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
Interface DevExpress.Drawing.Internal.IDXLowLevelGraphicsPath: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF] PathPoints 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType] PathTypes 'get ' : 
  Methods:
    get_PathPoints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PathTypes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MoveTo(PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LineTo(PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CubicTo(PointF, PointF, PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseFigure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.DXLowLevelGraphicsPath: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF], System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXLowLevelGraphicsPath
  Properties:
    System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF] PathPoints 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType] PathTypes 'get ' : 
  Methods:
    get_PathPoints(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PathTypes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CloseFigure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CubicTo(PointF, PointF, PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LineTo(PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveTo(PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.SkiaAssemblyHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateGraphicsObjectsFactory(): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.UnitConverterHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    PpiToPpm(Single): PrivateScope, Public, Static, HideBySig
    PpiToPpcm(Single): PrivateScope, Public, Static, HideBySig
    PpmToPpi(Single): PrivateScope, Public, Static, HideBySig
    PpcmToPpi(Single): PrivateScope, Public, Static, HideBySig
    PpmmToPpi(Single): PrivateScope, Public, Static, HideBySig
    PixelToInch(Single, Single): PrivateScope, Public, Static, HideBySig
    PixelToMm(Single, Single): PrivateScope, Public, Static, HideBySig
    PixelToPoint(Single, Single): PrivateScope, Public, Static, HideBySig
    InchToPixel(Single, Single): PrivateScope, Public, Static, HideBySig
    MmToPixel(Single, Single): PrivateScope, Public, Static, HideBySig
    PointToPixel(Single, Single): PrivateScope, Public, Static, HideBySig
    DocumentToPixel(Single, Single): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.DXGraphicsPathBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.DXFillMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF], System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType], DevExpress.Drawing.DXFillMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetBounds(IReadOnlyList`1): PrivateScope, Assembly, Static, HideBySig
    StartFigure(): PrivateScope, Public, HideBySig
    CloseFigure(): PrivateScope, Public, HideBySig
    AddLine(Single, Single, Single, Single): PrivateScope, Public, HideBySig
    AddLine(PointF, PointF): PrivateScope, Public, HideBySig
    AddLines(PointF[]): PrivateScope, Public, HideBySig
    AddLines(Point[]): PrivateScope, Public, HideBySig
    AddArc(RectangleF, Single, Single): PrivateScope, Public, HideBySig
    AddArc(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    AddBezier(PointF, PointF, PointF, PointF): PrivateScope, Public, HideBySig
    AddBeziers(PointF[]): PrivateScope, Public, HideBySig
    AddCurve(PointF[], Single): PrivateScope, Public, HideBySig
    AddPolygon(IReadOnlyList`1): PrivateScope, Public, HideBySig
    AddRectangle(RectangleF): PrivateScope, Public, HideBySig
    AddRectangles(RectangleF[]): PrivateScope, Public, HideBySig
    AddEllipse(Single, Single, Single, Single): PrivateScope, Public, HideBySig
    AddEllipse(RectangleF): PrivateScope, Public, HideBySig
    AddPie(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    AddPie(Rectangle, Single, Single): PrivateScope, Public, HideBySig
    AddPath(DXGraphicsPathData, Boolean): PrivateScope, Public, HideBySig
    Transform(DXMatrix): PrivateScope, Public, HideBySig
    Flatten(Single): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    GetBounds(): PrivateScope, Public, HideBySig
    GetPathData(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.DXStringLine: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF Begin 'get ' : 
    System.Drawing.PointF End 'get ' : 
  Methods:
    get_Begin(): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.DXTextLineBounds: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FirstLineIndex 'get ' : 
    Int32 LastLineIndex 'get ' : 
  Methods:
    get_FirstLineIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_LastLineIndex(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.DXStringClipper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CalculateActualLineBounds(Double, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.DXRectangleStringClipper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXStringClipper
    Void .ctor(System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CalculateActualLineBounds(Double, Double, Int32): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXStringPaintingStrategy: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Nullable`1[System.Drawing.RectangleF] ClipRect 'get ' : 
  Methods:
    get_ClipRect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetHorizontalPosition(DXTextLine): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFirstLineVerticalPosition(Int32, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CalculateActualLineBounds(Double, Double, Int32): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.DXStringPaintingAtPointStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXStringPaintingStrategy
    Void .ctor(System.Drawing.PointF, DevExpress.Drawing.DXStringFormat, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetHorizontalPosition(DXTextLine): PrivateScope, Public, Virtual, HideBySig
    GetFirstLineVerticalPosition(Int32, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXStringPaintingInsideRectStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXStringPaintingStrategy
    Void .ctor(System.Drawing.RectangleF, DevExpress.Drawing.DXStringFormat, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[System.Drawing.RectangleF] ClipRect 'get ' : 
  Methods:
    get_ClipRect(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetHorizontalPosition(DXTextLine): PrivateScope, Public, Virtual, HideBySig
    GetFirstLineVerticalPosition(Int32, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.GdiPlusMeasurer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXMeasurer
    System.IDisposable
  Methods:
    MeasureString(String, DXFont, Single, DXStringFormat, DXGraphicsUnit): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont, SizeF, DXStringFormat, DXGraphicsUnit): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.IDXGraphicsPath: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Int32 PointCount 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF] PathPoints 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType] PathTypes 'get ' : 
    DevExpress.Drawing.DXFillMode FillMode 'get set' : 
  Methods:
    get_PointCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PathPoints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PathTypes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FillMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FillMode(DXFillMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    AddLine(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLine(PointF, PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLines(IReadOnlyList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLines(IReadOnlyList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddArc(RectangleF, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddArc(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddBezier(PointF, PointF, PointF, PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddBeziers(IReadOnlyList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddPolygon(IReadOnlyList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddRectangle(RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddRectangles(IReadOnlyList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddEllipse(Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddEllipse(RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddPie(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddPie(Rectangle, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddPath(DXGraphicsPath, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddString(String, DXFont, PointF, DXStringFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddString(String, DXFont, RectangleF, DXStringFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddCurve(PointF[], Single(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Widen(DXPen): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Widen(DXPen, DXMatrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StartFigure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseFigure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsVisible(PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Flatten(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Flatten(DXMatrix, Single(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WindingOutline(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.IDXMeasurer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    MeasureString(String, DXFont, Single, DXStringFormat, DXGraphicsUnit): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MeasureString(String, DXFont, SizeF, DXStringFormat, DXGraphicsUnit): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.GdiPlusGraphics: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Drawing.Graphics): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Image): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXGraphics
    System.IDisposable
  Properties:
    System.Drawing.Graphics Graphics 'get ' : 
    DevExpress.Drawing.Internal.DXGraphicsKind GraphicsKind 'get ' : 
    Single DpiX 'get ' : 
    Single DpiY 'get ' : 
    System.Drawing.RectangleF ClipBounds 'get ' : 
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
    DevExpress.Drawing.DXSmoothingMode SmoothingMode 'get set' : 
    DevExpress.Drawing.Internal.DXPixelOffsetMode PixelOffsetMode 'get set' : 
    DevExpress.Drawing.DXTextRenderingHint TextRenderingHint 'get set' : 
    DevExpress.Drawing.DXGraphicsUnit PageUnit 'get set' : 
    Single PageScale 'get set' : 
    DevExpress.Drawing.DXCompositingMode CompositingMode 'get set' : 
    DevExpress.Drawing.Internal.DXCompositingQuality CompositingQuality 'get set' : 
    DevExpress.Drawing.DXInterpolationMode InterpolationMode 'get set' : 
  Methods:
    get_Graphics(): PrivateScope, Assembly, HideBySig, SpecialName
    get_GraphicsKind(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiX(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DpiY(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ClipBounds(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Transform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Transform(DXMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SmoothingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SmoothingMode(DXSmoothingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PixelOffsetMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PixelOffsetMode(DXPixelOffsetMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextRenderingHint(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextRenderingHint(DXTextRenderingHint): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageUnit(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageUnit(DXGraphicsUnit): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PageScale(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PageScale(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompositingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CompositingMode(DXCompositingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompositingQuality(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CompositingQuality(DXCompositingQuality): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InterpolationMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_InterpolationMode(DXInterpolationMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Save(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Restore(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(Color): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawEllipse(DXPen, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawBezier(DXPen, PointF, PointF, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF, DXGraphicsUnit, DXImageAttributes): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLines(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLines(DXPen, Point[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPolygon(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawArc(DXPen, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPath(DXPen, DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawRectangle(DXPen, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPie(DXPen, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    DrawPie(DXPen, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPie(DXBrush, Rectangle, Single, Single): PrivateScope, Public, HideBySig
    FillPie(DXBrush, RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillEllipse(DXBrush, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPolygon(DXBrush, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPath(DXBrush, DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawBeziers(DXPen, PointF[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRegion(DXBrush, DXRegion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangle(DXBrush, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangle(DXBrush, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillRectangles(DXBrush, IList`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MultiplyTransform(DXMatrix, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawJustifiedString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetTransform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RotateTransform(Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ScaleTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TranslateTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawString(String, DXFont, DXBrush, PointF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont, Single, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont, SizeF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Present(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(RectangleF, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXGraphicsPath, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetClip(DXRegion, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetClip(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetClip(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.DXImageFormatOptions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.DXImageFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.DXImageFormatOptions Jpeg 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions Bmp 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions Png 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions Gif 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions Icon 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions WindowsMetafile 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions Svg 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions Tiff 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions TiffLZW 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions TiffCCITT3 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions TiffCCITT4 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions Unknown 'get ' : 
    DevExpress.Drawing.DXImageFormat ImageFormat 'get ' : 
  Methods:
    get_Jpeg(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bmp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gif(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Icon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WindowsMetafile(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Svg(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tiff(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TiffLZW(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TiffCCITT3(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TiffCCITT4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Unknown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ImageFormat(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXTiffImageFormatOptions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXImageFormatOptions
    Void .ctor(DevExpress.Drawing.Internal.DXTiffCompression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.DXTiffCompression TiffCompression 'get set' : 
  Methods:
    get_TiffCompression(): PrivateScope, Public, HideBySig, SpecialName
    set_TiffCompression(DXTiffCompression): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXJpegImageFormatOptions: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXImageFormatOptions
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Quality 'get set' : 
  Methods:
    get_Quality(): PrivateScope, Public, HideBySig, SpecialName
    set_Quality(Int32): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXMetafileHeader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.Rectangle, System.Drawing.SizeF, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Rectangle Bounds 'get ' : 
    System.Drawing.SizeF FrameDimension 'get ' : 
    Single DpiX 'get ' : 
    Single DpiY 'get ' : 
  Methods:
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_FrameDimension(): PrivateScope, Public, HideBySig, SpecialName
    get_DpiX(): PrivateScope, Public, HideBySig, SpecialName
    get_DpiY(): PrivateScope, Public, HideBySig, SpecialName
    FromEmfHeaderRecord(EmfMetafileHeaderRecord): PrivateScope, Assembly, Static, HideBySig
Struct DevExpress.Drawing.Internal.DXTiffCompression: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXTiffCompression LZW = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXTiffCompression CCITT3 = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXTiffCompression CCITT4 = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXTiffCompression Unknown = 3 : Public, Static, Literal, HasDefault
Interface DevExpress.Drawing.Internal.IDXGraphics: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    DevExpress.Drawing.Internal.DXGraphicsKind GraphicsKind 'get ' : 
    Single DpiX 'get ' : 
    Single DpiY 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit PageUnit 'get set' : 
    Single PageScale 'get set' : 
    DevExpress.Drawing.DXSmoothingMode SmoothingMode 'get set' : 
    DevExpress.Drawing.DXCompositingMode CompositingMode 'get set' : 
    DevExpress.Drawing.Internal.DXCompositingQuality CompositingQuality 'get set' : 
    DevExpress.Drawing.DXInterpolationMode InterpolationMode 'get set' : 
    DevExpress.Drawing.Internal.DXPixelOffsetMode PixelOffsetMode 'get set' : 
    DevExpress.Drawing.DXTextRenderingHint TextRenderingHint 'get set' : 
    System.Drawing.RectangleF ClipBounds 'get ' : 
    DevExpress.Drawing.DXMatrix Transform 'get set' : 
  Methods:
    get_GraphicsKind(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DpiX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DpiY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PageUnit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PageUnit(DXGraphicsUnit): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PageScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PageScale(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SmoothingMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SmoothingMode(DXSmoothingMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CompositingMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CompositingMode(DXCompositingMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CompositingQuality(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CompositingQuality(DXCompositingQuality): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_InterpolationMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_InterpolationMode(DXInterpolationMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PixelOffsetMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PixelOffsetMode(DXPixelOffsetMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TextRenderingHint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TextRenderingHint(DXTextRenderingHint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ClipBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Transform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetClip(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetClip(RectangleF, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetClip(DXGraphicsPath, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetClip(DXRegion, DXClipCombineMode(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetClip(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clear(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RotateTransform(Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ScaleTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TranslateTransform(Single, Single, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MultiplyTransform(DXMatrix, DXMatrixOrder(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillRectangle(DXBrush, RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillRectangles(DXBrush, IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillRectangle(DXBrush, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawRectangle(DXPen, RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillEllipse(DXBrush, RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawEllipse(DXPen, RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawLine(DXPen, PointF, PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawLine(DXPen, Single, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawLines(DXPen, PointF[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawLines(DXPen, Point[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillRegion(DXBrush, DXRegion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawPolygon(DXPen, PointF[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillPolygon(DXBrush, PointF[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawBezier(DXPen, PointF, PointF, PointF, PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawArc(DXPen, RectangleF, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillPath(DXBrush, DXGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawPath(DXPen, DXGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawBeziers(DXPen, PointF[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawImage(DXImage, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawImage(DXImage, RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawImage(DXImage, RectangleF, RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawImage(DXImage, RectangleF, RectangleF, DXGraphicsUnit, DXImageAttributes): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawPie(DXPen, RectangleF, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillPie(DXBrush, RectangleF, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawString(String, DXFont, DXBrush, PointF, DXStringFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawJustifiedString(String, DXFont, DXBrush, RectangleF, DXStringFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MeasureString(String, DXFont, Single, DXStringFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MeasureString(String, DXFont, SizeF, DXStringFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Save(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Restore(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Present(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.IMultiPageTiffBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    AppendPage(DXBitmap): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.DXLineCapsBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Methods:
    BuildCaps(DXGraphicsPathData, DXPen): PrivateScope, Public, Static, HideBySig
    BuildCaps(DXGraphicsPathData, DXPen, Single): PrivateScope, Public, Static, HideBySig
    BuildCaps(DXGraphicsPathData, DXPen, DXLineCap, DXLineCap, DXCustomLineCapBase, DXCustomLineCapBase): PrivateScope, Public, Static, HideBySig
    BuildCaps(DXGraphicsPathData, DXBrush, Single, DXLineCap, DXLineCap, DXCustomLineCapBase, DXCustomLineCapBase): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.DXLineCapsBuilderResult: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXGraphicsPathData AlteredPath 'get set' : 
    DevExpress.Drawing.DXGraphicsPathData StartCapFill 'get set' : 
    DevExpress.Drawing.DXGraphicsPathData EndCapFill 'get set' : 
    DevExpress.Drawing.DXGraphicsPathData StartCapStroke 'get set' : 
    DevExpress.Drawing.DXPen StartCapStrokePen 'get set' : 
    DevExpress.Drawing.DXGraphicsPathData EndCapStroke 'get set' : 
    DevExpress.Drawing.DXPen EndCapStrokePen 'get set' : 
  Methods:
    get_AlteredPath(): PrivateScope, Public, HideBySig, SpecialName
    set_AlteredPath(DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName
    get_StartCapFill(): PrivateScope, Public, HideBySig, SpecialName
    set_StartCapFill(DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName
    get_EndCapFill(): PrivateScope, Public, HideBySig, SpecialName
    set_EndCapFill(DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName
    get_StartCapStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_StartCapStroke(DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName
    get_StartCapStrokePen(): PrivateScope, Public, HideBySig, SpecialName
    set_StartCapStrokePen(DXPen): PrivateScope, Public, HideBySig, SpecialName
    get_EndCapStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_EndCapStroke(DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName
    get_EndCapStrokePen(): PrivateScope, Public, HideBySig, SpecialName
    set_EndCapStrokePen(DXPen): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.DXMatrixCalculator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    CalculateTransformationMatrix(IReadOnlyList`1, IReadOnlyList`1): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.DXDrawingPrimitivesCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DevExpress.Drawing.Internal.DXDrawingPrimitivesCache DefaultCache 'get ' : 
  Methods:
    get_DefaultCache(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetSolidBrush(Color): PrivateScope, Public, HideBySig
    GetPen(Color): PrivateScope, Public, HideBySig
    GetPen(Color, Single): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.IDXBrushVisitor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Visit(DXSolidBrush): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DXHatchBrush): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DXLinearGradientBrush): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DXPathGradientBrush): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DXTextureBrush): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct DevExpress.Drawing.Internal.DXAlpha: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXAlpha No = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXAlpha Unpremul = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXAlpha Premul = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.DXBitsPerPixel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXBitsPerPixel Undefined = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXBitsPerPixel Format1Bpp = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXBitsPerPixel Format4Bpp = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXBitsPerPixel Format8Bpp = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXBitsPerPixel Format24Bpp = 24 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXBitsPerPixel Format32Bpp = 32 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.DXColorSpace: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXColorSpace Undefined = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXColorSpace RGB = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXColorSpace CMYK = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXColorSpace YCCK = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXColorSpace Gray = 4 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.DXPalette: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.DXColorSpace, System.Drawing.Color[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.DXColorSpace BaseColorSpace 'get ' : 
    System.Drawing.Color[] Colors 'get ' : 
  Methods:
    get_BaseColorSpace(): PrivateScope, Public, HideBySig, SpecialName
    get_Colors(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.DXPixelFormat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.DXBitsPerPixel, DevExpress.Drawing.Internal.DXColorSpace, DevExpress.Drawing.Internal.DXAlpha, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.Internal.DXPixelFormat]
  Properties:
    DevExpress.Drawing.Internal.DXPixelFormat Gray1bpp 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat Gray4bpp 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat Gray8bpp 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat Indexed1bpp 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat Indexed4bpp 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat Indexed8bpp 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat RGB24bpp 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat RGB32bpp 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat ARGB32bpp 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat ARGB32bppPremultiplied 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat CMYK32bpp 'get ' : 
    DevExpress.Drawing.Internal.DXBitsPerPixel BitsPerPixel 'get ' : 
    DevExpress.Drawing.Internal.DXColorSpace ColorSpace 'get ' : 
    DevExpress.Drawing.Internal.DXAlpha Alpha 'get ' : 
    Boolean Indexed 'get ' : 
  Methods:
    op_Equality(DXPixelFormat, DXPixelFormat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DXPixelFormat, DXPixelFormat): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gray1bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gray4bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gray8bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Indexed1bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Indexed4bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Indexed8bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RGB24bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RGB32bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ARGB32bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ARGB32bppPremultiplied(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CMYK32bpp(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BitsPerPixel(): PrivateScope, Public, HideBySig, SpecialName
    get_ColorSpace(): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    get_Indexed(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DXPixelFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Interface DevExpress.Drawing.Internal.IDXBitmap: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    DevExpress.Drawing.Internal.IDXImage
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXImage]
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXBitmap]
  Properties:
    DevExpress.Drawing.Internal.DXPixelFormat PixelFormat 'get ' : 
    DevExpress.Drawing.Internal.DXPalette Palette 'get ' : 
    Boolean CanGetPixels 'get ' : 
  Methods:
    get_PixelFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Palette(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CanGetPixels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetBitmapData(Rectangle, DXImageLockMode, DXPixelFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Convert(DXPixelFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ConvertToJpeg(Stream, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Crop(RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPixel(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetResolution(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.IDXBitmapData: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Int32 RowBytes 'get ' : 
    Int32 Height 'get ' : 
    IntPtr DataPointer 'get ' : 
  Methods:
    get_RowBytes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DataPointer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface DevExpress.Drawing.Internal.IDXImage: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXImage]
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Single HorizontalResolution 'get ' : 
    Single VerticalResolution 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions ImageFormatOptions 'get ' : 
    DevExpress.Drawing.Internal.DXImageProperties ImageProperties 'get ' : 
    Int32 NumberOfFrames 'get ' : 
    System.Drawing.SizeF PhysicalDimension 'get ' : 
    System.Object NativeImage 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HorizontalResolution(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_VerticalResolution(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ImageFormatOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ImageProperties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NumberOfFrames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PhysicalDimension(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NativeImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Save(Stream, DXImageFormatOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Save(Stream, DXImageFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateGraphics(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsDisposedOrInvalid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.IDXMetafile: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    DevExpress.Drawing.Internal.IDXImage
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXImage]
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXMetafile]
  Properties:
    DevExpress.Drawing.Internal.DXMetafileHeader Header 'get ' : 
  Methods:
    get_Header(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToEmfMetafileModel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.DXRegionDataNodeComplex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXRegionDataNode
    Void .ctor(DevExpress.Drawing.Internal.DXRegionDataNode, DevExpress.Drawing.Internal.DXRegionDataNode, DevExpress.Drawing.Internal.DXRegionDataCombineMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.DXRegionDataNode Left 'get ' : 
    DevExpress.Drawing.Internal.DXRegionDataNode Right 'get ' : 
    DevExpress.Drawing.Internal.DXRegionDataCombineMode CombineMode 'get ' : 
    Boolean IsEmpty 'get ' : 
    Boolean IsInfinite 'get ' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_CombineMode(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsInfinite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig
    Accept(IDXRegionDataNodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXRegionDataNodeEmpty: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXRegionDataNode
  Fields:
    DevExpress.Drawing.Internal.DXRegionDataNodeEmpty Instance : Public, Static
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig
    Accept(IDXRegionDataNodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXRegionDataNodeInfinite: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXRegionDataNode
  Fields:
    DevExpress.Drawing.Internal.DXRegionDataNodeInfinite Instance : Public, Static
  Properties:
    Boolean IsInfinite 'get ' : 
  Methods:
    get_IsInfinite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig
    Accept(IDXRegionDataNodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXRegionDataNode: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Boolean IsEmpty 'get ' : 
    Boolean IsInfinite 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInfinite(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Accept(IDXRegionDataNodeVisitor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Combine(DXRegionDataNode, DXRegionDataCombineMode): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.DXRegionDataNodePath: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXRegionDataNode
    Void .ctor(System.Drawing.PointF[], Byte[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF], System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType], DevExpress.Drawing.DXFillMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.DXGraphicsPathData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXGraphicsPathData PathData 'get ' : 
  Methods:
    get_PathData(): PrivateScope, Public, HideBySig, SpecialName
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig
    Accept(IDXRegionDataNodeVisitor): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.DXRegionDataNodeRectangle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXRegionDataNode
    Void .ctor(System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.RectangleF Rectangle 'get ' : 
  Methods:
    get_Rectangle(): PrivateScope, Public, HideBySig, SpecialName
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig
    Accept(IDXRegionDataNodeVisitor): PrivateScope, Public, Virtual, HideBySig
Interface DevExpress.Drawing.Internal.IDXRegionDataNodeVisitor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Visit(DXRegionDataNodeRectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DXRegionDataNodePath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DXRegionDataNodeEmpty): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DXRegionDataNodeInfinite): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Visit(DXRegionDataNodeComplex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.DXDrawingEngine: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    Boolean IsGDIPlusAvailable 'get ' : 
    Boolean IsSkiaForced 'get set' : 
    DevExpress.Drawing.Internal.DXDrawingBackend CurrentBackend 'get ' : 
    Boolean IsLibgdiplus 'get ' : 
  Methods:
    get_IsGDIPlusAvailable(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_IsSkiaForced(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ForceSkia(): PrivateScope, Public, Static, HideBySig
    Reset(): PrivateScope, Public, Static, HideBySig
    get_CurrentBackend(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsLibgdiplus(): PrivateScope, Public, Static, HideBySig, SpecialName
    IsICUAvailable(): PrivateScope, Public, Static, HideBySig
    ApplyWorkarounds(): PrivateScope, Public, Static, HideBySig
    CreateRegion(RectangleF): PrivateScope, Public, Static, HideBySig
    CreateRegion(): PrivateScope, Public, Static, HideBySig
    CreateRegion(DXGraphicsPath): PrivateScope, Public, Static, HideBySig
    CreateRegion(DXRegionDataNode): PrivateScope, Public, Static, HideBySig
    CreateGraphicsPath(DXGraphicsPathData): PrivateScope, Public, Static, HideBySig
    CreateGraphicsPath(DXFillMode): PrivateScope, Public, Static, HideBySig
    CreateGraphicsPath(IReadOnlyList`1, IReadOnlyList`1, DXFillMode): PrivateScope, Public, Static, HideBySig
    CreateImage(Stream): PrivateScope, Public, Static, HideBySig
    CreateBitmap(Int32, Int32, Int32, DXPixelFormat, DXPalette, Byte[], Int32): PrivateScope, Public, Static, HideBySig
    CreateBitmap(Int32, Int32, Int32, PixelFormat, Color[], Byte[], Int32): PrivateScope, Public, Static, HideBySig
    CreateBitmap(Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateBitmap(Int32, Int32, DXPixelFormat): PrivateScope, Public, Static, HideBySig
    CreateMetafile(Size, DXMetafileFrameUnit, DXEmfType): PrivateScope, Public, Static, HideBySig
    CreateMetafile(Stream, Size, DXMetafileFrameUnit, DXEmfType): PrivateScope, Public, Static, HideBySig
    CreateMeasurer(): PrivateScope, Public, Static, HideBySig
    CreatePlatformFont(DXFont): PrivateScope, Public, Static, HideBySig
    CreateFontEngine(): PrivateScope, Public, Static, HideBySig
    CreateTiffBuilder(Stream, DXTiffImageFormatOptions(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.DXToPlatformDrawingCache`2[TDX,TPlatform]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TDX
  Type parameter: TPlatform
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.IDXRegion: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    Intersect(IDXRegion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Intersect(DXGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Intersect(RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Union(IDXRegion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Union(DXGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Union(RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Xor(IDXRegion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Xor(DXGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Xor(RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Exclude(IDXRegion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Exclude(DXGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Exclude(RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Complement(IDXRegion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Complement(DXGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Complement(RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MakeEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MakeInfinite(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsVisible(PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsVisible(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Transform(DXMatrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct DevExpress.Drawing.Internal.DXDrawingBackend: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.DXDrawingBackend GdiPlus = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.DXDrawingBackend Skia = 1 : Public, Static, Literal, HasDefault
Interface DevExpress.Drawing.Internal.IDXGraphicsObjectsFactory: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    DevExpress.Drawing.Internal.DXDrawingBackend Backend 'get ' : 
  Methods:
    get_Backend(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    CreateRegion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateRegion(RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateRegion(DXGraphicsPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateRegion(DXRegionDataNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateImage(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateGraphicsPath(DXFillMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateGraphicsPath(IReadOnlyList`1, IReadOnlyList`1, DXFillMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateBitmap(Int32, Int32, Int32, DXPixelFormat, DXPalette, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateBitmap(Int32, Int32, Int32, PixelFormat, Color[], Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateBitmap(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateBitmap(Int32, Int32, DXPixelFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateMetafile(Size, DXMetafileFrameUnit, DXEmfType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateMetafile(Stream, Size, DXMetafileFrameUnit, DXEmfType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateMeasurer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreatePlatformFont(DXFont): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateMultiPageTiffBuilder(Stream, DXTiffImageFormatOptions, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateFontEngine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ApplyWorkarounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.SystemDrawingBrushCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXToPlatformDrawingCache`2[DevExpress.Drawing.DXBrush,System.Drawing.Brush]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetBrush(DXBrush): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.SystemDrawingConverter: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConvertPathPointTypes(Byte[]): PrivateScope, Public, Static, HideBySig
    ConvertPixelFormat(DXPixelFormat): PrivateScope, Public, Static, HideBySig
    CreateBrush(DXBrush): PrivateScope, Public, Static, HideBySig
    CreateDXBrush(Brush): PrivateScope, Public, Static, HideBySig
    CreatePen(DXPen): PrivateScope, Public, Static, HideBySig
    CreateDXPen(Pen): PrivateScope, Public, Static, HideBySig
    CreateFont(DXFont, GdiPlusFontProvider(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateDXFont(Font): PrivateScope, Public, Static, HideBySig
    CreateMatrix(DXMatrix): PrivateScope, Public, Static, HideBySig
    CreateDXMatrix(Matrix): PrivateScope, Public, Static, HideBySig
    CreateMargins(DXMargins): PrivateScope, Public, Static, HideBySig
    CreateDXMargins(Margins): PrivateScope, Public, Static, HideBySig
    GetStringFormatByPrototypeKind(DXStringFormatPrototypeKind): PrivateScope, Public, Static, HideBySig
    CreateStringFormat(DXStringFormat): PrivateScope, Public, Static, HideBySig
    CreateDXStringFormat(StringFormat, DXStringFormatPrototypeKind): PrivateScope, Public, Static, HideBySig
    CreateImageAttributes(DXImageAttributes): PrivateScope, Assembly, Static, HideBySig
    CreateColorMatrix(DXColorMatrix): PrivateScope, Assembly, Static, HideBySig
    UnwrapGraphicsPathData(DXGraphicsPathData): PrivateScope, Public, Static, HideBySig
    UnwrapGraphicsPath(DXGraphicsPath): PrivateScope, Public, Static, HideBySig
    WrapGraphicsPath(GraphicsPath): PrivateScope, Public, Static, HideBySig
    UnwrapImage(DXImage, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WrapImage(Image): PrivateScope, Public, Static, HideBySig
    UnwrapRegion(DXRegion): PrivateScope, Public, Static, HideBySig
    WrapRegion(Region): PrivateScope, Public, Static, HideBySig
    CreateRegionData(Region): PrivateScope, Public, Static, HideBySig
    CreatePaperSize(DXPaperSize): PrivateScope, Public, Static, HideBySig
    CreateDXPaperSize(PaperSize): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.SystemDrawingFontCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXToPlatformDrawingCache`2[DevExpress.Drawing.DXFont,System.Drawing.Font]
    Void .ctor(DevExpress.Drawing.Internal.Fonts.IFontProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetFont(DXFont): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.SystemDrawingGlobalCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.IFontProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    GetBrush(DXBrush): PrivateScope, Public, HideBySig
    GetPen(DXPen): PrivateScope, Public, HideBySig
    GetStringFormat(DXStringFormat): PrivateScope, Public, HideBySig
    GetFont(DXFont): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.SystemDrawingPenCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXToPlatformDrawingCache`2[DevExpress.Drawing.DXPen,System.Drawing.Pen]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPen(DXPen): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.SystemDrawingStringFormatCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.DXToPlatformDrawingCache`2[DevExpress.Drawing.DXStringFormat,System.Drawing.StringFormat]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetStringFormat(DXStringFormat): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.BlendHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Clone(DXBlend): PrivateScope, Assembly, Static, HideBySig
    InterpolateColor(Color, Color, Single): PrivateScope, Assembly, Static, HideBySig
Class DevExpress.Drawing.Internal.DXBitmapCreator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 MaxImageSampleCount = 13107000 : Public, Static, Literal, HasDefault
  Methods:
    Create(DXImage, Color): PrivateScope, Public, Static, HideBySig
    CreateFromBitmap(DXBitmap, Color): PrivateScope, Public, Static, HideBySig
    CreateFromMetafile(DXMetafile, Color, Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateFromMetafile(DXMetafile, Int32, Int32, Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateFromSvgImage(DXSvgImage, Color, Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateFromSvgImage(DXSvgImage, Int32, Int32, Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateFromImage(DXImage, DXColorMatrix): PrivateScope, Public, Static, HideBySig
    CreateFromImage(DXImage, DXColorMap[]): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.DXImageHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String DXItemSerializerTypeName = DevExpress.Drawing.Design.DXItemSerializer,DevExpress.Drawing.v24.1 : Public, Static, Literal, HasDefault
    System.String MimeTypePrefix = image/ : Assembly, Static, Literal, HasDefault
  Methods:
    SaveImage(DXImage, String): PrivateScope, Public, Static, HideBySig
    SaveImage(DXImage, String, DXImageFormat): PrivateScope, Public, Static, HideBySig
    SaveImage(DXImage, Stream): PrivateScope, Public, Static, HideBySig
    SaveImage(DXImage, Stream, DXImageFormat): PrivateScope, Public, Static, HideBySig
    LoadImageFromFile(String): PrivateScope, Public, Static, HideBySig
    LoadImageFromBase64(String): PrivateScope, Public, Static, HideBySig
    GetMimeType(DXImage): PrivateScope, Public, Static, HideBySig
    GetValidImageFormat(ImageFormat): PrivateScope, Public, Static, HideBySig
    GetValidImageFormat(DXImageFormat): PrivateScope, Public, Static, HideBySig
    ToDXImageFormat(ImageFormat): PrivateScope, Public, Static, HideBySig
    ToImageFormat(DXImageFormat): PrivateScope, Public, Static, HideBySig
    CreateBitmapWithImageFormat(Int32, Int32, Single, Single, DXImageFormat): PrivateScope, Public, Static, HideBySig
    GetValidNewImageFormat(DXImageFormat): PrivateScope, Public, Static, HideBySig
    ChangeBitmapImageFormat(DXBitmap, DXImageFormat, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PatchMetafileResolution(DXMetafile, Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetImageBytes(DXImage): PrivateScope, Public, Static, HideBySig
    GetImageBytes(DXImage, DXImageFormat): PrivateScope, Public, Static, HideBySig
    GetImageBytesInternal(DXImage, DXImageFormat): PrivateScope, Public, Static, HideBySig
    ImageFromBytes(Byte[]): PrivateScope, Public, Static, HideBySig
    GetHashCodeFromImageBytes(DXImage): PrivateScope, Public, Static, HideBySig
    GetResolutionImageSize(DXImage): PrivateScope, Public, Static, HideBySig
    GetResolutionImageSize(DXImage, Single): PrivateScope, Public, Static, HideBySig
    GetSyncObject(DXImage): PrivateScope, Assembly, Static, HideBySig
    IsEmfMetafile(DXImage): PrivateScope, Public, Static, HideBySig
    IsEmfMetafile(DXMetafile): PrivateScope, Public, Static, HideBySig
    CreateTileImage(DXImage, Size): PrivateScope, Public, Static, HideBySig
    CreateTileImage(DXImage, Size, Boolean): PrivateScope, Public, Static, HideBySig
    CreateTileBitmap(DXImage, Size, Boolean): PrivateScope, Public, Static, HideBySig
    TrySaveImplementationUnsupportedFormat(Stream, DXImage, DXImageFormat): PrivateScope, Public, Static, HideBySig
    GetImageOrientation(DXImage): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.GeometryUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDistance(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GetDistance(PointF, PointF): PrivateScope, Public, Static, HideBySig
    DotVectors(PointF, PointF): PrivateScope, Public, Static, HideBySig
    DotVectors(PointF, PointF, PointF, PointF): PrivateScope, Public, Static, HideBySig
    NormalizeAngleRadians(Double): PrivateScope, Public, Static, HideBySig
    RadiansToDegrees(Double): PrivateScope, Public, Static, HideBySig
    MiddlePoint(PointF, PointF): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.DXMetafileCreator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(Size, DXMetafileFrameUnit, DXEmfType): PrivateScope, Public, Static, HideBySig
    Create(Stream, Size, DXMetafileFrameUnit, DXEmfType): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.EnumConvertHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToHorzStringAlignment(TextAlignment): PrivateScope, Public, Static, HideBySig
    ToHorzStringAlignment(TextAlignment, Boolean): PrivateScope, Public, Static, HideBySig
    ToVertStringAlignment(TextAlignment): PrivateScope, Public, Static, HideBySig
    RTLStringAlignment(DXStringAlignment): PrivateScope, Public, Static, HideBySig
    ToLineAlignment(TextAlignment): PrivateScope, Public, Static, HideBySig
    ToTextAlignment(DXStringAlignment, DXStringAlignment): PrivateScope, Public, Static, HideBySig
    ToStringAlignment(HorzAlignment): PrivateScope, Public, Static, HideBySig
    ToStringAlignment(VertAlignment): PrivateScope, Public, Static, HideBySig
    ToHorzAlignment(DXStringAlignment): PrivateScope, Public, Static, HideBySig
    ToVertAlignment(DXStringAlignment): PrivateScope, Public, Static, HideBySig
    ChangeVertTextAlignment(TextAlignment, DXStringAlignment): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.GdiPlusTransformEmulation: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.DXMatrix WorldTransform 'get set' : 
    DevExpress.Drawing.DXGraphicsUnit PageUnit 'get set' : 
    Single PageScale 'get set' : 
    Single PpiX 'get set' : 
    Single PpiY 'get set' : 
  Methods:
    FromGraphics(IDXGraphics): PrivateScope, Public, Static, HideBySig
    get_WorldTransform(): PrivateScope, Public, HideBySig, SpecialName
    set_WorldTransform(DXMatrix): PrivateScope, Public, HideBySig, SpecialName
    get_PageUnit(): PrivateScope, Public, HideBySig, SpecialName
    set_PageUnit(DXGraphicsUnit): PrivateScope, Public, HideBySig, SpecialName
    get_PageScale(): PrivateScope, Public, HideBySig, SpecialName
    set_PageScale(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PpiX(): PrivateScope, Public, HideBySig, SpecialName
    set_PpiX(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PpiY(): PrivateScope, Public, HideBySig, SpecialName
    set_PpiY(Single): PrivateScope, Public, HideBySig, SpecialName
    GetEffectivePageScale(): PrivateScope, Public, HideBySig
    InchesToGraphicsUnits(SizeF): PrivateScope, Public, HideBySig
    GetFontSizeInGraphicsUnits(DXGraphicsUnit, Single): PrivateScope, Public, HideBySig
    GetImageSizeInPageUnits(DXImage): PrivateScope, Public, HideBySig
    GetWorldToDeviceTransform(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.ResourceDXImageHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateDXImageFromResources(String, Type): PrivateScope, Public, Static, HideBySig
    CreateDXImageFromResources(String, Assembly): PrivateScope, Public, Static, HideBySig
    CreateDXImageFromResources(String, Assembly): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Svg.SvgDXGraphics: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.IDXGraphics): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Utils.Svg.ISvgGraphics
    System.IDisposable
  Properties:
    Boolean IsGdiPlusGraphics 'get ' : 
    System.Drawing.Drawing2D.SmoothingMode SmoothingMode 'get set' : 
    DevExpress.Utils.Drawing.IDxMatrix DxTransform 'get set' : 
  Methods:
    get_IsGdiPlusGraphics(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SmoothingMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SmoothingMode(SmoothingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DxTransform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DxTransform(IDxMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreatePath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawImage(DXImage, RectangleF, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawLine(DXPen, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DrawPath(DXPen, IDxGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FillPath(DXBrush, IDxGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MeasureString(String, DXFont): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Restore(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ScaleTransform(Single, Single, MatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IntersectClip(IDxGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TranslateTransform(Single, Single, MatrixOrder(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Svg.SvgDXGraphicsPath: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.DXGraphicsPath
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Utils.Drawing.IDxGraphicsPath
Struct DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE JCS_UNKNOWN = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE JCS_GRAYSCALE = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE JCS_RGB = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE JCS_YCbCr = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE JCS_CMYK = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE JCS_YCCK = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE JCS_BG_RGB = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE JCS_BG_YCC = 7 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Interop.J_DCT_METHOD: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Interop.J_DCT_METHOD JDCT_ISLOW = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_DCT_METHOD JDCT_IFAST = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_DCT_METHOD JDCT_FLOAT = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Interop.J_DITHER_MODE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Interop.J_DITHER_MODE JDITHER_NONE = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_DITHER_MODE JDITHER_ORDERED = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_DITHER_MODE JDITHER_FS = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Interop.J_COLOR_TRANSFORM: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Interop.J_COLOR_TRANSFORM JCT_NONE = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.J_COLOR_TRANSFORM JCT_SUBTRACT_GREEN = 1 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Interop.jpeg_memory_mgr: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    IntPtr Alloc_sarray 'get ' : 
    IntPtr Alloc_small 'get ' : 
  Methods:
    get_Alloc_sarray(): PrivateScope, Public, HideBySig, SpecialName
    get_Alloc_small(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Interop.msg_parmStruct: AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Byte[] S   'get ' : 
  Methods:
    get_S(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Interop.jpeg_error_mgr: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    IntPtr Error_exit 'get set' : 
    IntPtr Emit_message 'get set' : 
    IntPtr Output_message 'get set' : 
  Methods:
    get_Error_exit(): PrivateScope, Public, HideBySig, SpecialName
    set_Error_exit(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Emit_message(): PrivateScope, Public, HideBySig, SpecialName
    set_Emit_message(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Output_message(): PrivateScope, Public, HideBySig, SpecialName
    set_Output_message(IntPtr): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Interop.jpeg_source_mgr: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    IntPtr NextInputByte 'get set' : 
    IntPtr BytesInBuffer 'get set' : 
    IntPtr InitSource 'get set' : 
    IntPtr FillInputBuffer 'get set' : 
    IntPtr SkipInputData 'get set' : 
    IntPtr ResyncToRestart 'get set' : 
    IntPtr TermSource 'get set' : 
  Methods:
    get_NextInputByte(): PrivateScope, Public, HideBySig, SpecialName
    set_NextInputByte(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_BytesInBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_BytesInBuffer(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_InitSource(): PrivateScope, Public, HideBySig, SpecialName
    set_InitSource(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_FillInputBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_FillInputBuffer(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_SkipInputData(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipInputData(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_ResyncToRestart(): PrivateScope, Public, HideBySig, SpecialName
    set_ResyncToRestart(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_TermSource(): PrivateScope, Public, HideBySig, SpecialName
    set_TermSource(IntPtr): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Interop.libJpegBoolean: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct DevExpress.Drawing.Internal.Interop.jpeg_decompress_struct62: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    IntPtr Err 'get set' : 
    IntPtr Src 'get set' : 
    IntPtr ClientData 'get set' : 
    IntPtr Mem 'get ' : 
    UInt32 Output_width 'get ' : 
    Int32 Output_components 'get ' : 
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE Out_color_space 'get ' : 
  Methods:
    get_Err(): PrivateScope, Public, HideBySig, SpecialName
    set_Err(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Src(): PrivateScope, Public, HideBySig, SpecialName
    set_Src(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_ClientData(): PrivateScope, Public, HideBySig, SpecialName
    set_ClientData(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Mem(): PrivateScope, Public, HideBySig, SpecialName
    get_Output_width(): PrivateScope, Public, HideBySig, SpecialName
    get_Output_components(): PrivateScope, Public, HideBySig, SpecialName
    get_Out_color_space(): PrivateScope, Public, HideBySig, SpecialName
Interface DevExpress.Drawing.Internal.Interop.ILibJpegTurboInterop62: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    jpeg_start_decompress(jpeg_decompress_struct62&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_read_scanlines(jpeg_decompress_struct62&, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_destroy_decompress(jpeg_decompress_struct62&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_std_error(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_read_header(jpeg_decompress_struct62&, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_CreateDecompress(jpeg_decompress_struct62&, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_resync_to_restart(jpeg_decompress_struct62&, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Interop.LibJpegTurboInterop62: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Methods:
    EnsureLoaded(): PrivateScope, Public, Static, HideBySig
    jpeg_start_decompress(jpeg_decompress_struct62&): PrivateScope, Public, Static, HideBySig
    jpeg_read_scanlines(jpeg_decompress_struct62&, IntPtr, UInt32): PrivateScope, Public, Static, HideBySig
    jpeg_destroy_decompress(jpeg_decompress_struct62&): PrivateScope, Public, Static, HideBySig
    jpeg_std_error(IntPtr): PrivateScope, Public, Static, HideBySig
    jpeg_CreateDecompress(jpeg_decompress_struct62&): PrivateScope, Public, Static, HideBySig
    jpeg_read_header(jpeg_decompress_struct62&): PrivateScope, Public, Static, HideBySig
    jpeg_resync_to_restart(jpeg_decompress_struct62&, Int32): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Drawing.Internal.Interop.jpeg_decompress_struct8: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    IntPtr Err 'get set' : 
    IntPtr ClientData 'get set' : 
    IntPtr Mem 'get ' : 
    UInt32 Output_width 'get ' : 
    Int32 Output_components 'get ' : 
    DevExpress.Drawing.Internal.Interop.J_COLOR_SPACE Out_color_space 'get ' : 
  Methods:
    get_Err(): PrivateScope, Public, HideBySig, SpecialName
    set_Err(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_ClientData(): PrivateScope, Public, HideBySig, SpecialName
    set_ClientData(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Mem(): PrivateScope, Public, HideBySig, SpecialName
    get_Output_width(): PrivateScope, Public, HideBySig, SpecialName
    get_Output_components(): PrivateScope, Public, HideBySig, SpecialName
    get_Out_color_space(): PrivateScope, Public, HideBySig, SpecialName
Interface DevExpress.Drawing.Internal.Interop.ILibJpegTurboInterop8: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    jpeg_mem_src(jpeg_decompress_struct8&, IntPtr, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_start_decompress(jpeg_decompress_struct8&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_read_scanlines(jpeg_decompress_struct8&, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_destroy_decompress(jpeg_decompress_struct8&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_std_error(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_read_header(jpeg_decompress_struct8&, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    jpeg_CreateDecompress(jpeg_decompress_struct8&, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Interop.LibJpegTurboInterop8: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Methods:
    EnsureLoaded(): PrivateScope, Public, Static, HideBySig
    jpeg_mem_src(jpeg_decompress_struct8&, IntPtr, Int64): PrivateScope, Public, Static, HideBySig
    jpeg_start_decompress(jpeg_decompress_struct8&): PrivateScope, Public, Static, HideBySig
    jpeg_read_scanlines(jpeg_decompress_struct8&, IntPtr, UInt32): PrivateScope, Public, Static, HideBySig
    jpeg_destroy_decompress(jpeg_decompress_struct8&): PrivateScope, Public, Static, HideBySig
    jpeg_std_error(IntPtr): PrivateScope, Public, Static, HideBySig
    jpeg_CreateDecompress(jpeg_decompress_struct8&): PrivateScope, Public, Static, HideBySig
    jpeg_read_header(jpeg_decompress_struct8&): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Interop.LibJpegTurboWrapper: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    SetData(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutColorSpace(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FillBuffer(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Interop.LibJpegTurboWrapper62: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.LibJpegTurboWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetData(Byte[]): PrivateScope, Public, Virtual, HideBySig
    GetOutColorSpace(Byte[]): PrivateScope, Public, Virtual, HideBySig
    FillBuffer(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Interop.LibJpegTurboWrapper8: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.LibJpegTurboWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetData(Byte[]): PrivateScope, Public, Virtual, HideBySig
    GetOutColorSpace(Byte[]): PrivateScope, Public, Virtual, HideBySig
    FillBuffer(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Interop.Gdi32: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    AddFontMemResourceEx(Byte[], Int32, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    RemoveFontResourceEx(String, Int32, IntPtr): PrivateScope, Public, Static, HideBySig
    RemoveFontMemResourceEx(IntPtr): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Drawing.Internal.Interop.FormatMessageFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Interop.FormatMessageFlags FROM_SYSTEM = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.FormatMessageFlags ALLOCATE_BUFFER = 256 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.FormatMessageFlags IGNORE_INSERTS = 512 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.FormatMessageFlags ARGUMENT_ARRAY = 8192 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Interop.MoveFileFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Interop.MoveFileFlags MOVEFILE_REPLACE_EXISTING = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.MoveFileFlags MOVEFILE_COPY_ALLOWED = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.MoveFileFlags MOVEFILE_DELAY_UNTIL_REBOOT = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Interop.MoveFileFlags MOVEFILE_WRITE_THROUGH = 8 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Interop.Kernel32Interop: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    LoadLibraryEx(String, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetProcAddress(IntPtr, String): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    FreeLibrary(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    FormatMessage(FormatMessageFlags, IntPtr, UInt32, Int32, StringBuilder, Int32, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MoveFileEx(String, String, MoveFileFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class DevExpress.Drawing.Internal.Interop.ExternalObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    IntPtr NativeObject 'get set' : 
  Methods:
    get_NativeObject(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Interop.NativeLibraryLoadResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(IntPtr, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr Handle 'get ' : 
    System.String ErrorMessage 'get ' : 
  Methods:
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorMessage(): PrivateScope, Public, HideBySig, SpecialName
Interface DevExpress.Drawing.Internal.Interop.INativeLibraryNameConstructor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetLibraryFullName(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Interop.NativeLibraryLoader: AutoLayout, AnsiClass, Class, Public, Abstract
  Properties:
    DevExpress.Drawing.Internal.Interop.NativeLibraryLoader Loader 'get ' : 
  Methods:
    get_Loader(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetFunctionPointer(IntPtr, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FreeLibrary(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryLoad(String, String): PrivateScope, Public, HideBySig
    TryLoad(String): PrivateScope, Public, HideBySig
    Load(String): PrivateScope, Public, HideBySig
    Load(String, String): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Interop.WindowsNativeLibraryNameConstructor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Interop.INativeLibraryNameConstructor
  Methods:
    GetLibraryFullName(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Interop.WindowsNativeLibraryLoader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.NativeLibraryLoader
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FreeLibrary(IntPtr): PrivateScope, Public, Virtual, HideBySig
    GetFunctionPointer(IntPtr, String): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Interop.InteropHelperBuilder: AutoLayout, AnsiClass, Class, Public
  Methods:
    CreateInteropHelper(UnmanagedLibrary): PrivateScope, Public, Static, HideBySig
    CreateInteropHelper(UnmanagedLibrary, String): PrivateScope, Public, Static, HideBySig
    AcquirePointer(SafeBuffer): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Interop.NativeDependenciesLocations: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.String ICUPath 'get set' : 
    System.String ICUVersionSuffix 'get set' : 
    System.String HarfbuzzPath 'get set' : 
    System.String FreeTypePath 'get set' : 
    System.String FontConfigPath 'get set' : 
    System.String LibJpegTurboPath 'get set' : 
    System.String LibTiffPath 'get set' : 
  Methods:
    get_ICUPath(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ICUPath(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ICUVersionSuffix(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ICUVersionSuffix(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HarfbuzzPath(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_HarfbuzzPath(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FreeTypePath(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_FreeTypePath(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FontConfigPath(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_FontConfigPath(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LibJpegTurboPath(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LibJpegTurboPath(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LibTiffPath(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LibTiffPath(String): PrivateScope, Public, Static, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Interop.UnmanagedLibrary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(IntPtr, DevExpress.Drawing.Internal.Interop.NativeLibraryLoader, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    TryGetFunctionPointer(String): PrivateScope, Public, HideBySig
    GetFunctionPointer(String): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Images.Ico.IcoHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    WriteSingleImageIcoHeader(Stream, Int32, Int32, Int32, UInt32): PrivateScope, Public, Static, HideBySig
    ParseResolution(Stream): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Images.Gif.GifBitCodeWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Images.Gif.GifBinaryWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteBitCode(Int32, Int32): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Images.Gif.GifBufferedBlockWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Images.Gif.GifBinaryWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteByte(Byte): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Images.Gif.GifColorTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IReadOnlyCollection`1[System.Drawing.Color] Colors 'get ' : 
    Byte TransparentIndex 'get ' : 
    Byte LzwMinimumCodeSize 'get ' : 
    Single RSpread 'get ' : 
    Single GSpread 'get ' : 
    Single BSpread 'get ' : 
  Methods:
    get_Colors(): PrivateScope, Public, HideBySig, SpecialName
    get_TransparentIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_LzwMinimumCodeSize(): PrivateScope, Public, HideBySig, SpecialName
    get_RSpread(): PrivateScope, Public, HideBySig, SpecialName
    get_GSpread(): PrivateScope, Public, HideBySig, SpecialName
    get_BSpread(): PrivateScope, Public, HideBySig, SpecialName
    GetColorIndex(Byte, Byte, Byte): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Images.Gif.GifDither: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    DitherComponentBayer4x4(Byte, Int32, Int32, Single): PrivateScope, Public, Static, HideBySig
    DitherComponentBayer8x8(Byte, Int32, Int32, Single): PrivateScope, Public, Static, HideBySig
    DitherComponentBayer16x16(Byte, Int32, Int32, Single): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Images.Gif.GifLzwEncoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Images.Gif.GifBinaryWriter, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ClearCode(): PrivateScope, Public, HideBySig
    WriteIndex(Byte): PrivateScope, Public, HideBySig
    End(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Images.Gif.GifBinaryWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDataBlock(Byte[], Byte): PrivateScope, Public, HideBySig
    WriteBlockTerminator(): PrivateScope, Public, HideBySig
    WriteHeader(): PrivateScope, Public, HideBySig
    WriteLogicalScreenDescriptor(Int32, Int32): PrivateScope, Public, HideBySig
    WriteColorTable(IReadOnlyCollection`1): PrivateScope, Public, HideBySig
    WriteImageDescriptor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    WriteStartImageData(Byte): PrivateScope, Public, HideBySig
    WriteGraphicControlExtension(Byte): PrivateScope, Public, HideBySig
    WriteTrailer(): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod Rgb = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod Rle8 = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod Rle4 = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod BitFields = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod Jpeg = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod Png = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod AlphaBitFields = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod Cmyk = 11 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod CmykRle8 = 12 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod CmykRle4 = 13 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Images.Bmp.BmpHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteBmpHeader(BinaryWriter, BitmapInfoHeader): PrivateScope, Public, Static, HideBySig
    ParseResolution(Stream): PrivateScope, Assembly, Static, HideBySig
Class DevExpress.Drawing.Internal.Images.Bmp.BitmapInfoHeader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Width 'get set' : 
    Int32 Height 'get set' : 
    UInt16 BitsPerPixels 'get set' : 
    DevExpress.Drawing.Internal.Images.Bmp.BitmapCompressionMethod Compression 'get set' : 
    Int32 ImageSize 'get set' : 
    Int32 HorizontalResolutionPpm 'get set' : 
    Int32 VerticalResolutionPpm 'get set' : 
    Int32 PaletteSize 'get set' : 
    Boolean BitMaskPresent 'get set' : 
    Int32 RMask 'get set' : 
    Int32 GMask 'get set' : 
    Int32 BMask 'get set' : 
    Int32 AMask 'get set' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BitsPerPixels(): PrivateScope, Public, HideBySig, SpecialName
    set_BitsPerPixels(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Compression(): PrivateScope, Public, HideBySig, SpecialName
    set_Compression(BitmapCompressionMethod): PrivateScope, Public, HideBySig, SpecialName
    get_ImageSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ImageSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalResolutionPpm(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalResolutionPpm(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalResolutionPpm(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalResolutionPpm(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PaletteSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PaletteSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BitMaskPresent(): PrivateScope, Public, HideBySig, SpecialName
    set_BitMaskPresent(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RMask(): PrivateScope, Public, HideBySig, SpecialName
    set_RMask(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_GMask(): PrivateScope, Public, HideBySig, SpecialName
    set_GMask(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BMask(): PrivateScope, Public, HideBySig, SpecialName
    set_BMask(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AMask(): PrivateScope, Public, HideBySig, SpecialName
    set_AMask(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetActualImageSize(): PrivateScope, Public, HideBySig
    GetHeaderSize(): PrivateScope, Public, HideBySig
    Write(BinaryWriter): PrivateScope, Public, HideBySig
    Read(Stream): PrivateScope, Public, Static, HideBySig
    Read(BinaryReader): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Images.Png.ChunkDataPhys: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 DataLenght = 9 : Public, Static, Literal, HasDefault
    Byte UnitSpecifierUnknown = 0 : Public, Static, Literal, HasDefault
    Byte UnitSpecifierMeter = 1 : Public, Static, Literal, HasDefault
  Properties:
    UInt32 PixelPerUnitX 'get set' : 
    UInt32 PixelPerUnitY 'get set' : 
    Byte UnitSpecifier 'get set' : 
  Methods:
    get_PixelPerUnitX(): PrivateScope, Public, HideBySig, SpecialName
    set_PixelPerUnitX(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_PixelPerUnitY(): PrivateScope, Public, HideBySig, SpecialName
    set_PixelPerUnitY(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_UnitSpecifier(): PrivateScope, Public, HideBySig, SpecialName
    set_UnitSpecifier(Byte): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Images.Png.PngCrc32: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Crc(Byte[], Int32): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Images.Png.PngHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsPng(Stream): PrivateScope, Public, Static, HideBySig
    ParseResolution(Stream): PrivateScope, Public, Static, HideBySig
    AppendResolution(MemoryStream, SizeF): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Images.Png.PngReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ChunkTypeIhdr = IHDR : Public, Static, Literal, HasDefault
    System.String ChunkTypePhys = pHYs : Public, Static, Literal, HasDefault
    System.String ChunkTypeIdat = IDAT : Public, Static, Literal, HasDefault
    System.String ChunkTypeIend = IEND : Public, Static, Literal, HasDefault
  Properties:
    Int64 ChunkLenght 'get set' : 
    System.String ChunkType 'get set' : 
    Int64 ChunkDataPosition 'get set' : 
    Int64 NextChunkStartPosition 'get set' : 
  Methods:
    get_ChunkLenght(): PrivateScope, Public, HideBySig, SpecialName
    get_ChunkType(): PrivateScope, Public, HideBySig, SpecialName
    get_ChunkDataPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_NextChunkStartPosition(): PrivateScope, Public, HideBySig, SpecialName
    TryReadHeader(): PrivateScope, Public, HideBySig
    ReadNextChunkHeader(): PrivateScope, Public, HideBySig
    ReadPhysChunkData(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Images.Jpeg.JpegHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ParseResolution(Stream): PrivateScope, Public, Static, HideBySig
    AppendResolution(MemoryStream, SizeF): PrivateScope, Public, Static, HideBySig
    IsValidJpegHeader(Byte[]): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Images.Tiff.TiffHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsTiffStream(Stream): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffClientStream: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    ReadDelegate ReadDelegateInstance 'get ' : 
    WriteDelegate WriteDelegateInstance 'get ' : 
    SeekDelegate SeekDelegateInstance 'get ' : 
    CloseDelegate CloseDelegateInstance 'get ' : 
    SizeDelegate SizeDelegateInstance 'get ' : 
    MapDelegate MapDelegateInstance 'get ' : 
    UnmapDelegate UnmapDelegateInstance 'get ' : 
  Methods:
    get_ReadDelegateInstance(): PrivateScope, Public, HideBySig, SpecialName
    get_WriteDelegateInstance(): PrivateScope, Public, HideBySig, SpecialName
    get_SeekDelegateInstance(): PrivateScope, Public, HideBySig, SpecialName
    get_CloseDelegateInstance(): PrivateScope, Public, HideBySig, SpecialName
    get_SizeDelegateInstance(): PrivateScope, Public, HideBySig, SpecialName
    get_MapDelegateInstance(): PrivateScope, Public, HideBySig, SpecialName
    get_UnmapDelegateInstance(): PrivateScope, Public, HideBySig, SpecialName
    Read(IntPtr, IntPtr, Int32): PrivateScope, Public, HideBySig
    Write(IntPtr, IntPtr, Int32): PrivateScope, Public, HideBySig
    Seek(IntPtr, UInt32, Int32): PrivateScope, Public, HideBySig
    Close(IntPtr): PrivateScope, Public, HideBySig
    Size(IntPtr): PrivateScope, Public, HideBySig
    Map(IntPtr, IntPtr, UInt32&(Out)): PrivateScope, Public, HideBySig
    Unmap(IntPtr, IntPtr, Int32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffNativeObject: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOpened 'get ' : 
  Methods:
    get_IsOpened(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.LibTiffInterop: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    EnsureLoaded(): PrivateScope, Public, Static, HideBySig
    TiffOpenFile(String, String): PrivateScope, Public, Static, HideBySig
    TiffClose(IntPtr): PrivateScope, Public, Static, HideBySig
    GetImageSzie(IntPtr): PrivateScope, Public, Static, HideBySig
    GetImageResolution(IntPtr): PrivateScope, Public, Static, HideBySig
    ReadRgba(IntPtr, UInt32, UInt32, IntPtr): PrivateScope, Public, Static, HideBySig
    SetImageTags(IntPtr, Int32, Int32, Boolean, Single, Single): PrivateScope, Public, Static, HideBySig
    TiffWriteDirectory(IntPtr): PrivateScope, Public, Static, HideBySig
    TiffMalloc(UInt32): PrivateScope, Public, Static, HideBySig
    TiffFree(IntPtr): PrivateScope, Public, Static, HideBySig
    WriteScanline(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    TiffClientOpen(TiffClientStream, String): PrivateScope, Public, Static, HideBySig
Interface DevExpress.Drawing.Internal.Images.Tiff.Interop.ILibTiffInterop: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    TIFFOpen(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFClose(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFGetField(IntPtr, UInt32, UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFGetField(IntPtr, UInt32, UInt16&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFGetField(IntPtr, UInt32, Double&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFGetField(IntPtr, UInt32, Single&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFSetField(IntPtr, UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFSetField(IntPtr, UInt32, UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFSetField(IntPtr, UInt32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFSetField(IntPtr, UInt32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFSetField(IntPtr, UInt32, UInt16, UInt16[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFSetField(IntPtr, UInt32, UInt16, UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFSetField(IntPtr, UInt32, UInt16, UInt16, UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFSetField(IntPtr, UInt32, UInt16, UInt16, UInt16, UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFReadRGBAImageOriented(IntPtr, UInt32, UInt32, IntPtr, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFWriteScanline(IntPtr, IntPtr, UInt32, UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFDefaultStripSize(IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFWriteDirectory(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    _TIFFmalloc(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    _TIFFfree(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TIFFClientOpen(IntPtr, IntPtr, IntPtr, ReadDelegate, WriteDelegate, SeekDelegate, CloseDelegate, SizeDelegate, MapDelegate, UnmapDelegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.Tiff: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsOpened 'get ' : 
  Methods:
    get_IsOpened(): PrivateScope, Public, HideBySig, SpecialName
    OpenFileRead(String): PrivateScope, Public, Static, HideBySig
    OpenFileWrite(String): PrivateScope, Public, Static, HideBySig
    OpenStreamRead(Stream): PrivateScope, Public, Static, HideBySig
    OpenStreamWrite(Stream): PrivateScope, Public, Static, HideBySig
    GetSize(): PrivateScope, Public, HideBySig
    GetResolution(): PrivateScope, Public, HideBySig
    ReadRgba(): PrivateScope, Public, HideBySig
    SetImageTags(Int32, Int32, Boolean, Single, Single): PrivateScope, Public, HideBySig
    WriteScanline(TiffMalloc, Int32): PrivateScope, Public, HideBySig
    WriteDirectory(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffMalloc: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    CopyToByteArray(): PrivateScope, Public, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.IDXFontFallback: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetFallbackFont(StringView, DXFontDescriptor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.DXShaper`1[TAnalysisRun]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TAnalysisRun, DevExpress.Drawing.Internal.Fonts.IDXTextAnalysisRun,  ReferenceType
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXShaper
    System.IDisposable
  Methods:
    ShapeText(String, Boolean, Single, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AnalyzeText(String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FontHasCharacters(StringView): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.DXTextLine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.List`1[DevExpress.Drawing.Internal.Fonts.DXClusterRun]
  Methods:
    CreateGlyphRunLines(IList`1): PrivateScope, Public, Static, HideBySig
    Create(IList`1): PrivateScope, Public, Static, HideBySig
    GetWidth(): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.DXClusterRun: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Collections.Generic.IEnumerable`1[DevExpress.Drawing.Internal.Fonts.DXCluster], System.String, DevExpress.Drawing.DXFontStyle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FallbackFontFamily 'get ' : 
    DevExpress.Drawing.DXFontStyle FallbackFontStyle 'get ' : 
    System.Collections.Generic.IEnumerable`1[DevExpress.Drawing.Internal.Fonts.DXCluster] Clusters 'get ' : 
  Methods:
    get_FallbackFontFamily(): PrivateScope, Public, HideBySig, SpecialName
    get_FallbackFontStyle(): PrivateScope, Public, HideBySig, SpecialName
    get_Clusters(): PrivateScope, Public, HideBySig, SpecialName
    GetWidth(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DXJustifyHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Justify(IList`1, Single): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DXLineFormatterFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DXFontFace, Single, DevExpress.Drawing.Internal.Fonts.IDXFontFallback): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXLineFormatterFont
    System.IDisposable
  Properties:
    Single Size 'get ' : 
    Double Ascent 'get ' : 
    Double Descent 'get ' : 
    Double LineSpacing 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ascent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Descent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineSpacing(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ShapeText(String, Boolean, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DXLineFormatterOptions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DXKerningMode, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.Fonts.DXKerningMode KerningMode 'get set' : 
    Boolean JustifyText 'get set' : 
  Methods:
    get_KerningMode(): PrivateScope, Public, HideBySig, SpecialName
    set_KerningMode(DXKerningMode): PrivateScope, Public, HideBySig, SpecialName
    get_JustifyText(): PrivateScope, Public, HideBySig, SpecialName
    set_JustifyText(Boolean): PrivateScope, Public, HideBySig, SpecialName
Interface DevExpress.Drawing.Internal.Fonts.IDXLineFormatterFont: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Double Ascent 'get ' : 
    Double Descent 'get ' : 
    Double LineSpacing 'get ' : 
    Single Size 'get ' : 
  Methods:
    get_Ascent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Descent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LineSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ShapeText(String, Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.Fonts.IDXShaper: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    AnalyzeText(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ShapeText(String, Boolean, Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FontHasCharacters(StringView): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.DXTextAnalysisRun`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, DevExpress.Drawing.Internal.Fonts.IDXTextBufferRun`1[T]
  :DevExpress.Drawing.Internal.Fonts.DXTextBufferRun`1[T]
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXTextAnalysisRun
  Properties:
    DevExpress.Drawing.Internal.Fonts.StringView Text 'get set' : 
    Byte BidiLevel 'get set' : 
    Boolean IsNonVisual 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BidiLevel(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BidiLevel(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_IsNonVisual(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsNonVisual(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetBreakpoint(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.DXFontEngine: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXFontFallback
    System.IDisposable
  Methods:
    MatchFontFace(String, DXFontStyle): PrivateScope, Public, HideBySig
    MatchFontFace(DXFontDescriptor): PrivateScope, Public, HideBySig
    GetFontsInfo(): PrivateScope, Public, HideBySig
    AddMemoryFont(Byte[]): PrivateScope, Public, HideBySig
    CreateFontData(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateFontData(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFallbackFont(StringView, DXFontDescriptor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.Fonts.IDXTextAnalysisRun: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    DevExpress.Drawing.Internal.Fonts.StringView Text 'get ' : 
    Byte BidiLevel 'get ' : 
    Boolean IsNonVisual 'get ' : 
  Methods:
    get_Text(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BidiLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsNonVisual(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetBreakpoint(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.DXTextBufferRun`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, DevExpress.Drawing.Internal.Fonts.IDXTextBufferRun`1[T]
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXTextBufferRun`1[T]
  Properties:
    Int32 Offset 'get ' : 
    Int32 Length 'get set' : 
  Methods:
    get_Offset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Split(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.Fonts.IDXLineBreakAnalyzer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetBreakPoints(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.DXLineBreakAnalyzer: NotPublic
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXLineBreakAnalyzer
  Properties:
    DevExpress.Drawing.Internal.Fonts.IDXLineBreakAnalyzer Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetBreakPoints(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.IFontProviderFactory`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T, DevExpress.Drawing.Internal.Fonts.IFontProvider
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.CrossPlatformFontProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IFontProvider
    System.IDisposable
    DevExpress.Drawing.Internal.Fonts.IDXWin32FontCollection`1[DevExpress.Drawing.Internal.Fonts.CrossPlatform.FreeTypeFontFace]
  Properties:
    System.Collections.Generic.IDictionary`2[System.String,DevExpress.Drawing.Internal.Fonts.CrossPlatform.FreeTypeFontFamily] Families 'get ' : 
  Methods:
    get_Families(): PrivateScope, Public, HideBySig, SpecialName
    AddFontSource(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddFontSource(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindFamily(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MatchFaceByWin32Name(String, DXFontStyle): PrivateScope, Public, HideBySig
    GetFontsInfo(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DirectWriteFontProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IFontProvider
    System.IDisposable
  Properties:
    DevExpress.Drawing.Internal.Fonts.DirectWrite.CCW.DirectWriteFontFileLoader FontFileLoader 'get ' : 
  Methods:
    get_FontFileLoader(): PrivateScope, Public, HideBySig, SpecialName
    RegisterListener(IDirectWriteFontProviderListener): PrivateScope, Public, HideBySig
    RemoveListener(IDirectWriteFontProviderListener): PrivateScope, Public, HideBySig
    AddFontSource(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddFontSource(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DXFontDataProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IFontProvider
    System.IDisposable
  Properties:
    System.Collections.Generic.IList`1[DevExpress.Drawing.DXFontData] Fonts 'get ' : 
  Methods:
    get_Fonts(): PrivateScope, Public, HideBySig, SpecialName
    AddFontSource(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddFontSource(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.GdiPlusFontProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IFontProvider
    System.IDisposable
  Properties:
    System.Drawing.Text.PrivateFontCollection PrivateFontCollection 'get ' : 
  Methods:
    get_PrivateFontCollection(): PrivateScope, Public, HideBySig, SpecialName
    GetFont(String, Single, FontStyle, GraphicsUnit): PrivateScope, Public, HideBySig
    AddFontSource(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddFontSource(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.Fonts.IFontProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    AddFontSource(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddFontSource(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.Fonts.IDirectWriteFontProviderListener: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFactory Factory 'get ' : 
  Methods:
    get_Factory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    OnFontsChanged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.Fonts.IFontRepositoryListener: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    OnChanged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.Fonts.IFontSource: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    AddToProvider(IFontProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.FileFontSource: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IFontSource
  Methods:
    AddToProvider(IFontProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.InMemoryFontSource: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IFontSource
  Methods:
    AddToProvider(IFontProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DXFontExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDecorations(FontStyle): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.ClusterListSegment: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Compatibility.Internal.Span`1[DevExpress.Drawing.Internal.Fonts.DXCluster], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Compatibility.Internal.Span`1[DevExpress.Drawing.Internal.Fonts.DXCluster]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.Fonts.ClusterListSegment EmptyView 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXCluster Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
    Single Width 'get ' : 
    Boolean Empty 'get ' : 
  Methods:
    get_EmptyView(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    Split(Int32): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Line: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Single, System.Lazy`1[DevExpress.Drawing.Internal.Fonts.ClusterListSegment], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Empty 'get ' : 
    Boolean EmptyAndNoTrailingSpaces 'get ' : 
    Boolean ShouldAppendSoftHyphen 'get set' : 
    Single Width 'get ' : 
    Single MaxWidth 'get ' : 
    Boolean EndWithSoftHyphen 'get set' : 
  Methods:
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_EmptyAndNoTrailingSpaces(): PrivateScope, Public, HideBySig, SpecialName
    get_ShouldAppendSoftHyphen(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_EndWithSoftHyphen(): PrivateScope, Public, HideBySig, SpecialName
    GetClusters(): PrivateScope, Public, HideBySig
    GetLineEndCluster(): PrivateScope, Public, HideBySig
    IsFit(Single): PrivateScope, Public, HideBySig
    AddRange(Range): PrivateScope, Public, HideBySig
    AddRangePart(Range): PrivateScope, Public, HideBySig
    TryAppendTabStop(DXCluster, Single): PrivateScope, Public, HideBySig
    AddCluster(DXCluster): PrivateScope, Public, HideBySig
    TryEndLineWithEllipsis(ClusterListSegment, Boolean): PrivateScope, Public, HideBySig
    AppendHyphen(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.LineTrimmingInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.DXStringTrimming): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.Fonts.IDXLineFormatterFont, DevExpress.Drawing.DXStringTrimming): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.Fonts.ClusterListSegment EllipsisCollection 'get ' : 
    DevExpress.Drawing.DXStringTrimming Trimming 'get ' : 
    Single EllipsisWidth 'get ' : 
  Methods:
    get_EllipsisCollection(): PrivateScope, Public, HideBySig, SpecialName
    get_Trimming(): PrivateScope, Public, HideBySig, SpecialName
    get_EllipsisWidth(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.ParagraphInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SplitByParagraphs(String): PrivateScope, Public, Static, HideBySig
    GetText(Boolean): PrivateScope, Public, HideBySig
    GetActualCharactersCount(Int32): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Range: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.ClusterListSegment, DevExpress.Drawing.Internal.Fonts.ClusterListSegment, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single WidthWithoutTrailingSpaces 'get ' : 
    DevExpress.Drawing.Internal.Fonts.ClusterListSegment Clusters 'get ' : 
    DevExpress.Drawing.Internal.Fonts.ClusterListSegment TrailingSpaces 'get ' : 
    Boolean EndsWithSoftHyphen 'get ' : 
  Methods:
    get_WidthWithoutTrailingSpaces(): PrivateScope, Public, HideBySig, SpecialName
    get_Clusters(): PrivateScope, Public, HideBySig, SpecialName
    get_TrailingSpaces(): PrivateScope, Public, HideBySig, SpecialName
    get_EndsWithSoftHyphen(): PrivateScope, Public, HideBySig, SpecialName
    Split(Int32): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.RangeBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Empty 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    AppendGlyph(Int32): PrivateScope, Public, HideBySig
    AppendSpace(Int32): PrivateScope, Public, HideBySig
    GetRange(Span`1, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DXCharRange: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Start 'get ' : 
    Int32 End  'get ' : 
  Methods:
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.DXEngineType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXEngineType DirectWrite = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXEngineType CrossPlatform = 1 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.DXFontInternal: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DXFontFace, Single, DevExpress.Drawing.Internal.Fonts.DXFontDecorations, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.String FamilyName 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Weight 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Stretch 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Slant 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontSimulations Simulations 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontDecorations Decorations 'get ' : 
    Single Size 'get ' : 
    Single SizeInPoints 'get ' : 
    Byte[] Panose 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontMetrics Metrics 'get ' : 
  Methods:
    get_FamilyName(): PrivateScope, Public, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, HideBySig, SpecialName
    get_Stretch(): PrivateScope, Public, HideBySig, SpecialName
    get_Slant(): PrivateScope, Public, HideBySig, SpecialName
    get_Simulations(): PrivateScope, Public, HideBySig, SpecialName
    get_Decorations(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_SizeInPoints(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Panose(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Metrics(): PrivateScope, Assembly, HideBySig, SpecialName
    GetFontCharacterRanges(): PrivateScope, Public, HideBySig
    IsComplexScript(): PrivateScope, Public, HideBySig
    IsCjk(): PrivateScope, Public, HideBySig
    GetFontFileInfo(): PrivateScope, Public, HideBySig
    MeasureString(String): PrivateScope, Public, HideBySig
    MeasureCharacterWidth(Char): PrivateScope, Public, HideBySig
    GetShapedGlyphsInfo(String): PrivateScope, Public, HideBySig
    CreateShaper(IDXFontFallback): PrivateScope, Public, HideBySig
    GetWin32FamilyName(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DXFontInternal): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct DevExpress.Drawing.Internal.Fonts.DXFontDecorations: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXFontDecorations None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontDecorations Underline = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontDecorations Strikeout = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.DXFontDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, DevExpress.Drawing.Internal.Fonts.DXFontWeight, DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant, DevExpress.Drawing.Internal.Fonts.DXFontStretch): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.Internal.Fonts.DXFontDescriptor]
  Properties:
    System.String FamilyName 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Slant 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Stretch 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Weight 'get ' : 
  Methods:
    get_FamilyName(): PrivateScope, Public, HideBySig, SpecialName
    get_Slant(): PrivateScope, Public, HideBySig, SpecialName
    get_Stretch(): PrivateScope, Public, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, HideBySig, SpecialName
    Equals(DXFontDescriptor): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DXFontFace: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    System.String FamilyName 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Weight 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Stretch 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Slant 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontSimulations Simulations 'get ' : 
    Byte[] Panose 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontMetrics Metrics 'get ' : 
    Boolean IsComplexScript 'get ' : 
    Boolean IsCjk 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontDescriptor Descriptor 'get ' : 
  Methods:
    get_FamilyName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Weight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Stretch(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slant(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Simulations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Panose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Metrics(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsComplexScript(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsCjk(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Descriptor(): PrivateScope, Public, HideBySig, SpecialName
    GetShapedGlyphsInfo(String, Single): PrivateScope, Public, HideBySig
    GetWin32FamilyName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFontFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFontCharacterRanges(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MeasureString(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MeasureCharacterWidth(Char, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateShaper(IDXFontFallback(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasCharacters(StringView): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.Fonts.IDXFontFamily: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetFirstMatchingFontFace(DXFontWeight, DXFontStretch, DXFontStyleSlant): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.DXFontFileInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Index 'get ' : 
    Byte[] Data 'get ' : 
  Methods:
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DXFontMetrics: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Builder): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 UnitsPerEm 'get ' : 
    Int32 EmAscent 'get ' : 
    Int32 EmDescent 'get ' : 
    Int32 EmLineSpacing 'get ' : 
    Int32 UnderlinePosition 'get ' : 
    Int32 UnderlineSize 'get ' : 
    Int32 StrikeoutPosition 'get ' : 
    Int32 StrikeoutSize 'get ' : 
    System.Drawing.Size SubscriptSize 'get ' : 
    System.Drawing.Point SuperscriptOffset 'get ' : 
    System.Drawing.Point SubscriptOffset 'get ' : 
    System.Drawing.Size SuperscriptSize 'get ' : 
    Boolean HasTypoMetrics 'get ' : 
  Methods:
    get_UnitsPerEm(): PrivateScope, Public, HideBySig, SpecialName
    get_EmAscent(): PrivateScope, Public, HideBySig, SpecialName
    get_EmDescent(): PrivateScope, Public, HideBySig, SpecialName
    get_EmLineSpacing(): PrivateScope, Public, HideBySig, SpecialName
    get_UnderlinePosition(): PrivateScope, Public, HideBySig, SpecialName
    get_UnderlineSize(): PrivateScope, Public, HideBySig, SpecialName
    get_StrikeoutPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_StrikeoutSize(): PrivateScope, Public, HideBySig, SpecialName
    get_SubscriptSize(): PrivateScope, Public, HideBySig, SpecialName
    get_SuperscriptOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_SubscriptOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_SuperscriptSize(): PrivateScope, Public, HideBySig, SpecialName
    get_HasTypoMetrics(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.DXFontLanguageID: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXFontLanguageID English = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontLanguageID EnglishUnitedStates = 1033 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.DXFontEncodingID: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXFontEncodingID Symbol = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontEncodingID UGL = 1 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.DXFontNameID: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXFontNameID Copyright = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontNameID FontFamily = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontNameID FontSubfamily = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontNameID UniqueFontId = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontNameID FullFontName = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontNameID Version = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontNameID PostscriptName = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontNameID Trademark = 7 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.DXFontNamesHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Fields:
    System.String SymbolFontFamily = Symbol : Public, Static, Literal, HasDefault
  Methods:
    GetDescriptor(String, DXFontStyle(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetDescriptor(String, DXFontWeight, DXFontStyleSlant, DXFontStretch): PrivateScope, Public, Static, HideBySig
    GetGDICompatibleDescriptor(String, FontStyle): PrivateScope, Assembly, Static, HideBySig
    ContainsItalicStyle(String): PrivateScope, Public, Static, HideBySig
    ContainsBoldStyle(String): PrivateScope, Public, Static, HideBySig
    GetNormalizedFontStyle(String): PrivateScope, Public, Static, HideBySig
    GetNormalizedFontFamily(String): PrivateScope, Public, Static, HideBySig
    GetFontFamily(String): PrivateScope, Public, Static, HideBySig
    Normalize(String): PrivateScope, Public, Static, HideBySig
    ExtractAdditionalStyles(String): PrivateScope, Public, Static, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.IFontFace: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String FamilyName 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Stretch 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Slant 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Weight 'get ' : 
  Methods:
    get_FamilyName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Stretch(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slant(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Weight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DXFontSearchResult`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, DevExpress.Drawing.Internal.Fonts.IFontFace
    Void .ctor(T, DevExpress.Drawing.Internal.Fonts.DXFontSimulations): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T FontFace 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontSimulations FontSimulations 'get ' : 
  Methods:
    get_FontFace(): PrivateScope, Public, HideBySig, SpecialName
    get_FontSimulations(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DXWin32Font: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, DevExpress.Drawing.Internal.Fonts.DXFontStretch, DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant, DevExpress.Drawing.Internal.Fonts.DXFontWeight): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IFontFace
  Properties:
    System.String FamilyName 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Stretch 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Slant 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Weight 'get ' : 
  Methods:
    get_FamilyName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Stretch(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Slant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Weight(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DXWin32Family`1[TFace]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TFace, DevExpress.Drawing.Internal.Fonts.IFontFace
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IEnumerable`1[TFace] Faces 'get ' : 
  Methods:
    get_Faces(): PrivateScope, Public, HideBySig, SpecialName
    AddFont(TFace): PrivateScope, Public, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.IDXWin32FontCollection`1[TWin32FontFace]: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Type parameter: TWin32FontFace, DevExpress.Drawing.Internal.Fonts.IFontFace
  Methods:
    FindWin32Family(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindFamily(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.DXWin32FontSearchHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    MatchFaceByWin32Name(IDXWin32FontCollection`1, String, DXFontStyle): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DXFontSearchHelper`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, DevExpress.Drawing.Internal.Fonts.IFontFace
  Methods:
    GetFirstMatchingFont(IEnumerable`1, DXFontWeight, DXFontStretch, DXFontStyleSlant): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.DXFontSimulations: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXFontSimulations None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontSimulations Bold = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontSimulations Italic = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.DXFontStretch: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Undefined = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch UltraCondensed = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch ExtraCondensed = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Condensed = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch SemiCondensed = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Normal = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Medium = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch SemiExpanded = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Expanded = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch ExtraExpanded = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStretch UltraExpanded = 9 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Regular = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Oblique = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Italic = 2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.DXFontWeight: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Undefined = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Thin = 100 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight ExtraLight = 200 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight UltraLight = 200 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Light = 300 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight SemiLight = 350 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Normal = 400 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Regular = 400 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Medium = 500 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight DemiBold = 600 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight SemiBold = 600 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Bold = 700 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight ExtraBold = 800 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight UltraBold = 800 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Black = 900 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Heavy = 900 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight ExtraBlack = 950 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXFontWeight UltraBlack = 950 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.DXGlyph: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt16, Single, DevExpress.Drawing.Internal.Fonts.DXGlyphOffset): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 Index 'get ' : 
    Single Advance 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXGlyphOffset Offset 'get ' : 
  Methods:
    get_Index(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Advance(): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.DXGlyphOffset: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    DevExpress.Drawing.Internal.Fonts.DXGlyphOffset Empty : Public, Static, InitOnly
  Properties:
    Single HorizontalOffset 'get ' : 
    Single VerticalOffset 'get ' : 
  Methods:
    get_HorizontalOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalOffset(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.DXKerningMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXKerningMode None = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXKerningMode MultilineOnly = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXKerningMode Always = 2 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.DXShapedGlyphInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int16[], Single[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int16[] Clusters 'get ' : 
    Single[] Widths 'get ' : 
  Methods:
    get_Clusters(): PrivateScope, Public, HideBySig, SpecialName
    get_Widths(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DXTextRun: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 StartIndex 'get ' : 
    Int32 EndIndex 'get ' : 
    Byte BidiLevel 'get ' : 
  Methods:
    get_StartIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_EndIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_BidiLevel(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.DXFontInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Boolean, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.Internal.Fonts.DXFontInfo]
  Properties:
    System.String GdiFamilyName 'get ' : 
    Boolean Bold 'get ' : 
    Boolean Italic 'get ' : 
    Int32 TtcIndex 'get ' : 
  Methods:
    get_GdiFamilyName(): PrivateScope, Public, HideBySig, SpecialName
    get_Bold(): PrivateScope, Public, HideBySig, SpecialName
    get_Italic(): PrivateScope, Public, HideBySig, SpecialName
    get_TtcIndex(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(DXFontInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.Fonts.IDXPrivateFontCollection: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXFontCollection
    System.IDisposable
  Methods:
    AddFont(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.Fonts.IDXFontCollection: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.Generic.IEnumerable`1[DevExpress.Drawing.Internal.Fonts.IDXFontFamily] Families 'get ' : 
  Methods:
    get_Families(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    FindFamily(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MatchFaceByWin32Name(String, DXFontStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFontsInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.DXBidiHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Reorder(IList`1): PrivateScope, Public, Static, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.DXBreakCondition: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.DXBreakCondition Neutral = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXBreakCondition CanBreak = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXBreakCondition MayNotBreak = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.DXBreakCondition MustBreak = 3 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.DXCluster: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DXGlyph, DevExpress.Drawing.Internal.Fonts.StringView, DevExpress.Drawing.Internal.Fonts.DXLineBreakpoint, Byte, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DXGlyph[], DevExpress.Drawing.Internal.Fonts.StringView, DevExpress.Drawing.Internal.Fonts.DXLineBreakpoint, Byte, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.Fonts.DXGlyph[] Glyphs 'get ' : 
    DevExpress.Drawing.Internal.Fonts.StringView Text 'get ' : 
    Single Width 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXLineBreakpoint Breakpoint 'get ' : 
    Byte BidiLevel 'get ' : 
    Boolean IsTabCluster 'get ' : 
    Boolean IsNotDefGlyph 'get ' : 
    System.String FallbackFontFamily 'get set' : 
    DevExpress.Drawing.DXFontStyle FallbackFontStyle 'get set' : 
  Methods:
    get_Glyphs(): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Breakpoint(): PrivateScope, Public, HideBySig, SpecialName
    get_BidiLevel(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTabCluster(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNotDefGlyph(): PrivateScope, Public, HideBySig, SpecialName
    get_FallbackFontFamily(): PrivateScope, Public, HideBySig, SpecialName
    set_FallbackFontFamily(String): PrivateScope, Public, HideBySig, SpecialName
    get_FallbackFontStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_FallbackFontStyle(DXFontStyle): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.DXLineBreakpoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DXBreakCondition, Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DXBreakCondition, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    DevExpress.Drawing.Internal.Fonts.DXLineBreakpoint Empty : Public, Static, InitOnly
  Properties:
    DevExpress.Drawing.Internal.Fonts.DXBreakCondition BreakConditionAfter 'get ' : 
    Boolean IsWhitespace 'get ' : 
    Boolean IsSoftHyphen 'get ' : 
  Methods:
    get_BreakConditionAfter(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWhitespace(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSoftHyphen(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DXLineFormatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    FormatLines(String, Nullable`1, IDXLineFormatterFont, DXStringFormat, DXLineFormatterOptions): PrivateScope, Public, Static, HideBySig
    MeasureText(String, Nullable`1, IDXLineFormatterFont, DXStringFormat, DXKerningMode): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DXTextMeasurementResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.SizeF, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.SizeF Size 'get ' : 
    Int32 LineCount 'get ' : 
    Int32 CharacterCount 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_LineCount(): PrivateScope, Public, HideBySig, SpecialName
    get_CharacterCount(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DXTextBuffer`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, DevExpress.Drawing.Internal.Fonts.IDXTextBufferRun`1[T]
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.LinkedList`1[T] Runs 'get ' : 
  Methods:
    get_Runs(): PrivateScope, Public, HideBySig, SpecialName
    SetProperties(Int32, Int32, Action`1): PrivateScope, Public, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.IDXTextBufferRun`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T, DevExpress.Drawing.Internal.Fonts.IDXTextBufferRun`1[T]
  Properties:
    Int32 Offset 'get ' : 
    Int32 Length 'get ' : 
  Methods:
    get_Offset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Split(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.StringView: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    DevExpress.Drawing.Internal.Fonts.StringView Empty : Public, Static, InitOnly
  Properties:
    System.String Source 'get ' : 
    Int32 Offset 'get ' : 
    Int32 Length 'get ' : 
    Char Item [Int32] 'get ' : 
  Methods:
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetText(): PrivateScope, Public, HideBySig
    GetUtf32Char(Int32): PrivateScope, Public, HideBySig
    CreateSegment(Int32): PrivateScope, Public, HideBySig
    CreateSegment(Int32, Int32): PrivateScope, Public, HideBySig
    Marshal(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Interop.FontFileData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Interop.IFontFileDataContainer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.Interop.IFontFileData
    System.IDisposable
  Properties:
    Int32 Length 'get ' : 
    IntPtr NativeObject 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NativeObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.Fonts.Interop.IFontFileData: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Length 'get ' : 
    IntPtr NativeObject 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NativeObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface DevExpress.Drawing.Internal.Fonts.Interop.IFontFileDataContainer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Length 'get ' : 
    IntPtr Data 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Data(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Interop.SharedFontFileData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.Interop.IFontFileData
    System.IDisposable
  Properties:
    Int32 Length 'get ' : 
    IntPtr NativeObject 'get ' : 
  Methods:
    Create(String): PrivateScope, Public, Static, HideBySig
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NativeObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.Interop.MemoryMappedFileWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.Interop.IFontFileDataContainer
    System.IDisposable
  Properties:
    Int32 Length 'get ' : 
    IntPtr Data 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Data(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.Interop.MemoryWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.Interop.IFontFileDataContainer
Class DevExpress.Drawing.Internal.Fonts.Interop.FcFontSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Interop.FcPattern, DevExpress.Drawing.Internal.Fonts.Interop.FcObjectSet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetFonts(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Interop.FcObjectSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(String): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Interop.FcPattern: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String FC_FAMILY = family : Public, Static, Literal, HasDefault
    System.String FC_SLANT = slant : Public, Static, Literal, HasDefault
    System.String FC_WEIGHT = weight : Public, Static, Literal, HasDefault
    System.String FC_WIDTH = width : Public, Static, Literal, HasDefault
    System.String FC_FILE = file : Public, Static, Literal, HasDefault
    System.String FC_SCALABLE = scalable : Public, Static, Literal, HasDefault
    System.String FC_INDEX = index : Public, Static, Literal, HasDefault
    System.String FC_FONTFORMAT = fontformat : Public, Static, Literal, HasDefault
    System.String FC_OUTLINE = outline : Public, Static, Literal, HasDefault
  Properties:
    System.String Family 'get ' : 
    System.String FontFilePath 'get ' : 
    Int32 Index 'get ' : 
    System.String FontFormat 'get ' : 
    Boolean Outline 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Stretch 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Style 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Weight 'get ' : 
  Methods:
    get_Family(): PrivateScope, Public, HideBySig, SpecialName
    get_FontFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_FontFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_Outline(): PrivateScope, Public, HideBySig, SpecialName
    get_Stretch(): PrivateScope, Public, HideBySig, SpecialName
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, HideBySig, SpecialName
    AddBool(String, Boolean): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.Interop.FcSlant: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.FcSlant ROMAN = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcSlant ITALIC = 100 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcSlant OBLIQUE = 110 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Interop.FcWeight: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight THIN = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight EXTRALIGHT = 40 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight LIGHT = 50 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight DEMILIGHT = 55 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight BOOK = 75 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight REGULAR = 80 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight MEDIUM = 100 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight DEMIBOLD = 180 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight BOLD = 200 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight EXTRABOLD = 205 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight BLACK = 210 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWeight EXTRABLACK = 215 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Interop.FcWidth: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.FcWidth ULTRACONDENSED = 50 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWidth EXTRACONDENSED = 63 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWidth CONDENSED = 75 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWidth SEMICONDENSED = 87 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWidth NORMAL = 100 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWidth SEMIEXPANDED = 113 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWidth EXPANDED = 125 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWidth EXTRAEXPANDED = 150 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FcWidth ULTRAEXPANDED = 200 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Interop.FontConfigInterop: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    EnsureLoaded(): PrivateScope, Public, Static, HideBySig
    FcInit(): PrivateScope, Public, Static, HideBySig
    FcPatternCreate(): PrivateScope, Public, Static, HideBySig
    FcObjectSetCreate(): PrivateScope, Public, Static, HideBySig
    FcFontList(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig
    FcObjectSetAdd(IntPtr, String): PrivateScope, Public, Static, HideBySig
    FcPatternAddBool(IntPtr, String, Boolean): PrivateScope, Public, Static, HideBySig
    FcPatternGetInteger(IntPtr, String, Boolean): PrivateScope, Public, Static, HideBySig
    FcPatternGetBool(IntPtr, String): PrivateScope, Public, Static, HideBySig
    FcPatternGetString(IntPtr, String): PrivateScope, Public, Static, HideBySig
    FcObjectSetDestroy(IntPtr): PrivateScope, Public, Static, HideBySig
    FcFontSetDestroy(IntPtr): PrivateScope, Public, Static, HideBySig
    FcPatternDestroy(IntPtr): PrivateScope, Public, Static, HideBySig
    FcFini(): PrivateScope, Public, Static, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.Interop.IFontConfigInterop: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    FcInit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcPatternCreate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcObjectSetCreate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcFontList(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcObjectSetDestroy(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcPatternDestroy(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcObjectSetAdd(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcPatternAddBool(IntPtr, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcPatternGetInteger(IntPtr, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcPatternGetBool(IntPtr, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcPatternGetString(IntPtr, IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcFini(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FcFontSetDestroy(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.Interop.Utf8StringMarshaler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.DirectX.Common.Marshaler
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_Encoding: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Encoding UNICODE = 1970170211 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_Sfnt_Tag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Sfnt_Tag HEAD = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Sfnt_Tag MAXP = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Sfnt_Tag OS2 = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Sfnt_Tag HHEA = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Sfnt_Tag VHEA = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Sfnt_Tag POST = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Sfnt_Tag PCLT = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Sfnt_Tag MAX = 7 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Interop.Platform: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int16 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.Platform APPLE_UNICODE = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.Platform MACINTOSH = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.Platform ISO = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.Platform MICROSOFT = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.Platform CUSTOM = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.Platform ADOBE = 7 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags DEFAULT = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags NO_SCALE = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags NO_HINTING = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags RENDER = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags NO_BITMAP = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags VERTICAL_LAYOUT = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags FORCE_AUTOHINT = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags CROP_BITMAP = 64 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags PEDANTIC = 128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags IGNORE_GLOBAL_ADVANCE_WIDTH = 512 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags NO_RECURSE = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags IGNORE_TRANSFORM = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags MONOCHROME = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags LINEAR_DESIGN = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags NO_AUTOHINT = 32768 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags COLOR = 1048576 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags COMPUTE_METRICS = 2097152 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.FT_LoadFlags BITMAP_METRICS_ONLY = 4194304 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Interop.FreeTypeInterop: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    EnsureLoaded(): PrivateScope, Public, Static, HideBySig
    FT_New_Memory_Face(FT_Library, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig
    FT_Init_FreeType(): PrivateScope, Public, Static, HideBySig
    FT_Done_FreeType(FT_Library): PrivateScope, Public, Static, HideBySig
    FT_Done_Face(IntPtr): PrivateScope, Public, Static, HideBySig
    FT_Reference_Face(IntPtr): PrivateScope, Public, Static, HideBySig
    FT_Set_Char_Size(IntPtr, FT_F26Dot6, FT_F26Dot6, Int32, Int32): PrivateScope, Public, Static, HideBySig
    FT_Get_Sfnt_Name_Count(IntPtr): PrivateScope, Public, Static, HideBySig
    FT_Get_Sfnt_Name(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig
    FT_Get_First_Char(IntPtr, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    FT_Get_Next_Char(IntPtr, UInt32, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    FT_Get_Sfnt_Table(IntPtr, FT_Sfnt_Tag): PrivateScope, Assembly, Static, HideBySig
    FT_Get_Char_Index(IntPtr, UInt32): PrivateScope, Assembly, Static, HideBySig
    FT_Load_Sfnt_Table(IntPtr, UInt32, Int32, IntPtr, UInt32&): PrivateScope, Assembly, Static, HideBySig
    FT_Load_Glyph(IntPtr, UInt32, FT_LoadFlags): PrivateScope, Assembly, Static, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.Interop.IFreeTypeInterop: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    FT_New_Memory_Face(IntPtr, IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Init_FreeType(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Done_FreeType(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Done_Face(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Set_Char_Size(IntPtr, FT_F26Dot6, FT_F26Dot6, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Get_Sfnt_Name_Count(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Get_Sfnt_Name(IntPtr, Int32, FT_SfntName&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Get_First_Char(IntPtr, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Get_Next_Char(IntPtr, UInt32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Get_Sfnt_Table(IntPtr, FT_Sfnt_Tag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Get_Char_Index(IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Load_Glyph(IntPtr, UInt32, FT_LoadFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Reference_Face(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FT_Load_Sfnt_Table(IntPtr, UInt32, Int32, IntPtr, UInt32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.Interop.FreeTypeLibrary: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Library Library 'get ' : 
  Methods:
    get_Library(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_BBox: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_CharMapRec: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Encoding encoding : Public
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_F26Dot6: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Methods:
    op_Implicit(Single): PrivateScope, Public, Static, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_FaceRec: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Long num_faces : Public
    IntPtr family_name : Public
    IntPtr style_name : Public
    UInt16 units_per_EM : Public
    Int16 ascender : Public
    Int16 descender : Public
    Int16 height : Public
    IntPtr glyph : Public
    IntPtr charmap : Public
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_Fixed: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Methods:
    GetValue(): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_Generic: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_GlyphSlotRec: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Glyph_Metrics metrics : Public
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Fixed linearHoriAdvance : Public
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_Pos: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Methods:
    AsInt(): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_Glyph_Metrics: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    DevExpress.Drawing.Internal.Fonts.Interop.FT_Pos horiAdvance : Public
Class DevExpress.Drawing.Internal.Fonts.Interop.FT_Library: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_Long: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Methods:
    ToInt32(): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_SfntName: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    DevExpress.Drawing.Internal.Fonts.Interop.Platform platform_id : Public
    UInt16 encoding_id : Public
    UInt16 language_id : Public
    UInt16 name_id : Public
    IntPtr name : Public
    Int32 nameLength : Public
Struct DevExpress.Drawing.Internal.Fonts.Interop.FT_ULong: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Methods:
    GetValue(): PrivateScope, Assembly, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.Interop.TT_HoriHeader: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int16 Ascender : Public
    Int16 Descender : Public
    Int16 Line_Gap : Public
Struct DevExpress.Drawing.Internal.Fonts.Interop.TT_OS2: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 usWeightClass : Public
    UInt16 usWidthClass : Public
    Int16 ySubscriptXSize : Public
    Int16 ySubscriptYSize : Public
    Int16 ySubscriptXOffset : Public
    Int16 ySubscriptYOffset : Public
    Int16 ySuperscriptXSize : Public
    Int16 ySuperscriptYSize : Public
    Int16 ySuperscriptXOffset : Public
    Int16 ySuperscriptYOffset : Public
    Int16 yStrikeoutSize : Public
    Int16 yStrikeoutPosition : Public
    Byte[] panose : Public, HasFieldMarshal
    DevExpress.Drawing.Internal.Fonts.Interop.FT_ULong ulUnicodeRange1 : Public
    DevExpress.Drawing.Internal.Fonts.Interop.FT_ULong ulUnicodeRange2 : Public
    DevExpress.Drawing.Internal.Fonts.Interop.FT_ULong ulUnicodeRange3 : Public
    DevExpress.Drawing.Internal.Fonts.Interop.FT_ULong ulUnicodeRange4 : Public
    UInt16 fsSelection : Public
    Int16 sTypoAscender : Public
    Int16 sTypoDescender : Public
    Int16 sTypoLineGap : Public
    UInt16 usWinAscent : Public
    UInt16 usWinDescent : Public
Struct DevExpress.Drawing.Internal.Fonts.Interop.TT_Postscript: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int16 underlinePosition : Public
    Int16 underlineThickness : Public
  Properties:
    Single ItalicAngle 'get ' : 
  Methods:
    get_ItalicAngle(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Interop.HarfBuzzInterop: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    EnsureLoaded(): PrivateScope, Public, Static, HideBySig
    hb_buffer_create(): PrivateScope, Public, Static, HideBySig
    hb_buffer_add_utf16(IntPtr, String, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    hb_buffer_add_utf16(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    hb_buffer_destroy(IntPtr): PrivateScope, Public, Static, HideBySig
    hb_buffer_set_direction(IntPtr, hb_direction_t): PrivateScope, Public, Static, HideBySig
    hb_buffer_set_script(IntPtr, hb_script_t): PrivateScope, Public, Static, HideBySig
    hb_buffer_set_language(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig
    hb_ft_font_create_referenced(IntPtr): PrivateScope, Public, Static, HideBySig
    hb_shape(hb_font_t, hb_buffer, hb_feature_t[]): PrivateScope, Public, Static, HideBySig
    hb_buffer_get_glyph_infos(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    hb_buffer_get_glyph_positions(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    hb_script_from_string(String): PrivateScope, Public, Static, HideBySig
    hb_script_from_string(UScriptCode): PrivateScope, Public, Static, HideBySig
    hb_font_destroy(IntPtr): PrivateScope, Public, Static, HideBySig
    hb_font_set_scale(IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig
    hb_buffer_reverse(IntPtr): PrivateScope, Public, Static, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.Interop.IHarfBuzzInterop: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    hb_buffer_create(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_buffer_add_utf16(IntPtr, String, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_buffer_add_utf16(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_buffer_destroy(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_buffer_set_direction(IntPtr, hb_direction_t): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_buffer_set_script(IntPtr, hb_script_t): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_buffer_set_language(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_ft_font_create_referenced(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_shape(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_buffer_get_glyph_infos(IntPtr, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_buffer_get_glyph_positions(IntPtr, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_script_from_string(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_font_set_scale(IntPtr, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_font_destroy(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hb_buffer_reverse(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.Interop.hb_buffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddUTF16(String): PrivateScope, Public, HideBySig
    AddUTF16(StringView): PrivateScope, Public, HideBySig
    SetDirection(hb_direction_t): PrivateScope, Public, HideBySig
    SetScript(hb_script_t): PrivateScope, Public, HideBySig
    SetLanguage(IntPtr): PrivateScope, Public, HideBySig
    GetGlyphInfos(): PrivateScope, Public, HideBySig
    GetGlyphPositions(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.Interop.hb_direction_t: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.hb_direction_t HB_DIRECTION_INVALID = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.hb_direction_t HB_DIRECTION_LTR = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.hb_direction_t HB_DIRECTION_RTL = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.hb_direction_t HB_DIRECTION_TTB = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.hb_direction_t HB_DIRECTION_BTT = 7 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Interop.hb_feature_t: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    DevExpress.Drawing.Internal.Fonts.Interop.hb_feature_t KerningOff : Public, Static
    DevExpress.Drawing.Internal.Fonts.Interop.hb_feature_t KerningOn : Public, Static
Class DevExpress.Drawing.Internal.Fonts.Interop.hb_font_t: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct DevExpress.Drawing.Internal.Fonts.Interop.hb_glyph_info_t: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 Codepoint 'get ' : 
    Int32 Cluster 'get ' : 
  Methods:
    get_Codepoint(): PrivateScope, Public, HideBySig, SpecialName
    get_Cluster(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.Interop.hb_glyph_position_t: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 X_advance 'get ' : 
    Int32 X_offset 'get ' : 
    Int32 Y_offset 'get ' : 
  Methods:
    get_X_advance(): PrivateScope, Public, HideBySig, SpecialName
    get_X_offset(): PrivateScope, Public, HideBySig, SpecialName
    get_Y_offset(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.Interop.hb_script_t: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.hb_script_t HB_SCRIPT_ARABIC = 1098015074 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.hb_script_t HB_SCRIPT_LATIN = 1281455214 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Interop.ICUInterop: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    EnsureLoaded(): PrivateScope, Public, Static, HideBySig
    IsAvaliable(): PrivateScope, Public, Static, HideBySig
    ubidi_openSized(Int32, Int32): PrivateScope, Public, Static, HideBySig
    ubidi_setPara(IntPtr, String, UBiDiLevel, UBiDiLevel[]): PrivateScope, Public, Static, HideBySig
    ubidi_countRuns(IntPtr): PrivateScope, Public, Static, HideBySig
    uscript_openRun(String): PrivateScope, Public, Static, HideBySig
    uscript_nextRun(IntPtr, Int32&(Out), Int32&(Out), UScriptCode&(Out)): PrivateScope, Public, Static, HideBySig
    ubidi_close(IntPtr): PrivateScope, Public, Static, HideBySig
    ubidi_getParaLevel(IntPtr): PrivateScope, Public, Static, HideBySig
    ubidi_getDirection(IntPtr): PrivateScope, Public, Static, HideBySig
    ubidi_getVisualRun(IntPtr, Int32, Int32&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    uscript_closeRun(IntPtr): PrivateScope, Public, Static, HideBySig
    ubidi_getLogicalRun(IntPtr, Int32, Int32&(Out), UBiDiLevel&(Out)): PrivateScope, Public, Static, HideBySig
    uscript_getShortName(UScriptCode): PrivateScope, Public, Static, HideBySig
    uscript_getShortNamePointer(UScriptCode): PrivateScope, Public, Static, HideBySig
    uscript_getScript(Int32): PrivateScope, Public, Static, HideBySig
    ubrk_open(UBreakIteratorType, String, String): PrivateScope, Public, Static, HideBySig
    ubrk_close(IntPtr): PrivateScope, Public, Static, HideBySig
    ubrk_next(IntPtr): PrivateScope, Public, Static, HideBySig
    ubrk_getRuleStatus(IntPtr): PrivateScope, Public, Static, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.Interop.IICUInterop: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ubidi_countRuns(IntPtr, UErrorCode&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    uscript_nextRun(IntPtr, Int32&(Out), Int32&(Out), UScriptCode&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    uscript_openRun(String, Int32, UErrorCode&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubidi_openSized(Int32, Int32, UErrorCode&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubidi_setPara(IntPtr, String(HasFieldMarshal), Int32, UBiDiLevel, UBiDiLevel[], UErrorCode&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubidi_close(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubidi_getParaLevel(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubidi_getDirection(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubidi_getVisualRun(IntPtr, Int32, Int32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    uscript_closeRun(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    uscript_getShortName(UScriptCode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubidi_getLogicalRun(IntPtr, Int32, Int32&(Out), UBiDiLevel&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    uscript_getScript(Int32, UErrorCode&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubrk_open(UBreakIteratorType, IntPtr, String, Int32, UErrorCode&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubrk_close(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubrk_next(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ubrk_getRuleStatus(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.Interop.UBiDi: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.Fonts.Interop.UBiDiDirection Direction 'get ' : 
  Methods:
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    SetPara(String, UBiDiLevel): PrivateScope, Public, HideBySig
    GetParaLevel(): PrivateScope, Public, HideBySig
    CountRuns(): PrivateScope, Public, HideBySig
    GetVisualRun(Int32, Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    GetLogicalRun(Int32, Int32&(Out), UBiDiLevel&(Out)): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.Interop.UBiDiDirection: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.UBiDiDirection UBIDI_LTR = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UBiDiDirection UBIDI_RTL = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UBiDiDirection UBIDI_MIXED = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UBiDiDirection UBIDI_NEUTRAL = 3 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Interop.UBiDiLevel: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    DevExpress.Drawing.Internal.Fonts.Interop.UBiDiLevel LTR : Public, Static
    DevExpress.Drawing.Internal.Fonts.Interop.UBiDiLevel RTL : Public, Static
  Properties:
    Byte BidiLevel 'get ' : 
  Methods:
    get_BidiLevel(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.Interop.UBreakIteratorType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.UBreakIteratorType UBRK_CHARACTER = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UBreakIteratorType UBRK_WORD = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UBreakIteratorType UBRK_LINE = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UBreakIteratorType UBRK_SENTENCE = 3 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Interop.UBrk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 UBRK_DONE = -1 : Public, Static, Literal, HasDefault
  Methods:
    Next(): PrivateScope, Public, HideBySig
    GetRuleStatus(): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_USING_FALLBACK_WARNING = -128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ERROR_WARNING_START = -128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_USING_DEFAULT_WARNING = -127 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_SAFECLONE_ALLOCATED_WARNING = -126 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_STATE_OLD_WARNING = -125 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_STRING_NOT_TERMINATED_WARNING = -124 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_SORT_KEY_TOO_SHORT_WARNING = -123 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_AMBIGUOUS_ALIAS_WARNING = -122 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_DIFFERENT_UCA_VERSION = -121 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_PLUGIN_CHANGED_LEVEL_WARNING = -120 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ZERO_ERROR = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ILLEGAL_ARGUMENT_ERROR = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MISSING_RESOURCE_ERROR = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVALID_FORMAT_ERROR = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_FILE_ACCESS_ERROR = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INTERNAL_PROGRAM_ERROR = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MESSAGE_PARSE_ERROR = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MEMORY_ALLOCATION_ERROR = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INDEX_OUTOFBOUNDS_ERROR = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_PARSE_ERROR = 9 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVALID_CHAR_FOUND = 10 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_TRUNCATED_CHAR_FOUND = 11 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ILLEGAL_CHAR_FOUND = 12 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVALID_TABLE_FORMAT = 13 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVALID_TABLE_FILE = 14 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BUFFER_OVERFLOW_ERROR = 15 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNSUPPORTED_ERROR = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_RESOURCE_TYPE_MISMATCH = 17 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ILLEGAL_ESCAPE_SEQUENCE = 18 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNSUPPORTED_ESCAPE_SEQUENCE = 19 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_NO_SPACE_AVAILABLE = 20 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_CE_NOT_FOUND_ERROR = 21 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_PRIMARY_TOO_LONG_ERROR = 22 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_STATE_TOO_OLD_ERROR = 23 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_TOO_MANY_ALIASES_ERROR = 24 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ENUM_OUT_OF_SYNC_ERROR = 25 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVARIANT_CONVERSION_ERROR = 26 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVALID_STATE_ERROR = 27 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_COLLATOR_VERSION_MISMATCH = 28 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_USELESS_COLLATOR_ERROR = 29 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_NO_WRITE_PERMISSION = 30 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BAD_VARIABLE_DEFINITION = 65536 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_PARSE_ERROR_START = 65536 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MALFORMED_RULE = 65537 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MALFORMED_SET = 65538 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MALFORMED_SYMBOL_REFERENCE = 65539 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MALFORMED_UNICODE_ESCAPE = 65540 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MALFORMED_VARIABLE_DEFINITION = 65541 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MALFORMED_VARIABLE_REFERENCE = 65542 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MISMATCHED_SEGMENT_DELIMITERS = 65543 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MISPLACED_ANCHOR_START = 65544 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MISPLACED_CURSOR_OFFSET = 65545 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MISPLACED_QUANTIFIER = 65546 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MISSING_OPERATOR = 65547 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MISSING_SEGMENT_CLOSE = 65548 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_ANTE_CONTEXTS = 65549 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_CURSORS = 65550 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_POST_CONTEXTS = 65551 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_TRAILING_BACKSLASH = 65552 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNDEFINED_SEGMENT_REFERENCE = 65553 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNDEFINED_VARIABLE = 65554 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNQUOTED_SPECIAL = 65555 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNTERMINATED_QUOTE = 65556 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_RULE_MASK_ERROR = 65557 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MISPLACED_COMPOUND_FILTER = 65558 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_COMPOUND_FILTERS = 65559 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVALID_RBT_SYNTAX = 65560 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVALID_PROPERTY_PATTERN = 65561 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MALFORMED_PRAGMA = 65562 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNCLOSED_SEGMENT = 65563 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ILLEGAL_CHAR_IN_SEGMENT = 65564 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_VARIABLE_RANGE_EXHAUSTED = 65565 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_VARIABLE_RANGE_OVERLAP = 65566 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ILLEGAL_CHARACTER = 65567 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INTERNAL_TRANSLITERATOR_ERROR = 65568 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVALID_ID = 65569 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_INVALID_FUNCTION = 65570 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNEXPECTED_TOKEN = 65792 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_FMT_PARSE_ERROR_START = 65792 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_DECIMAL_SEPARATORS = 65793 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_DECIMAL_SEPERATORS = 65793 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_EXPONENTIAL_SYMBOLS = 65794 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MALFORMED_EXPONENTIAL_PATTERN = 65795 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_PERCENT_SYMBOLS = 65796 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_PERMILL_SYMBOLS = 65797 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_MULTIPLE_PAD_SPECIFIERS = 65798 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_PATTERN_SYNTAX_ERROR = 65799 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ILLEGAL_PAD_POSITION = 65800 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNMATCHED_BRACES = 65801 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNSUPPORTED_PROPERTY = 65802 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNSUPPORTED_ATTRIBUTE = 65803 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_ARGUMENT_TYPE_MISMATCH = 65804 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_DUPLICATE_KEYWORD = 65805 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_UNDEFINED_KEYWORD = 65806 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_DEFAULT_KEYWORD_MISSING = 65807 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_DECIMAL_NUMBER_SYNTAX_ERROR = 65808 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_FORMAT_INEXACT_ERROR = 65809 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_INTERNAL_ERROR = 66048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_ERROR_START = 66048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_HEX_DIGITS_EXPECTED = 66049 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_SEMICOLON_EXPECTED = 66050 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_RULE_SYNTAX = 66051 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_UNCLOSED_SET = 66052 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_ASSIGN_ERROR = 66053 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_VARIABLE_REDFINITION = 66054 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_MISMATCHED_PAREN = 66055 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_NEW_LINE_IN_QUOTED_STRING = 66056 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_UNDEFINED_VARIABLE = 66057 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_INIT_ERROR = 66058 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_RULE_EMPTY_SET = 66059 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_UNRECOGNIZED_OPTION = 66060 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_BRK_MALFORMED_RULE_TAG = 66061 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_INTERNAL_ERROR = 66304 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_ERROR_START = 66304 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_RULE_SYNTAX = 66305 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_INVALID_STATE = 66306 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_BAD_ESCAPE_SEQUENCE = 66307 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_PROPERTY_SYNTAX = 66308 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_UNIMPLEMENTED = 66309 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_MISMATCHED_PAREN = 66310 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_NUMBER_TOO_BIG = 66311 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_BAD_INTERVAL = 66312 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_MAX_LT_MIN = 66313 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_INVALID_BACK_REF = 66314 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_INVALID_FLAG = 66315 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_LOOK_BEHIND_LIMIT = 66316 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_SET_CONTAINS_STRING = 66317 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_MISSING_CLOSE_BRACKET = 66319 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_INVALID_RANGE = 66320 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_STACK_OVERFLOW = 66321 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_TIME_OUT = 66322 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_STOPPED_BY_CALLER = 66323 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_PATTERN_TOO_BIG = 66324 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_REGEX_INVALID_CAPTURE_GROUP_NAME = 66325 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_PROHIBITED_ERROR = 66560 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_ERROR_START = 66560 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_UNASSIGNED_ERROR = 66561 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_CHECK_BIDI_ERROR = 66562 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_STD3_ASCII_RULES_ERROR = 66563 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_ACE_PREFIX_ERROR = 66564 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_VERIFICATION_ERROR = 66565 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_LABEL_TOO_LONG_ERROR = 66566 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_ZERO_LENGTH_LABEL_ERROR = 66567 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR = 66568 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_STRINGPREP_PROHIBITED_ERROR = 66560 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_STRINGPREP_UNASSIGNED_ERROR = 66561 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_STRINGPREP_CHECK_BIDI_ERROR = 66562 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_PLUGIN_ERROR_START = 66816 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_PLUGIN_TOO_HIGH = 66816 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UErrorCode U_PLUGIN_DIDNT_SET_LEVEL = 66817 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Interop.ULineBreakTag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.ULineBreakTag UBRK_LINE_SOFT = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.ULineBreakTag UBRK_LINE_SOFT_LIMIT = 100 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.ULineBreakTag UBRK_LINE_HARD = 100 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.ULineBreakTag UBRK_LINE_HARD_LIMIT = 200 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_INVALID_CODE = -1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_COMMON = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_INHERITED = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ARABIC = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ARMENIAN = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BENGALI = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BOPOMOFO = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CHEROKEE = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_COPTIC = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CYRILLIC = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_DESERET = 9 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_DEVANAGARI = 10 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ETHIOPIC = 11 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_GEORGIAN = 12 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_GOTHIC = 13 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_GREEK = 14 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_GUJARATI = 15 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_GURMUKHI = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HAN = 17 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HANGUL = 18 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HEBREW = 19 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HIRAGANA = 20 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KANNADA = 21 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KATAKANA = 22 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KHMER = 23 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LAO = 24 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LATIN = 25 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MALAYALAM = 26 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MONGOLIAN = 27 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MYANMAR = 28 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OGHAM = 29 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OLD_ITALIC = 30 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ORIYA = 31 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_RUNIC = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SINHALA = 33 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SYRIAC = 34 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TAMIL = 35 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TELUGU = 36 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_THAANA = 37 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_THAI = 38 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TIBETAN = 39 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CANADIAN_ABORIGINAL = 40 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_UCAS = 40 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_YI = 41 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TAGALOG = 42 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HANUNOO = 43 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BUHID = 44 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TAGBANWA = 45 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BRAILLE = 46 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CYPRIOT = 47 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LIMBU = 48 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LINEAR_B = 49 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OSMANYA = 50 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SHAVIAN = 51 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TAI_LE = 52 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_UGARITIC = 53 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KATAKANA_OR_HIRAGANA = 54 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BUGINESE = 55 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_GLAGOLITIC = 56 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KHAROSHTHI = 57 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SYLOTI_NAGRI = 58 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_NEW_TAI_LUE = 59 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TIFINAGH = 60 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OLD_PERSIAN = 61 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BALINESE = 62 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BATAK = 63 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BLISSYMBOLS = 64 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BRAHMI = 65 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CHAM = 66 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CIRTH = 67 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OLD_CHURCH_SLAVONIC_CYRILLIC = 68 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_DEMOTIC_EGYPTIAN = 69 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HIERATIC_EGYPTIAN = 70 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_EGYPTIAN_HIEROGLYPHS = 71 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KHUTSURI = 72 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SIMPLIFIED_HAN = 73 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TRADITIONAL_HAN = 74 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_PAHAWH_HMONG = 75 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OLD_HUNGARIAN = 76 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HARAPPAN_INDUS = 77 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_JAVANESE = 78 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KAYAH_LI = 79 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LATIN_FRAKTUR = 80 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LATIN_GAELIC = 81 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LEPCHA = 82 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LINEAR_A = 83 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MANDAIC = 84 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MANDAEAN = 84 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MAYAN_HIEROGLYPHS = 85 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MEROITIC_HIEROGLYPHS = 86 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MEROITIC = 86 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_NKO = 87 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ORKHON = 88 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OLD_PERMIC = 89 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_PHAGS_PA = 90 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_PHOENICIAN = 91 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MIAO = 92 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_PHONETIC_POLLARD = 92 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_RONGORONGO = 93 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SARATI = 94 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ESTRANGELO_SYRIAC = 95 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_WESTERN_SYRIAC = 96 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_EASTERN_SYRIAC = 97 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TENGWAR = 98 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_VAI = 99 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_VISIBLE_SPEECH = 100 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CUNEIFORM = 101 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_UNWRITTEN_LANGUAGES = 102 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_UNKNOWN = 103 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CARIAN = 104 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_JAPANESE = 105 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LANNA = 106 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LYCIAN = 107 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LYDIAN = 108 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OL_CHIKI = 109 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_REJANG = 110 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SAURASHTRA = 111 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SIGN_WRITING = 112 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SUNDANESE = 113 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MOON = 114 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MEITEI_MAYEK = 115 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_IMPERIAL_ARAMAIC = 116 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_AVESTAN = 117 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CHAKMA = 118 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KOREAN = 119 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KAITHI = 120 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MANICHAEAN = 121 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_INSCRIPTIONAL_PAHLAVI = 122 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_PSALTER_PAHLAVI = 123 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BOOK_PAHLAVI = 124 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_INSCRIPTIONAL_PARTHIAN = 125 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SAMARITAN = 126 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TAI_VIET = 127 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MATHEMATICAL_NOTATION = 128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SYMBOLS = 129 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BAMUM = 130 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LISU = 131 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_NAKHI_GEBA = 132 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OLD_SOUTH_ARABIAN = 133 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BASSA_VAH = 134 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_DUPLOYAN = 135 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ELBASAN = 136 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_GRANTHA = 137 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KPELLE = 138 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_LOMA = 139 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MENDE = 140 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MEROITIC_CURSIVE = 141 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OLD_NORTH_ARABIAN = 142 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_NABATAEAN = 143 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_PALMYRENE = 144 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KHUDAWADI = 145 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SINDHI = 145 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_WARANG_CITI = 146 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_AFAKA = 147 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_JURCHEN = 148 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MRO = 149 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_NUSHU = 150 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SHARADA = 151 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SORA_SOMPENG = 152 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TAKRI = 153 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TANGUT = 154 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_WOLEAI = 155 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ANATOLIAN_HIEROGLYPHS = 156 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_KHOJKI = 157 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_TIRHUTA = 158 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_CAUCASIAN_ALBANIAN = 159 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MAHAJANI = 160 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_AHOM = 161 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HATRAN = 162 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MODI = 163 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MULTANI = 164 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_PAU_CIN_HAU = 165 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SIDDHAM = 166 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ADLAM = 167 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_BHAIKSUKI = 168 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MARCHEN = 169 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_NEWA = 170 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OSAGE = 171 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HAN_WITH_BOPOMOFO = 172 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_JAMO = 173 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SYMBOLS_EMOJI = 174 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MASARAM_GONDI = 175 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SOYOMBO = 176 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_ZANABAZAR_SQUARE = 177 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_DOGRA = 178 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_GUNJALA_GONDI = 179 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MAKASAR = 180 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_MEDEFAIDRIN = 181 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_HANIFI_ROHINGYA = 182 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_SOGDIAN = 183 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Interop.UScriptCode USCRIPT_OLD_SOGDIAN = 184 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Interop.UScriptRun: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Interop.ExternalObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    NextRun(Int32&(Out), Int32&(Out), UScriptCode&(Out)): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFontHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetFontNames(Byte[]): PrivateScope, Public, Static, HideBySig
    GetName(SfntFont, SfntNameID): PrivateScope, Public, Static, HideBySig
    GetName(SfntNameTable, SfntNameID): PrivateScope, Public, Static, HideBySig
    GetPostScriptName(SfntNameTable): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableEntryDescriptor: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID PlatformID 'get ' : 
    UInt16 EncodingID 'get ' : 
    UInt32 Offset 'get ' : 
  Methods:
    get_PlatformID(): PrivateScope, Public, HideBySig, SpecialName
    get_EncodingID(): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int16 Version 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableEntryDescriptor] Entries 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Entries(): PrivateScope, Public, HideBySig, SpecialName
    GetEntry(Byte[], SfntCmapTableEntryDescriptor): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableEntry: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID PlatformID 'get ' : 
    UInt16 EncodingID 'get ' : 
    UInt16 Format 'get ' : 
  Methods:
    get_PlatformID(): PrivateScope, Public, HideBySig, SpecialName
    get_EncodingID(): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    Parse(SfntStreamReader, SfntPlatformID, UInt16): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableFormat0Entry: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableShortHeaderEntry
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] GlyphIdArray 'get ' : 
  Methods:
    get_GlyphIdArray(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableFormat10Entry: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableLongHeaderEntry
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 StartCharCode 'get ' : 
    UInt32 NumChars 'get ' : 
  Methods:
    get_StartCharCode(): PrivateScope, Public, HideBySig, SpecialName
    get_NumChars(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableFormat12Entry: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableLongHeaderEntry
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCMapSequentialGroup[] Groups 'get ' : 
  Methods:
    get_Groups(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableFormat2Subheader: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt16, UInt16, Int16, UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 FirstCode 'get ' : 
    UInt16 EntryCount 'get ' : 
    Int16 IdDelta 'get ' : 
    UInt16 IdRangeOffset 'get ' : 
  Methods:
    get_FirstCode(): PrivateScope, Public, HideBySig, SpecialName
    get_EntryCount(): PrivateScope, Public, HideBySig, SpecialName
    get_IdDelta(): PrivateScope, Public, HideBySig, SpecialName
    get_IdRangeOffset(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableFormat2Entry: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableShortHeaderEntry
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16[] SubHeaderKeys 'get ' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableFormat2Subheader[] SubHeaders 'get ' : 
  Methods:
    get_SubHeaderKeys(): PrivateScope, Public, HideBySig, SpecialName
    get_SubHeaders(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableFormat4Entry: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableShortHeaderEntry
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 SegCountX2 'get ' : 
    UInt16 SearchRange 'get ' : 
    UInt16 EntrySelector 'get ' : 
    UInt16 RangeShift 'get ' : 
    UInt16[] EndCode 'get ' : 
    UInt16[] StartCode 'get ' : 
    Int16[] IdDelta 'get ' : 
    UInt16[] IdRangeOffsets 'get ' : 
  Methods:
    get_SegCountX2(): PrivateScope, Public, HideBySig, SpecialName
    get_SearchRange(): PrivateScope, Public, HideBySig, SpecialName
    get_EntrySelector(): PrivateScope, Public, HideBySig, SpecialName
    get_RangeShift(): PrivateScope, Public, HideBySig, SpecialName
    get_EndCode(): PrivateScope, Public, HideBySig, SpecialName
    get_StartCode(): PrivateScope, Public, HideBySig, SpecialName
    get_IdDelta(): PrivateScope, Public, HideBySig, SpecialName
    get_IdRangeOffsets(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableFormat6Entry: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableShortHeaderEntry
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 FirstCode 'get ' : 
    UInt16 EntryCount 'get ' : 
  Methods:
    get_FirstCode(): PrivateScope, Public, HideBySig, SpecialName
    get_EntryCount(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCMapSequentialGroup: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 StartCharCode 'get ' : 
    UInt32 EndCharCode 'get ' : 
    UInt32 StartGlyphID 'get ' : 
  Methods:
    get_StartCharCode(): PrivateScope, Public, HideBySig, SpecialName
    get_EndCharCode(): PrivateScope, Public, HideBySig, SpecialName
    get_StartGlyphID(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableFormat8Entry: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableLongHeaderEntry
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Is32 'get ' : 
    UInt32 NumGroups 'get ' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCMapSequentialGroup[] Groups 'get ' : 
  Methods:
    get_Is32(): PrivateScope, Public, HideBySig, SpecialName
    get_NumGroups(): PrivateScope, Public, HideBySig, SpecialName
    get_Groups(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableShortHeaderEntry: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableEntry
  Properties:
    UInt16 Length 'get set' : 
    UInt16 Language 'get set' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Language(): PrivateScope, Public, HideBySig, SpecialName
    set_Language(UInt16): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableLongHeaderEntry: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCmapTableEntry
  Properties:
    UInt32 Length 'get set' : 
    UInt32 Language 'get set' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Language(): PrivateScope, Public, HideBySig, SpecialName
    set_Language(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntMacintoshLangID: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt16 English = 0 : Public, Static, Literal, HasDefault
    UInt16 French = 1 : Public, Static, Literal, HasDefault
    UInt16 German = 2 : Public, Static, Literal, HasDefault
    UInt16 Italian = 3 : Public, Static, Literal, HasDefault
    UInt16 Dutch = 4 : Public, Static, Literal, HasDefault
    UInt16 Swedish = 5 : Public, Static, Literal, HasDefault
    UInt16 Spanish = 6 : Public, Static, Literal, HasDefault
    UInt16 Danish = 7 : Public, Static, Literal, HasDefault
    UInt16 Portuguese = 8 : Public, Static, Literal, HasDefault
    UInt16 Norwegian = 9 : Public, Static, Literal, HasDefault
    UInt16 Hebrew = 10 : Public, Static, Literal, HasDefault
    UInt16 Japanese = 11 : Public, Static, Literal, HasDefault
    UInt16 Arabic = 12 : Public, Static, Literal, HasDefault
    UInt16 Finnish = 13 : Public, Static, Literal, HasDefault
    UInt16 Greek = 14 : Public, Static, Literal, HasDefault
    UInt16 Icelandic = 15 : Public, Static, Literal, HasDefault
    UInt16 Maltese = 16 : Public, Static, Literal, HasDefault
    UInt16 Turkish = 17 : Public, Static, Literal, HasDefault
    UInt16 Croatian = 18 : Public, Static, Literal, HasDefault
    UInt16 Chinese_Traditional = 19 : Public, Static, Literal, HasDefault
    UInt16 Urdu = 20 : Public, Static, Literal, HasDefault
    UInt16 Hindi = 21 : Public, Static, Literal, HasDefault
    UInt16 Thai = 22 : Public, Static, Literal, HasDefault
    UInt16 Korean = 23 : Public, Static, Literal, HasDefault
    UInt16 Lithuanian = 24 : Public, Static, Literal, HasDefault
    UInt16 Polish = 25 : Public, Static, Literal, HasDefault
    UInt16 Hungarian = 26 : Public, Static, Literal, HasDefault
    UInt16 Estonian = 27 : Public, Static, Literal, HasDefault
    UInt16 Latvian = 28 : Public, Static, Literal, HasDefault
    UInt16 Sami = 29 : Public, Static, Literal, HasDefault
    UInt16 Faroese = 30 : Public, Static, Literal, HasDefault
    UInt16 Farsi_Persian = 31 : Public, Static, Literal, HasDefault
    UInt16 Russian = 32 : Public, Static, Literal, HasDefault
    UInt16 Chinese_Simplified = 33 : Public, Static, Literal, HasDefault
    UInt16 Flemish = 34 : Public, Static, Literal, HasDefault
    UInt16 Irish_Gaelic = 35 : Public, Static, Literal, HasDefault
    UInt16 Albanian = 36 : Public, Static, Literal, HasDefault
    UInt16 Romanian = 37 : Public, Static, Literal, HasDefault
    UInt16 Czech = 38 : Public, Static, Literal, HasDefault
    UInt16 Slovak = 39 : Public, Static, Literal, HasDefault
    UInt16 Slovenian = 40 : Public, Static, Literal, HasDefault
    UInt16 Yiddish = 41 : Public, Static, Literal, HasDefault
    UInt16 Serbian = 42 : Public, Static, Literal, HasDefault
    UInt16 Macedonian = 43 : Public, Static, Literal, HasDefault
    UInt16 Bulgarian = 44 : Public, Static, Literal, HasDefault
    UInt16 Ukrainian = 45 : Public, Static, Literal, HasDefault
    UInt16 Byelorussian = 46 : Public, Static, Literal, HasDefault
    UInt16 Uzbek = 47 : Public, Static, Literal, HasDefault
    UInt16 Kazakh = 48 : Public, Static, Literal, HasDefault
    UInt16 Azerbaijani_CyrillicScript = 49 : Public, Static, Literal, HasDefault
    UInt16 Azerbaijani_ArabicScript = 50 : Public, Static, Literal, HasDefault
    UInt16 Armenian = 51 : Public, Static, Literal, HasDefault
    UInt16 Georgian = 52 : Public, Static, Literal, HasDefault
    UInt16 Moldavian = 53 : Public, Static, Literal, HasDefault
    UInt16 Kirghiz = 54 : Public, Static, Literal, HasDefault
    UInt16 Tajiki = 55 : Public, Static, Literal, HasDefault
    UInt16 Turkmen = 56 : Public, Static, Literal, HasDefault
    UInt16 Mongolian_MongolianScript = 57 : Public, Static, Literal, HasDefault
    UInt16 Mongolian_CyrillicScript = 58 : Public, Static, Literal, HasDefault
    UInt16 Pashto = 59 : Public, Static, Literal, HasDefault
    UInt16 Kurdish = 60 : Public, Static, Literal, HasDefault
    UInt16 Kashmiri = 61 : Public, Static, Literal, HasDefault
    UInt16 Sindhi = 62 : Public, Static, Literal, HasDefault
    UInt16 Tibetan = 63 : Public, Static, Literal, HasDefault
    UInt16 Nepali = 64 : Public, Static, Literal, HasDefault
    UInt16 Sanskrit = 65 : Public, Static, Literal, HasDefault
    UInt16 Marathi = 66 : Public, Static, Literal, HasDefault
    UInt16 Bengali = 67 : Public, Static, Literal, HasDefault
    UInt16 Assamese = 68 : Public, Static, Literal, HasDefault
    UInt16 Gujarati = 69 : Public, Static, Literal, HasDefault
    UInt16 Punjabi = 70 : Public, Static, Literal, HasDefault
    UInt16 Oriya = 71 : Public, Static, Literal, HasDefault
    UInt16 Malayalam = 72 : Public, Static, Literal, HasDefault
    UInt16 Kannada = 73 : Public, Static, Literal, HasDefault
    UInt16 Tamil = 74 : Public, Static, Literal, HasDefault
    UInt16 Telugu = 75 : Public, Static, Literal, HasDefault
    UInt16 Sinhalese = 76 : Public, Static, Literal, HasDefault
    UInt16 Burmese = 77 : Public, Static, Literal, HasDefault
    UInt16 Khmer = 78 : Public, Static, Literal, HasDefault
    UInt16 Lao = 79 : Public, Static, Literal, HasDefault
    UInt16 Vietnamese = 80 : Public, Static, Literal, HasDefault
    UInt16 Indonesian = 81 : Public, Static, Literal, HasDefault
    UInt16 Tagalog = 82 : Public, Static, Literal, HasDefault
    UInt16 Malay_RomanScript = 83 : Public, Static, Literal, HasDefault
    UInt16 Malay_ArabicScript = 84 : Public, Static, Literal, HasDefault
    UInt16 Amharic = 85 : Public, Static, Literal, HasDefault
    UInt16 Tigrinya = 86 : Public, Static, Literal, HasDefault
    UInt16 Galla = 87 : Public, Static, Literal, HasDefault
    UInt16 Somali = 88 : Public, Static, Literal, HasDefault
    UInt16 Swahili = 89 : Public, Static, Literal, HasDefault
    UInt16 Kinyarwanda_Ruanda = 90 : Public, Static, Literal, HasDefault
    UInt16 Rundi = 91 : Public, Static, Literal, HasDefault
    UInt16 Nyanja_Chewa = 92 : Public, Static, Literal, HasDefault
    UInt16 Malagasy = 93 : Public, Static, Literal, HasDefault
    UInt16 Esperanto = 94 : Public, Static, Literal, HasDefault
    UInt16 Welsh = 128 : Public, Static, Literal, HasDefault
    UInt16 Basque = 129 : Public, Static, Literal, HasDefault
    UInt16 Catalan = 130 : Public, Static, Literal, HasDefault
    UInt16 Latin = 131 : Public, Static, Literal, HasDefault
    UInt16 Quechua = 132 : Public, Static, Literal, HasDefault
    UInt16 Guarani = 133 : Public, Static, Literal, HasDefault
    UInt16 Aymara = 134 : Public, Static, Literal, HasDefault
    UInt16 Tatar = 135 : Public, Static, Literal, HasDefault
    UInt16 Uighur = 136 : Public, Static, Literal, HasDefault
    UInt16 Dzongkha = 137 : Public, Static, Literal, HasDefault
    UInt16 Javanese_RomanScript = 138 : Public, Static, Literal, HasDefault
    UInt16 Sundanese_RomanScript = 139 : Public, Static, Literal, HasDefault
    UInt16 Galician = 140 : Public, Static, Literal, HasDefault
    UInt16 Afrikaans = 141 : Public, Static, Literal, HasDefault
    UInt16 Breton = 142 : Public, Static, Literal, HasDefault
    UInt16 Inuktitut = 143 : Public, Static, Literal, HasDefault
    UInt16 Scottish_Gaelic = 144 : Public, Static, Literal, HasDefault
    UInt16 Manx_Gaelic = 145 : Public, Static, Literal, HasDefault
    UInt16 Irish_Gaelic_WithDotAbove = 146 : Public, Static, Literal, HasDefault
    UInt16 Tongan = 147 : Public, Static, Literal, HasDefault
    UInt16 Greek_Polytonic = 148 : Public, Static, Literal, HasDefault
    UInt16 Greenlandic = 149 : Public, Static, Literal, HasDefault
    UInt16 Azerbaijani_RomanScript = 150 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWindowsLangID: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt16 Afrikaans_SouthAfrica = 1078 : Public, Static, Literal, HasDefault
    UInt16 Albanian_Albania = 1052 : Public, Static, Literal, HasDefault
    UInt16 Alsatian_France = 1156 : Public, Static, Literal, HasDefault
    UInt16 Amharic_Ethiopia = 1118 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Algeria = 5121 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Bahrain = 15361 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Egypt = 3073 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Iraq = 2049 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Jordan = 11265 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Kuwait = 13313 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Lebanon = 12289 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Libya = 4097 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Morocco = 6145 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Oman = 8193 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Qatar = 16385 : Public, Static, Literal, HasDefault
    UInt16 Arabic_SaudiArabia = 1025 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Syria = 10241 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Tunisia = 7169 : Public, Static, Literal, HasDefault
    UInt16 Arabic_UAE = 14337 : Public, Static, Literal, HasDefault
    UInt16 Arabic_Yemen = 9217 : Public, Static, Literal, HasDefault
    UInt16 Armenian_Armenia = 1067 : Public, Static, Literal, HasDefault
    UInt16 Assamese_India = 1101 : Public, Static, Literal, HasDefault
    UInt16 AzeriCyrillic_Azerbaijan = 2092 : Public, Static, Literal, HasDefault
    UInt16 AzeriLatin_Azerbaijan = 1068 : Public, Static, Literal, HasDefault
    UInt16 Bashkir_Russia = 1133 : Public, Static, Literal, HasDefault
    UInt16 Basque_Basque = 1069 : Public, Static, Literal, HasDefault
    UInt16 Belarusian_Belarus = 1059 : Public, Static, Literal, HasDefault
    UInt16 Bengali_Bangladesh = 2117 : Public, Static, Literal, HasDefault
    UInt16 Bengali_India = 1093 : Public, Static, Literal, HasDefault
    UInt16 BosnianCyrillic_BosniaAndHerzegovina = 8218 : Public, Static, Literal, HasDefault
    UInt16 BosnianLatin_BosniaAndHerzegovina = 5146 : Public, Static, Literal, HasDefault
    UInt16 Breton_France = 1150 : Public, Static, Literal, HasDefault
    UInt16 Bulgarian_Bulgaria = 1026 : Public, Static, Literal, HasDefault
    UInt16 Catalan_Catalan = 1027 : Public, Static, Literal, HasDefault
    UInt16 Chinese_HongKongSAR = 3076 : Public, Static, Literal, HasDefault
    UInt16 Chinese_MacaoSAR = 5124 : Public, Static, Literal, HasDefault
    UInt16 Chinese_PRC = 2052 : Public, Static, Literal, HasDefault
    UInt16 Chinese_Singapore = 4100 : Public, Static, Literal, HasDefault
    UInt16 Chinese_Taiwan = 1028 : Public, Static, Literal, HasDefault
    UInt16 Corsican_France = 1155 : Public, Static, Literal, HasDefault
    UInt16 Croatian_Croatia = 1050 : Public, Static, Literal, HasDefault
    UInt16 CroatianLatin_BosniaAndHerzegovina = 4122 : Public, Static, Literal, HasDefault
    UInt16 Czech_CzechRepublic = 1029 : Public, Static, Literal, HasDefault
    UInt16 Danish_Denmark = 1030 : Public, Static, Literal, HasDefault
    UInt16 Dari_Afghanistan = 1164 : Public, Static, Literal, HasDefault
    UInt16 Divehi_Maldives = 1125 : Public, Static, Literal, HasDefault
    UInt16 Dutch_Belgium = 2067 : Public, Static, Literal, HasDefault
    UInt16 Dutch_Netherlands = 1043 : Public, Static, Literal, HasDefault
    UInt16 English_Australia = 3081 : Public, Static, Literal, HasDefault
    UInt16 English_Belize = 10249 : Public, Static, Literal, HasDefault
    UInt16 English_Canada = 4105 : Public, Static, Literal, HasDefault
    UInt16 English_Caribbean = 9225 : Public, Static, Literal, HasDefault
    UInt16 English_India = 16393 : Public, Static, Literal, HasDefault
    UInt16 English_Ireland = 6153 : Public, Static, Literal, HasDefault
    UInt16 English_Jamaica = 8201 : Public, Static, Literal, HasDefault
    UInt16 English_Malaysia = 17417 : Public, Static, Literal, HasDefault
    UInt16 English_NewZealand = 5129 : Public, Static, Literal, HasDefault
    UInt16 English_RepublicOfThePhilippines = 13321 : Public, Static, Literal, HasDefault
    UInt16 English_Singapore = 18441 : Public, Static, Literal, HasDefault
    UInt16 English_SouthAfrica = 7177 : Public, Static, Literal, HasDefault
    UInt16 English_TrinidadAndTobago = 11273 : Public, Static, Literal, HasDefault
    UInt16 English_UnitedKingdom = 2057 : Public, Static, Literal, HasDefault
    UInt16 English_UnitedStates = 1033 : Public, Static, Literal, HasDefault
    UInt16 English_Zimbabwe = 12297 : Public, Static, Literal, HasDefault
    UInt16 Estonian_Estonia = 1061 : Public, Static, Literal, HasDefault
    UInt16 Faroese_FaroeIslands = 1080 : Public, Static, Literal, HasDefault
    UInt16 Filipino_Philippines = 1124 : Public, Static, Literal, HasDefault
    UInt16 Finnish_Finland = 1035 : Public, Static, Literal, HasDefault
    UInt16 French_Belgium = 2060 : Public, Static, Literal, HasDefault
    UInt16 French_Canada = 3084 : Public, Static, Literal, HasDefault
    UInt16 French_France = 1036 : Public, Static, Literal, HasDefault
    UInt16 French_Luxembourg = 5132 : Public, Static, Literal, HasDefault
    UInt16 French_PrincipalityOfMonaco = 6156 : Public, Static, Literal, HasDefault
    UInt16 French_Switzerland = 4108 : Public, Static, Literal, HasDefault
    UInt16 Frisian_Netherlands = 1122 : Public, Static, Literal, HasDefault
    UInt16 Galician_Galician = 1110 : Public, Static, Literal, HasDefault
    UInt16 Georgian_Georgia = 1079 : Public, Static, Literal, HasDefault
    UInt16 German_Austria = 3079 : Public, Static, Literal, HasDefault
    UInt16 German_Germany = 1031 : Public, Static, Literal, HasDefault
    UInt16 German_Liechtenstein = 5127 : Public, Static, Literal, HasDefault
    UInt16 German_Luxembourg = 4103 : Public, Static, Literal, HasDefault
    UInt16 German_Switzerland = 2055 : Public, Static, Literal, HasDefault
    UInt16 Greek_Greece = 1032 : Public, Static, Literal, HasDefault
    UInt16 Greenlandic_Greenland = 1135 : Public, Static, Literal, HasDefault
    UInt16 Gujarati_India = 1095 : Public, Static, Literal, HasDefault
    UInt16 HausaLatin_Nigeria = 1128 : Public, Static, Literal, HasDefault
    UInt16 Hebrew_Israel = 1037 : Public, Static, Literal, HasDefault
    UInt16 Hindi_India = 1081 : Public, Static, Literal, HasDefault
    UInt16 Hungarian_Hungary = 1038 : Public, Static, Literal, HasDefault
    UInt16 Icelandic_Iceland = 1039 : Public, Static, Literal, HasDefault
    UInt16 Igbo_Nigeria = 1136 : Public, Static, Literal, HasDefault
    UInt16 Indonesian_Indonesia = 1057 : Public, Static, Literal, HasDefault
    UInt16 Inuktitut_Canada = 1117 : Public, Static, Literal, HasDefault
    UInt16 InuktitutLatin_Canada = 2141 : Public, Static, Literal, HasDefault
    UInt16 Irish_Ireland = 2108 : Public, Static, Literal, HasDefault
    UInt16 IsiXhosa_SouthAfrica = 1076 : Public, Static, Literal, HasDefault
    UInt16 IsiZulu_SouthAfrica = 1077 : Public, Static, Literal, HasDefault
    UInt16 Italian_Italy = 1040 : Public, Static, Literal, HasDefault
    UInt16 Italian_Switzerland = 2064 : Public, Static, Literal, HasDefault
    UInt16 Japanese_Japan = 1041 : Public, Static, Literal, HasDefault
    UInt16 Kannada_India = 1099 : Public, Static, Literal, HasDefault
    UInt16 Kazakh_Kazakhstan = 1087 : Public, Static, Literal, HasDefault
    UInt16 Khmer_Cambodia = 1107 : Public, Static, Literal, HasDefault
    UInt16 KIche_Guatemala = 1158 : Public, Static, Literal, HasDefault
    UInt16 Kinyarwanda_Rwanda = 1159 : Public, Static, Literal, HasDefault
    UInt16 Kiswahili_Kenya = 1089 : Public, Static, Literal, HasDefault
    UInt16 Konkani_India = 1111 : Public, Static, Literal, HasDefault
    UInt16 Korean_Korea = 1042 : Public, Static, Literal, HasDefault
    UInt16 Kyrgyz_Kyrgyzstan = 1088 : Public, Static, Literal, HasDefault
    UInt16 Lao_LaoPDR = 1108 : Public, Static, Literal, HasDefault
    UInt16 Latvian_Latvia = 1062 : Public, Static, Literal, HasDefault
    UInt16 Lithuanian_Lithuania = 1063 : Public, Static, Literal, HasDefault
    UInt16 LowerSorbian_Germany = 2094 : Public, Static, Literal, HasDefault
    UInt16 Luxembourgish_Luxembourg = 1134 : Public, Static, Literal, HasDefault
    UInt16 Macedonian_NorthMacedonia = 1071 : Public, Static, Literal, HasDefault
    UInt16 Malay_BruneiDarussalam = 2110 : Public, Static, Literal, HasDefault
    UInt16 Malay_Malaysia = 1086 : Public, Static, Literal, HasDefault
    UInt16 Malayalam_India = 1100 : Public, Static, Literal, HasDefault
    UInt16 Maltese_Malta = 1082 : Public, Static, Literal, HasDefault
    UInt16 Maori_NewZealand = 1153 : Public, Static, Literal, HasDefault
    UInt16 Mapudungun_Chile = 1146 : Public, Static, Literal, HasDefault
    UInt16 Marathi_India = 1102 : Public, Static, Literal, HasDefault
    UInt16 Mohawk_Mohawk = 1148 : Public, Static, Literal, HasDefault
    UInt16 MongolianCyrillic_Mongolia = 1104 : Public, Static, Literal, HasDefault
    UInt16 MongolianTraditional_PRC = 2128 : Public, Static, Literal, HasDefault
    UInt16 Nepali_Nepal = 1121 : Public, Static, Literal, HasDefault
    UInt16 NorwegianBokmal_Norway = 1044 : Public, Static, Literal, HasDefault
    UInt16 NorwegianNynorsk_Norway = 2068 : Public, Static, Literal, HasDefault
    UInt16 Occitan_France = 1154 : Public, Static, Literal, HasDefault
    UInt16 OdiaOriya_India = 1096 : Public, Static, Literal, HasDefault
    UInt16 Pashto_Afghanistan = 1123 : Public, Static, Literal, HasDefault
    UInt16 Polish_Poland = 1045 : Public, Static, Literal, HasDefault
    UInt16 Portuguese_Brazil = 1046 : Public, Static, Literal, HasDefault
    UInt16 Portuguese_Portugal = 2070 : Public, Static, Literal, HasDefault
    UInt16 Punjabi_India = 1094 : Public, Static, Literal, HasDefault
    UInt16 Quechua_Bolivia = 1131 : Public, Static, Literal, HasDefault
    UInt16 Quechua_Ecuador = 2155 : Public, Static, Literal, HasDefault
    UInt16 Quechua_Peru = 3179 : Public, Static, Literal, HasDefault
    UInt16 Romanian_Romania = 1048 : Public, Static, Literal, HasDefault
    UInt16 Romansh_Switzerland = 1047 : Public, Static, Literal, HasDefault
    UInt16 Russian_Russia = 1049 : Public, Static, Literal, HasDefault
    UInt16 SamiInari_Finland = 9275 : Public, Static, Literal, HasDefault
    UInt16 SamiLule_Norway = 4155 : Public, Static, Literal, HasDefault
    UInt16 SamiLule_Sweden = 5179 : Public, Static, Literal, HasDefault
    UInt16 SamiNorthern_Finland = 3131 : Public, Static, Literal, HasDefault
    UInt16 SamiNorthern_Norway = 1083 : Public, Static, Literal, HasDefault
    UInt16 SamiNorthern_Sweden = 2107 : Public, Static, Literal, HasDefault
    UInt16 SamiSkolt_Finland = 8251 : Public, Static, Literal, HasDefault
    UInt16 SamiSouthern_Norway = 6203 : Public, Static, Literal, HasDefault
    UInt16 SamiSouthern_Sweden = 7227 : Public, Static, Literal, HasDefault
    UInt16 Sanskrit_India = 1103 : Public, Static, Literal, HasDefault
    UInt16 SerbianCyrillic_BosniaAndHerzegovina = 7194 : Public, Static, Literal, HasDefault
    UInt16 SerbianCyrillic_Serbia = 3098 : Public, Static, Literal, HasDefault
    UInt16 SerbianLatin_BosniaAndHerzegovina = 6170 : Public, Static, Literal, HasDefault
    UInt16 SerbianLatin_Serbia = 2074 : Public, Static, Literal, HasDefault
    UInt16 SesothoSaLeboa_SouthAfrica = 1132 : Public, Static, Literal, HasDefault
    UInt16 Setswana_SouthAfrica = 1074 : Public, Static, Literal, HasDefault
    UInt16 Sinhala_SriLanka = 1115 : Public, Static, Literal, HasDefault
    UInt16 Slovak_Slovakia = 1051 : Public, Static, Literal, HasDefault
    UInt16 Slovenian_Slovenia = 1060 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Argentina = 11274 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Bolivia = 16394 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Chile = 13322 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Colombia = 9226 : Public, Static, Literal, HasDefault
    UInt16 Spanish_CostaRica = 5130 : Public, Static, Literal, HasDefault
    UInt16 Spanish_DominicanRepublic = 7178 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Ecuador = 12298 : Public, Static, Literal, HasDefault
    UInt16 Spanish_ElSalvador = 17418 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Guatemala = 4106 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Honduras = 18442 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Mexico = 2058 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Nicaragua = 19466 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Panama = 6154 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Paraguay = 15370 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Peru = 10250 : Public, Static, Literal, HasDefault
    UInt16 Spanish_PuertoRico = 20490 : Public, Static, Literal, HasDefault
    UInt16 Spanish_ModernSortSpain = 3082 : Public, Static, Literal, HasDefault
    UInt16 Spanish_TraditionalSortSpain = 1034 : Public, Static, Literal, HasDefault
    UInt16 Spanish_UnitedStates = 21514 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Uruguay = 14346 : Public, Static, Literal, HasDefault
    UInt16 Spanish_Venezuela = 8202 : Public, Static, Literal, HasDefault
    UInt16 Swedish_Finland = 2077 : Public, Static, Literal, HasDefault
    UInt16 Swedish_Sweden = 1053 : Public, Static, Literal, HasDefault
    UInt16 Syriac_Syria = 1114 : Public, Static, Literal, HasDefault
    UInt16 TajikCyrillic_Tajikistan = 1064 : Public, Static, Literal, HasDefault
    UInt16 TamazightLatin_Algeria = 2143 : Public, Static, Literal, HasDefault
    UInt16 Tamil_India = 1097 : Public, Static, Literal, HasDefault
    UInt16 Tatar_Russia = 1092 : Public, Static, Literal, HasDefault
    UInt16 Telugu_India = 1098 : Public, Static, Literal, HasDefault
    UInt16 Thai_Thailand = 1054 : Public, Static, Literal, HasDefault
    UInt16 Tibetan_PRC = 1105 : Public, Static, Literal, HasDefault
    UInt16 Turkish_Turkey = 1055 : Public, Static, Literal, HasDefault
    UInt16 Turkmen_Turkmenistan = 1090 : Public, Static, Literal, HasDefault
    UInt16 Uighur_PRC = 1152 : Public, Static, Literal, HasDefault
    UInt16 Ukrainian_Ukraine = 1058 : Public, Static, Literal, HasDefault
    UInt16 UpperSorbian_Germany = 1070 : Public, Static, Literal, HasDefault
    UInt16 Urdu_IslamicRepublicOfPakistan = 1056 : Public, Static, Literal, HasDefault
    UInt16 UzbekCyrillic_Uzbekistan = 2115 : Public, Static, Literal, HasDefault
    UInt16 UzbekLatin_Uzbekistan = 1091 : Public, Static, Literal, HasDefault
    UInt16 Vietnamese_Vietnam = 1066 : Public, Static, Literal, HasDefault
    UInt16 Welsh_UnitedKingdom = 1106 : Public, Static, Literal, HasDefault
    UInt16 Wolof_Senegal = 1160 : Public, Static, Literal, HasDefault
    UInt16 Yakut_Russia = 1157 : Public, Static, Literal, HasDefault
    UInt16 Yi_PRC = 1144 : Public, Static, Literal, HasDefault
    UInt16 Yoruba_Nigeria = 1130 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntName: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, UInt16, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID, UInt16, UInt16, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID PlatformID 'get ' : 
    UInt16 EncodingID 'get ' : 
    UInt16 LanguageID 'get ' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID NameID 'get ' : 
    Byte[] Data 'get ' : 
    System.String DecodedName 'get ' : 
  Methods:
    get_PlatformID(): PrivateScope, Public, HideBySig, SpecialName
    get_EncodingID(): PrivateScope, Public, HideBySig, SpecialName
    get_LanguageID(): PrivateScope, Public, HideBySig, SpecialName
    get_NameID(): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    get_DecodedName(): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID Copyright = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID FontFamily = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID FontSubfamily = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID UniqueFontId = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID FullFontName = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID Version = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID PostScriptName = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID Trademark = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID ManufacturerName = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID DesignerName = 9 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID Description = 10 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID VendorURL = 11 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID DesignerURL = 12 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID LicenseDescription = 13 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID LicenseInfoURL = 14 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID TypographicFamily = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID TypographicSubfamily = 17 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID CompatibleFull = 18 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID SampleText = 19 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID PostScriptCIDFontName = 20 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID WWSFamily = 21 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID WWSSubFamily = 22 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID LightBackgroundPalette = 23 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID DarkBackgroundPalette = 24 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameID VariationsPostScriptNamePrefix = 25 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID Unicode = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID Macintosh = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID ISO = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID Microsoft = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntPlatformID Custom = 4 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntMaxpTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 Version1 = 65536 : Public, Static, Literal, HasDefault
    UInt32 Version05 = 20480 : Public, Static, Literal, HasDefault
  Properties:
    UInt32 Version 'get set' : 
    UInt16 NumGlyphs 'get set' : 
    UInt16 MaxPoints 'get set' : 
    UInt16 MaxContours 'get set' : 
    UInt16 MaxCompositePoints 'get set' : 
    UInt16 MaxCompositeContours 'get set' : 
    UInt16 MaxZones 'get set' : 
    UInt16 MaxTwilightPoints 'get set' : 
    UInt16 MaxStorage 'get set' : 
    UInt16 MaxFunctionDefs 'get set' : 
    UInt16 MaxInstructionDefs 'get set' : 
    UInt16 MaxStackElements 'get set' : 
    UInt16 MaxSizeOfInstructions 'get set' : 
    UInt16 MaxComponentElements 'get set' : 
    UInt16 MaxComponentDepth 'get set' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    set_Version(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_NumGlyphs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumGlyphs(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxPoints(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxContours(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxContours(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxCompositePoints(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCompositePoints(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxCompositeContours(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCompositeContours(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxZones(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxZones(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxTwilightPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxTwilightPoints(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxStorage(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxStorage(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxFunctionDefs(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxFunctionDefs(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxInstructionDefs(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxInstructionDefs(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxStackElements(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxStackElements(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSizeOfInstructions(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSizeOfInstructions(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxComponentElements(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxComponentElements(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxComponentDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxComponentDepth(UInt16): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[DevExpress.Drawing.Internal.Fonts.Sfnt.SfntName] Names 'get set' : 
    System.Collections.Generic.IList`1[System.Byte[]] LangTags 'get set' : 
  Methods:
    get_Names(): PrivateScope, Public, HideBySig, SpecialName
    set_Names(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_LangTags(): PrivateScope, Public, HideBySig, SpecialName
    set_LangTags(IList`1): PrivateScope, Public, HideBySig, SpecialName
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass NoClassification = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifNoClassification = 256 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifIBMRoundedLegibility = 257 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifGaralde = 258 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifVenetian = 259 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifModifiedVenetian = 260 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifDutchModern = 261 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifDutchTraditional = 262 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifContemporary = 263 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifCalligraphic = 264 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OldStyleSerifMiscellaneous = 271 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass TransitionalSerifNoClassification = 512 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass TransitionalSerifDirectLine = 513 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass TransitionalSerifScript = 514 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass TransitionalSerifMiscellaneous = 527 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ModernSerifNoClassification = 768 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ModernSerifItalian = 769 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ModernSerifScript = 770 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ModernSerifMiscellaneous = 783 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ClarendonSerifNoClassification = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ClarendonSerifClarendon = 1025 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ClarendonSerifModern = 1026 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ClarendonSerifTraditional = 1027 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ClarendonSerifNewspaper = 1028 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ClarendonSerifStubSerif = 1029 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ClarendonSerifMonotone = 1030 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ClarendonSerifTypewriter = 1031 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ClarendonSerifMiscellaneous = 1039 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SlabSerifNoClassification = 1280 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SlabSerifMonotone = 1281 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SlabSerifHumanist = 1282 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SlabSerifGeometric = 1283 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SlabSerifSwiss = 1284 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SlabSerifTypewriter = 1285 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SlabSerifMiscellaneous = 1295 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass FreeformSerifNoClassification = 1792 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass FreeformSerifModern = 1793 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass FreeformSerifMiscellaneous = 1807 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifNoClassification = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifIBMNewGrotesqueGothic = 2049 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifHumanist = 2050 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifLowXRoundGeometric = 2051 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifHighXRoundGeometric = 2052 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifNeoGrotesqueGothic = 2053 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifModifiedNeoGrotesqueGothic = 2054 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifTypewriterGothic = 2057 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifMatrix = 2058 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SansSerifMiscellaneous = 2063 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OrnamentalNoClassification = 2304 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OrnamentalEngraver = 2305 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OrnamentalBlackLetter = 2306 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OrnamentalDecorative = 2307 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OrnamentalThreeDimensional = 2308 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass OrnamentalMiscellaneous = 2319 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptNoClassification = 2560 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptUncial = 2561 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptBrushJoined = 2562 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptFormalJoined = 2563 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptMonotoneJoined = 2564 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptCalligraphic = 2565 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptBrushUnjoined = 2566 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptFormalUnjoined = 2567 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptMonotoneUnjoined = 2568 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass ScriptMiscellaneous = 2575 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SymbolicNoClassification = 3072 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SymbolicMixedSerif = 3075 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SymbolicOldstyleSerif = 3078 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SymbolicNeoGrotesqueSansSerif = 3079 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass SymbolicMiscellaneous = 3087 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntEmbeddingType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntEmbeddingType InstallableEmbedding = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntEmbeddingType RestrictedLicense = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntEmbeddingType PreviewPrintEmbedding = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntEmbeddingType EditableEmbedding = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntEmbeddingType NoSubsetting = 256 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntEmbeddingType BitmapEmbeddingOnly = 512 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass UltraCondensed = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass ExtraCondensed = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass Condensed = 3 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass SemiCondensed = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass Medium = 5 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass SemiExpanded = 6 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass Expanded = 7 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass ExtraExpanded = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass UltraExpanded = 9 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Empty = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 BasicLatin = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Latin1Supplement = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 LatinExtendedA = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 LatinExtendedB = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 IPAExtensions = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 SpacingModifiersLetters = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 CombiningDiacriticalMarks = 64 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 GreekAndCoptic = 128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Coptic = 256 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Cyrillic = 512 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Armenian = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Hebrew = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Vai = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Arabic = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 NKo = 16384 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Devanagari = 32768 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Bengali = 65536 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Gurmukhi = 131072 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Gujarati = 262144 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Oriya = 524288 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Tamil = 1048576 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Telugu = 2097152 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Kannada = 4194304 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Malayalam = 8388608 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Thai = 16777216 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Lao = 33554432 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Georgian = 67108864 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 Balinese = 134217728 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 HangulJamo = 268435456 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 LatinExtendedAdditional = 536870912 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 GreekExtended = 1073741824 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 GeneralPunctuation = 2147483648 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 Empty = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 SuperscriptsAndSubscripts = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 CurrencySymbols = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 CombiningDiacriticalMarksForSymbols = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 LetterlikeSymbols = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 NumberForms = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 Arrows = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 MathematicalOperators = 64 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 MiscellaneousTechnical = 128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 ControlPictures = 256 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 OpticalCharacterRecognition = 512 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 EnclosedAlphanumerics = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 BoxDrawing = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 BlockElements = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 GeometricShapes = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 MiscellaneousSymbols = 16384 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 Dingbats = 32768 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 CJKSymbolsAndPunctuation = 65536 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 Hiragana = 131072 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 Katakana = 262144 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 Bopomofo = 524288 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 HangulCompatibilityJamo = 1048576 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 PhagsPa = 2097152 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 EnclosedCJKLettersAndMonths = 4194304 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 CJKCompatibility = 8388608 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 HangulSyllables = 16777216 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 NonPlane0 = 33554432 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 Phoenician = 67108864 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 CJKUnifiedIdeographs = 134217728 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 PrivateUseAreaPlane0 = 268435456 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 CJKStrokes = 536870912 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 AlphabeticPresentationForms = 1073741824 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 ArabicPresentationFormsA = 2147483648 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Empty = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 CombiningHalfMarks = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 VerticalForms = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 SmallFormsVariants = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 ArabicPresentationFormsB = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 HalfwidthAndFullwidthForms = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Specials = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Tibetan = 64 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Syriac = 128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Thaana = 256 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Sinhala = 512 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Myanmar = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Ethiopic = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Cherokee = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 UnifiedCanadianAboriginalSyllabics = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Ogham = 16384 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Runic = 32768 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Khmer = 65536 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Mongolian = 131072 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 BraillePatterns = 262144 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 YiSyllables = 524288 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Tagalog = 1048576 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 OldItalic = 2097152 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Gothic = 4194304 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Deseret = 8388608 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 MusicalSymbols = 16777216 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 MathematicalAlphanumericSymbols = 33554432 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 PrivateUsePlane15_16 = 67108864 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 VariationSelectors = 134217728 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Tags = 268435456 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 Limbu = 536870912 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 TaiLe = 1073741824 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 NewTaiLe = 2147483648 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Empty = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Buginese = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Glagolitic = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Tifinagh = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 YijingHexagramSymbols = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 SylotiNagri = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 LinearBSyllabary = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 AncientGreekNumbers = 64 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Ugaritic = 128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 OldPersian = 256 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Shavian = 512 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Osmanya = 1024 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 CypriotSyllabary = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Kharoshthi = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 TaiXuanJingSymbols = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Cuneiform = 16384 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 CountingRodNumerals = 32768 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Sundanese = 65536 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Lepcha = 131072 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 OlChiki = 262144 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Saurashtra = 524288 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 KayahLi = 1048576 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Rejang = 2097152 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Cham = 4194304 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 AncientSymbols = 8388608 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 PhaistosDisc = 16777216 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 Carian = 33554432 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 DominoTiles = 67108864 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection Empty = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection ITALIC = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection UNDERSCORE = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection NEGATIVE = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection OUTLINED = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection STRIKEOUT = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection BOLD = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection REGULAR = 64 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection USE_TYPO_METRICS = 128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection WWS = 256 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection OBLIQUE = 512 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Empty = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Latin1 = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Latin2EasternEurope = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Cyrillic = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Greek = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Turkish = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Hebrew = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Arabic = 64 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 WindowsBaltic = 128 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Vietnamese = 256 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 Thai = 65536 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 JISJapan = 131072 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 ChineseSimplified = 262144 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 KoreanWansung = 524288 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 ChineseTraditional = 1048576 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 KoreanJohab = 2097152 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 MacintoshCharacterSet = 536870912 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 OEMCharacterSet = 1073741824 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 SymbolCharacterSet = 2147483648 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 Empty = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 IBMGreek = 65536 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 MSDOSRussian = 131072 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 MSDOSNordic = 262144 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 Arabic = 524288 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 MSDOSCanadianFrench = 1048576 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 Hebrew = 2097152 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 MSDOSIcelandic = 4194304 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 MSDOSPortuguese = 8388608 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 IBMTurkish = 16777216 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 IBMCyrillic = 33554432 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 Latin2 = 67108864 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 MSDOSBaltic = 134217728 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 GreekFormer437G = 268435456 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 ArabicASMO708 = 536870912 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 WELatin1 = 1073741824 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 US = 2147483648 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntOS2Table: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 Version 'get set' : 
    Int16 AvgCharWidth 'get set' : 
    UInt16 WeightClass 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWidthClass WidthClass 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntEmbeddingType EmbeddingType 'get set' : 
    Int16 SubscriptXSize 'get set' : 
    Int16 SubscriptYSize 'get set' : 
    Int16 SubscriptXOffset 'get set' : 
    Int16 SubscriptYOffset 'get set' : 
    Int16 SuperscriptXSize 'get set' : 
    Int16 SuperscriptYSize 'get set' : 
    Int16 SuperscriptXOffset 'get set' : 
    Int16 SuperscriptYOffset 'get set' : 
    Int16 StrikeoutSize 'get set' : 
    Int16 StrikeoutPosition 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFamilyClass FamilyClass 'get set' : 
    Byte[] Panose 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange1 UnicodeRange1 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange2 UnicodeRange2 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange3 UnicodeRange3 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeRange4 UnicodeRange4 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Vendor 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntSelection Selection 'get set' : 
    UInt16 FirstCharIndex 'get set' : 
    UInt16 LastCharIndex 'get set' : 
    Int16 TypoAscender 'get set' : 
    Int16 TypoDescender 'get set' : 
    Int16 TypoLineGap 'get set' : 
    Int16 WinAscent 'get set' : 
    Int16 WinDescent 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange1 CodePageRange1 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntCodePageRange2 CodePageRange2 'get set' : 
    Int16 XHeight 'get set' : 
    Int16 CapHeight 'get set' : 
    UInt16 DefaultChar 'get set' : 
    UInt16 BreakChar 'get set' : 
    UInt16 MaxContext 'get set' : 
    UInt16 LowerOpticalPointSize 'get set' : 
    UInt16 UpperOpticalPointSize 'get set' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    set_Version(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_AvgCharWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_AvgCharWidth(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_WeightClass(): PrivateScope, Public, HideBySig, SpecialName
    set_WeightClass(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_WidthClass(): PrivateScope, Public, HideBySig, SpecialName
    set_WidthClass(SfntWidthClass): PrivateScope, Public, HideBySig, SpecialName
    get_EmbeddingType(): PrivateScope, Public, HideBySig, SpecialName
    set_EmbeddingType(SfntEmbeddingType): PrivateScope, Public, HideBySig, SpecialName
    get_SubscriptXSize(): PrivateScope, Public, HideBySig, SpecialName
    set_SubscriptXSize(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_SubscriptYSize(): PrivateScope, Public, HideBySig, SpecialName
    set_SubscriptYSize(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_SubscriptXOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_SubscriptXOffset(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_SubscriptYOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_SubscriptYOffset(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_SuperscriptXSize(): PrivateScope, Public, HideBySig, SpecialName
    set_SuperscriptXSize(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_SuperscriptYSize(): PrivateScope, Public, HideBySig, SpecialName
    set_SuperscriptYSize(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_SuperscriptXOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_SuperscriptXOffset(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_SuperscriptYOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_SuperscriptYOffset(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_StrikeoutSize(): PrivateScope, Public, HideBySig, SpecialName
    set_StrikeoutSize(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_StrikeoutPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_StrikeoutPosition(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_FamilyClass(): PrivateScope, Public, HideBySig, SpecialName
    set_FamilyClass(SfntFamilyClass): PrivateScope, Public, HideBySig, SpecialName
    get_Panose(): PrivateScope, Public, HideBySig, SpecialName
    set_Panose(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_UnicodeRange1(): PrivateScope, Public, HideBySig, SpecialName
    set_UnicodeRange1(SfntUnicodeRange1): PrivateScope, Public, HideBySig, SpecialName
    get_UnicodeRange2(): PrivateScope, Public, HideBySig, SpecialName
    set_UnicodeRange2(SfntUnicodeRange2): PrivateScope, Public, HideBySig, SpecialName
    get_UnicodeRange3(): PrivateScope, Public, HideBySig, SpecialName
    set_UnicodeRange3(SfntUnicodeRange3): PrivateScope, Public, HideBySig, SpecialName
    get_UnicodeRange4(): PrivateScope, Public, HideBySig, SpecialName
    set_UnicodeRange4(SfntUnicodeRange4): PrivateScope, Public, HideBySig, SpecialName
    get_Vendor(): PrivateScope, Public, HideBySig, SpecialName
    set_Vendor(SfntTag): PrivateScope, Public, HideBySig, SpecialName
    get_Selection(): PrivateScope, Public, HideBySig, SpecialName
    set_Selection(SfntSelection): PrivateScope, Public, HideBySig, SpecialName
    get_FirstCharIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstCharIndex(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_LastCharIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_LastCharIndex(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_TypoAscender(): PrivateScope, Public, HideBySig, SpecialName
    set_TypoAscender(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_TypoDescender(): PrivateScope, Public, HideBySig, SpecialName
    set_TypoDescender(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_TypoLineGap(): PrivateScope, Public, HideBySig, SpecialName
    set_TypoLineGap(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_WinAscent(): PrivateScope, Public, HideBySig, SpecialName
    set_WinAscent(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_WinDescent(): PrivateScope, Public, HideBySig, SpecialName
    set_WinDescent(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_CodePageRange1(): PrivateScope, Public, HideBySig, SpecialName
    set_CodePageRange1(SfntCodePageRange1): PrivateScope, Public, HideBySig, SpecialName
    get_CodePageRange2(): PrivateScope, Public, HideBySig, SpecialName
    set_CodePageRange2(SfntCodePageRange2): PrivateScope, Public, HideBySig, SpecialName
    get_XHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_XHeight(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_CapHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_CapHeight(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultChar(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultChar(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_BreakChar(): PrivateScope, Public, HideBySig, SpecialName
    set_BreakChar(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MaxContext(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxContext(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_LowerOpticalPointSize(): PrivateScope, Public, HideBySig, SpecialName
    set_LowerOpticalPointSize(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_UpperOpticalPointSize(): PrivateScope, Public, HideBySig, SpecialName
    set_UpperOpticalPointSize(UInt16): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUnicodeEncodingID: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt16 Unicode1_0 = 0 : Public, Static, Literal, HasDefault
    UInt16 Unicode1_1 = 1 : Public, Static, Literal, HasDefault
    UInt16 ISO_IEC_10646 = 2 : Public, Static, Literal, HasDefault
    UInt16 Unicode_2_0_BmpOnly = 3 : Public, Static, Literal, HasDefault
    UInt16 Unicode_2_0_FullRepertoire = 4 : Public, Static, Literal, HasDefault
    UInt16 Unicode_Variation_Sequences = 5 : Public, Static, Literal, HasDefault
    UInt16 Unicode_Full_Repertoire = 6 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntMacintoshEncodingID: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt16 Roman = 0 : Public, Static, Literal, HasDefault
    UInt16 Japanese = 1 : Public, Static, Literal, HasDefault
    UInt16 Chinese_Traditional = 2 : Public, Static, Literal, HasDefault
    UInt16 Korean = 3 : Public, Static, Literal, HasDefault
    UInt16 Arabic = 4 : Public, Static, Literal, HasDefault
    UInt16 Hebrew = 5 : Public, Static, Literal, HasDefault
    UInt16 Greek = 6 : Public, Static, Literal, HasDefault
    UInt16 Russian = 7 : Public, Static, Literal, HasDefault
    UInt16 RSymbol = 8 : Public, Static, Literal, HasDefault
    UInt16 Devanagari = 9 : Public, Static, Literal, HasDefault
    UInt16 Gurmukhi = 10 : Public, Static, Literal, HasDefault
    UInt16 Gujarati = 11 : Public, Static, Literal, HasDefault
    UInt16 Oriya = 12 : Public, Static, Literal, HasDefault
    UInt16 Bengali = 13 : Public, Static, Literal, HasDefault
    UInt16 Tamil = 14 : Public, Static, Literal, HasDefault
    UInt16 Telugu = 15 : Public, Static, Literal, HasDefault
    UInt16 Kannada = 16 : Public, Static, Literal, HasDefault
    UInt16 Malayalam = 17 : Public, Static, Literal, HasDefault
    UInt16 Sinhalese = 18 : Public, Static, Literal, HasDefault
    UInt16 Burmese = 19 : Public, Static, Literal, HasDefault
    UInt16 Khmer = 20 : Public, Static, Literal, HasDefault
    UInt16 Thai = 21 : Public, Static, Literal, HasDefault
    UInt16 Laotian = 22 : Public, Static, Literal, HasDefault
    UInt16 Georgian = 23 : Public, Static, Literal, HasDefault
    UInt16 Armenian = 24 : Public, Static, Literal, HasDefault
    UInt16 Chinese_Simplified = 25 : Public, Static, Literal, HasDefault
    UInt16 Tibetan = 26 : Public, Static, Literal, HasDefault
    UInt16 Mongolian = 27 : Public, Static, Literal, HasDefault
    UInt16 Geez = 28 : Public, Static, Literal, HasDefault
    UInt16 Slavic = 29 : Public, Static, Literal, HasDefault
    UInt16 Vietnamese = 30 : Public, Static, Literal, HasDefault
    UInt16 Sindhi = 31 : Public, Static, Literal, HasDefault
    UInt16 Uninterpreted = 32 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntWindowsEncodingID: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt16 Symbol = 0 : Public, Static, Literal, HasDefault
    UInt16 Unicode_BMP = 1 : Public, Static, Literal, HasDefault
    UInt16 ShiftJIS = 2 : Public, Static, Literal, HasDefault
    UInt16 PRC = 3 : Public, Static, Literal, HasDefault
    UInt16 Big5 = 4 : Public, Static, Literal, HasDefault
    UInt16 Wansung = 5 : Public, Static, Literal, HasDefault
    UInt16 Johab = 6 : Public, Static, Literal, HasDefault
    UInt16 Unicode_Full_Repertoire = 10 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags Empty = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags BaselineForFontAt0 = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags LeftSidebearingPointAt0 = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags InstructionsMayDependOnPointSize = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags ForcePPEMToIntegerValues = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags InstructionsMayAlterAdvanceWidth = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags FontDataIsLossless = 2048 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags ProduceCompatibleMetrics = 4096 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags OptimizedForClearType = 8192 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags LastResort = 16384 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle Empty = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle Bold = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle Italic = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle Underline = 4 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle Outline = 8 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle Shadow = 16 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle Condensed = 32 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle Extended = 64 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntDirectionHint: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int16 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntDirectionHint FullyMixedDirectionalGlyphs = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntDirectionHint OnlyStronglyLeftToRight = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntDirectionHint OnlyStronglyLeftToRightButAlsoContainsNeutrals = 2 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntDirectionHint OnlyStronglyRightToLeft = -1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntDirectionHint OnlyStronglyRightToLeftButAlsoContainsNeutrals = -2 : Public, Static, Literal, HasDefault
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntIndexToLocFormat: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int16 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntIndexToLocFormat Short = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntIndexToLocFormat Long = 1 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 MajorVersion 'get set' : 
    UInt16 MinorVersion 'get set' : 
    Int32 FontRevision 'get set' : 
    UInt32 CheckSumAdjustment 'get set' : 
    UInt32 MagicNumber 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadFlags Flags 'get set' : 
    UInt16 UnitsPerEm 'get set' : 
    Int64 Created 'get set' : 
    Int64 Modified 'get set' : 
    Int16 XMin 'get set' : 
    Int16 YMin 'get set' : 
    Int16 XMax 'get set' : 
    Int16 YMax 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadMacStyle MacStyle 'get set' : 
    UInt16 LowestRecPPEM 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntDirectionHint FontDirectionHint 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntIndexToLocFormat IndexToLocFormat 'get set' : 
    Int16 GlyphDataFormat 'get set' : 
  Methods:
    get_MajorVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorVersion(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MinorVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorVersion(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_FontRevision(): PrivateScope, Public, HideBySig, SpecialName
    set_FontRevision(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CheckSumAdjustment(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckSumAdjustment(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_MagicNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_MagicNumber(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(SfntHeadFlags): PrivateScope, Public, HideBySig, SpecialName
    get_UnitsPerEm(): PrivateScope, Public, HideBySig, SpecialName
    set_UnitsPerEm(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Created(): PrivateScope, Public, HideBySig, SpecialName
    set_Created(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_Modified(): PrivateScope, Public, HideBySig, SpecialName
    set_Modified(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_XMin(): PrivateScope, Public, HideBySig, SpecialName
    set_XMin(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_YMin(): PrivateScope, Public, HideBySig, SpecialName
    set_YMin(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_XMax(): PrivateScope, Public, HideBySig, SpecialName
    set_XMax(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_YMax(): PrivateScope, Public, HideBySig, SpecialName
    set_YMax(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_MacStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MacStyle(SfntHeadMacStyle): PrivateScope, Public, HideBySig, SpecialName
    get_LowestRecPPEM(): PrivateScope, Public, HideBySig, SpecialName
    set_LowestRecPPEM(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_FontDirectionHint(): PrivateScope, Public, HideBySig, SpecialName
    set_FontDirectionHint(SfntDirectionHint): PrivateScope, Public, HideBySig, SpecialName
    get_IndexToLocFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_IndexToLocFormat(SfntIndexToLocFormat): PrivateScope, Public, HideBySig, SpecialName
    get_GlyphDataFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_GlyphDataFormat(Int16): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHheaTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTable
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 MajorVersion 'get set' : 
    UInt16 MinorVersion 'get set' : 
    Int16 Ascender 'get set' : 
    Int16 Descender 'get set' : 
    Int16 LineGap 'get set' : 
    UInt16 AdvanceWidthMax 'get set' : 
    Int16 MinLeftSideBearing 'get set' : 
    Int16 MinRightSideBearing 'get set' : 
    Int16 XMaxExtent 'get set' : 
    Int16 CaretSlopeRise 'get set' : 
    Int16 CaretSlopeRun 'get set' : 
    Int16 CaretOffset 'get set' : 
    Int16 MetricDataFormat 'get set' : 
    UInt16 NumberOfHMetrics 'get set' : 
  Methods:
    get_MajorVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorVersion(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MinorVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorVersion(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Ascender(): PrivateScope, Public, HideBySig, SpecialName
    set_Ascender(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Descender(): PrivateScope, Public, HideBySig, SpecialName
    set_Descender(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_LineGap(): PrivateScope, Public, HideBySig, SpecialName
    set_LineGap(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_AdvanceWidthMax(): PrivateScope, Public, HideBySig, SpecialName
    set_AdvanceWidthMax(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_MinLeftSideBearing(): PrivateScope, Public, HideBySig, SpecialName
    set_MinLeftSideBearing(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_MinRightSideBearing(): PrivateScope, Public, HideBySig, SpecialName
    set_MinRightSideBearing(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_XMaxExtent(): PrivateScope, Public, HideBySig, SpecialName
    set_XMaxExtent(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_CaretSlopeRise(): PrivateScope, Public, HideBySig, SpecialName
    set_CaretSlopeRise(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_CaretSlopeRun(): PrivateScope, Public, HideBySig, SpecialName
    set_CaretSlopeRun(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_CaretOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_CaretOffset(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_MetricDataFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_MetricDataFormat(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfHMetrics(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberOfHMetrics(UInt16): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Properties:
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Tag 'get ' : 
  Methods:
    Create(SfntTag, Byte[]): PrivateScope, Public, Static, HideBySig
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntFont: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Version 'get set' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntHeadTable Head 'get ' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntNameTable Name 'get ' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntOS2Table OS2 'get ' : 
  Methods:
    IsOpenType(Byte[]): PrivateScope, Public, Static, HideBySig
    IsTrueType(Byte[]): PrivateScope, Public, Static, HideBySig
    IsTrueTypeCollection(Byte[]): PrivateScope, Public, Static, HideBySig
    Parse(Byte[], Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetFontFileCount(Stream): PrivateScope, Public, Static, HideBySig
    ParseAll(Byte[]): PrivateScope, Public, Static, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    set_Version(SfntTag): PrivateScope, Public, HideBySig, SpecialName
    get_Head(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_OS2(): PrivateScope, Public, HideBySig, SpecialName
    HasTable(SfntTag): PrivateScope, Public, HideBySig
    GetTable(SfntTag): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, HideBySig, SpecialName
    ReadTag(): PrivateScope, Public, HideBySig
    ReadByte(): PrivateScope, Public, HideBySig
    ReadShort(): PrivateScope, Public, HideBySig
    ReadUShort(): PrivateScope, Public, HideBySig
    ReadUInt(): PrivateScope, Public, HideBySig
    ReadInt(): PrivateScope, Public, HideBySig
    ReadLong(): PrivateScope, Public, HideBySig
    ReadArray(Int32): PrivateScope, Public, HideBySig
    Read24BitInt(): PrivateScope, Public, HideBySig
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntParsingErrorType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntParsingErrorType UnknownVersion = 0 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntParsingErrorType UnexpectedEndOfStream = 1 : Public, Static, Literal, HasDefault
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntParsingErrorType TTCIndexIsGreaterThanFontCount = 2 : Public, Static, Literal, HasDefault
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntParseException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Exception
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntParsingErrorType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Sfnt.SfntParsingErrorType, DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag] ErrorTag 'get ' : 
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntParsingErrorType ErrorType 'get ' : 
  Methods:
    get_ErrorTag(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorType(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntStreamWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, HideBySig, SpecialName
    WriteByte(Byte): PrivateScope, Public, HideBySig
    WriteTag(SfntTag): PrivateScope, Public, HideBySig
    WriteShort(Int16): PrivateScope, Public, HideBySig
    WriteUShort(UInt16): PrivateScope, Public, HideBySig
    WriteUInt(UInt32): PrivateScope, Public, HideBySig
    WriteInt(Int32): PrivateScope, Public, HideBySig
    Write24BitInt(Int32): PrivateScope, Public, HideBySig
    WriteLong(Int64): PrivateScope, Public, HideBySig
    WriteArray(Byte[]): PrivateScope, Public, HideBySig
    WriteShortArray(Int16[]): PrivateScope, Public, HideBySig
    WriteString(String): PrivateScope, Public, HideBySig
    Align(): PrivateScope, Public, HideBySig
    GetData(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTags: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag TrueTypeVersion : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag OpenTypeVersion : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag TrueTypeCollectionVersion : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Head : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag HHea : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Hmtx : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Kern : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Glyf : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Name : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag EBLC : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag OS2 : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Maxp : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Cmap : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Cvt : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag VDMX : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Hdmx : Public, Static, InitOnly
    DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag Loca : Public, Static, InitOnly
Struct DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag]
    System.IComparable`1[DevExpress.Drawing.Internal.Fonts.Sfnt.SfntTag]
  Properties:
    Byte A     'get ' : 
    Byte B     'get ' : 
    Byte C     'get ' : 
    Byte D     'get ' : 
  Methods:
    op_Equality(SfntTag, SfntTag): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(SfntTag, SfntTag): PrivateScope, Public, Static, HideBySig, SpecialName
    Create(String): PrivateScope, Public, Static, HideBySig
    Create(Byte[]): PrivateScope, Public, Static, HideBySig
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    get_C(): PrivateScope, Public, HideBySig, SpecialName
    get_D(): PrivateScope, Public, HideBySig, SpecialName
    ToUIntInverted(): PrivateScope, Public, HideBySig
    ToUInt(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(SfntTag): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    CompareTo(SfntTag): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.Sfnt.SfntUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CalcChecksum(Byte[]): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteTextAnalyzer TextAnalyzer 'get ' : 
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFactory Factory 'get ' : 
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFontFallback FontFallback 'get ' : 
  Methods:
    get_TextAnalyzer(): PrivateScope, Public, HideBySig, SpecialName
    get_Factory(): PrivateScope, Public, HideBySig, SpecialName
    get_FontFallback(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteAnalysisSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.DirectX.NativeInterop.CCW.ComCallableWrapperBase
  Interfaces:
    DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteTextAnalysisSourceCCW
    DevExpress.DirectX.NativeInterop.CCW.IComCallableWrapper`1[DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteTextAnalysisSourceCCW]
  Properties:
    Int32 Length 'get ' : 
  Methods:
    Create(String, Int32, Int32, Boolean): PrivateScope, Public, Static, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetLocalizedString(DWriteLocalizedStrings, String): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteShapingExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToDXBreakpoint(DWRITE_LINE_BREAKPOINT): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DXFontFace
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteFontFamily, DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFont1): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FamilyName 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontMetrics Metrics 'get ' : 
    Byte[] Panose 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontSimulations Simulations 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Stretch 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Slant 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Weight 'get ' : 
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFontFace FontFace 'get ' : 
    Boolean IsComplexScript 'get ' : 
    Boolean IsCjk 'get ' : 
  Methods:
    get_FamilyName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Metrics(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Panose(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Simulations(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Stretch(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Slant(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FontFace(): PrivateScope, Public, HideBySig, SpecialName
    get_IsComplexScript(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsCjk(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetFontFile(): PrivateScope, Public, Virtual, HideBySig
    GetWin32FamilyName(): PrivateScope, Public, Virtual, HideBySig
    GetFontCharacterRanges(): PrivateScope, Public, Virtual, HideBySig
    MeasureString(String, Single): PrivateScope, Public, Virtual, HideBySig
    MeasureCharacterWidth(Char, Single): PrivateScope, Public, Virtual, HideBySig
    CreateShaper(IDXFontFallback(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    HasCharacters(StringView): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteFontCollection: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXFontCollection
    System.IDisposable
    DevExpress.Drawing.Internal.Fonts.IDXWin32FontCollection`1[DevExpress.Drawing.Internal.Fonts.DXWin32Font]
    DevExpress.Drawing.Internal.Fonts.DirectWrite.IDirectWriteFontCollection
  Properties:
    DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteContext Context 'get ' : 
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFontCollection Collection 'get ' : 
  Methods:
    get_Context(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Collection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MatchFaceByWin32Name(String, DXFontStyle): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindFamily(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFontsInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteFontEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DXFontEngine
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateFontData(Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateFontData(String): PrivateScope, Public, Virtual, HideBySig
    GetFallbackFont(StringView, DXFontDescriptor): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteFontFamily: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DirectWrite.IDirectWriteFontCollection, DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFontFamily): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXFontFamily
    System.IDisposable
  Properties:
    DevExpress.Drawing.Internal.Fonts.DirectWrite.IDirectWriteFontCollection Collection 'get ' : 
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFontFamily NativeFamily 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_Collection(): PrivateScope, Public, HideBySig, SpecialName
    get_NativeFamily(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateTextFormat(DWriteFont, Single): PrivateScope, Public, HideBySig
    GetFirstMatchingFontFace(DXFontWeight, DXFontStretch, DXFontStyleSlant): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteShaper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DXShaper`1[DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteTextRun]
    Void .ctor(DevExpress.DirectX.NativeInterop.DirectWrite.DWriteTextAnalyzer, DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteFont, DevExpress.Drawing.Internal.Fonts.IDXFontFallback, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FontHasCharacters(StringView): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWritePrivateFontCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteFontCollection
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteContext, DevExpress.Drawing.Internal.Fonts.DirectWriteFontProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDirectWriteFontProviderListener
    DevExpress.Drawing.Internal.Fonts.IDXPrivateFontCollection
  Properties:
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFontCollection Collection 'get ' : 
  Methods:
    get_Collection(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig
    AddFont(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteSystemFontCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteFontCollection
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteContext, DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFontCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFontCollection Collection 'get ' : 
  Methods:
    get_Collection(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.DirectWrite.IDirectWriteFontCollection: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteContext Context 'get ' : 
    DevExpress.DirectX.NativeInterop.DirectWrite.DWriteFontCollection Collection 'get ' : 
  Methods:
    get_Context(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Collection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteTextAnalysis: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.DirectX.NativeInterop.CCW.ComCallableWrapperBase
  Interfaces:
    DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteTextAnalysisSinkCCW
    DevExpress.DirectX.NativeInterop.CCW.IComCallableWrapper`1[DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteTextAnalysisSinkCCW]
  Properties:
    System.Collections.Generic.LinkedList`1[DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteTextRun] Runs 'get ' : 
    DevExpress.DirectX.Common.DirectWrite.DWRITE_LINE_BREAKPOINT[] Breakpoints 'get ' : 
  Methods:
    GetRuns(DWriteTextAnalyzer, String, Boolean): PrivateScope, Public, Static, HideBySig
    get_Runs(): PrivateScope, Public, HideBySig, SpecialName
    get_Breakpoints(): PrivateScope, Assembly, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteTextRun: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DXTextAnalysisRun`1[DevExpress.Drawing.Internal.Fonts.DirectWrite.DirectWriteTextRun]
    Void .ctor(System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DevExpress.DirectX.Common.DirectWrite.DWRITE_SCRIPT_ANALYSIS Script 'get set' : 
    DevExpress.DirectX.Common.DirectWrite.DWRITE_LINE_BREAKPOINT[] Breakpoints 'get set' : 
  Methods:
    get_Script(): PrivateScope, Public, HideBySig, SpecialName
    get_Breakpoints(): PrivateScope, Public, HideBySig, SpecialName
    set_Breakpoints(DWRITE_LINE_BREAKPOINT[]): PrivateScope, Public, HideBySig, SpecialName
    GetBreakpoint(Int32): PrivateScope, Public, Virtual, HideBySig
    SetScript(DWRITE_SCRIPT_ANALYSIS): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.CCW.DirectWriteFileFontFileStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DirectWrite.CCW.DirectWriteFontFileStream
  Methods:
    Create(String): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.CCW.DirectWriteFontCollectionLoader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.DirectX.NativeInterop.CCW.ComCallableWrapperBase
  Interfaces:
    DevExpress.DirectX.NativeInterop.CCW.IComCallableWrapper`1[DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteFontCollectionLoaderCCW]
    DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteFontCollectionLoaderCCW
  Properties:
    IntPtr NativeObject 'get ' : 
  Methods:
    Create(IList`1): PrivateScope, Public, Static, HideBySig
    get_NativeObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateEnumeratorFromKey(DWriteFactory, IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.CCW.DirectWriteFontFileEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.DirectX.NativeInterop.CCW.ComCallableWrapperBase
  Interfaces:
    DevExpress.DirectX.NativeInterop.CCW.IComCallableWrapper`1[DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteFontFileEnumeratorCCW]
    DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteFontFileEnumeratorCCW
  Properties:
    IntPtr NativeObject 'get ' : 
  Methods:
    Create(IEnumerator`1): PrivateScope, Public, Static, HideBySig
    get_NativeObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(Int32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetCurrentFontFile(IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.CCW.DirectWriteFontFileLoader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.DirectX.NativeInterop.CCW.ComCallableWrapperBase
  Interfaces:
    DevExpress.DirectX.NativeInterop.CCW.IComCallableWrapper`1[DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteFontFileLoaderCCW]
    DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteFontFileLoaderCCW
  Properties:
    System.Collections.Generic.IEnumerable`1[System.Int32] FontFileKeys 'get ' : 
    Int32 Count 'get set' : 
    IntPtr NativeObject 'get ' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    get_FontFileKeys(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_NativeObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateStreamFromKey(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
    Add(ICCWWrapper`1): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.CCW.DirectWriteFontFileStream: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :DevExpress.DirectX.NativeInterop.CCW.ComCallableWrapperBase
  Interfaces:
    DevExpress.DirectX.NativeInterop.CCW.IComCallableWrapper`1[DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteFontFileStreamCCW]
    DevExpress.DirectX.NativeInterop.DirectWrite.CCW.IDWriteFontFileStreamCCW
  Properties:
    IntPtr NativeObject 'get ' : 
  Methods:
    get_NativeObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReadFileFragment(IntPtr&(Out), Int64, Int64, IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReleaseFileFragment(IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFileSize(Int64&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetLastWriteTime(Int64&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.DirectWrite.CCW.DirectWriteInMemoryFontFileStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DirectWrite.CCW.DirectWriteFontFileStream
  Methods:
    Create(Byte[]): PrivateScope, Public, Static, HideBySig
Interface DevExpress.Drawing.Internal.Fonts.CrossPlatform.IDXTextAnalyzer`1[TRun]: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Type parameter: TRun, DevExpress.Drawing.Internal.Fonts.IDXTextBufferRun`1[TRun]
  Methods:
    Analyze(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformTextAnalyzer: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.CrossPlatform.IDXTextAnalyzer`1[DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformTextRun]
  Properties:
    DevExpress.Drawing.Internal.Fonts.CrossPlatform.IDXTextAnalyzer`1[DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformTextRun] Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    Analyze(String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformTextRun: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DXTextAnalysisRun`1[DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformTextRun]
    Void .ctor(System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Script 'get set' : 
    DevExpress.Drawing.Internal.Fonts.DXLineBreakpoint[] Breakpoints 'get set' : 
  Methods:
    get_Script(): PrivateScope, Public, HideBySig, SpecialName
    set_Script(String): PrivateScope, Public, HideBySig, SpecialName
    get_Breakpoints(): PrivateScope, Public, HideBySig, SpecialName
    set_Breakpoints(DXLineBreakpoint[]): PrivateScope, Public, HideBySig, SpecialName
    GetBreakpoint(Int32): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.HarfBuzzNativeShaper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.CrossPlatform.FreeTypeFontFace, DevExpress.Drawing.Internal.Fonts.Interop.hb_font_t, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.CrossPlatform.ICrossPlatformShaper
    System.IDisposable
  Methods:
    ShapeRun(CrossPlatformTextRun, Single, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface DevExpress.Drawing.Internal.Fonts.CrossPlatform.ICrossPlatformShaper: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    ShapeRun(CrossPlatformTextRun, Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformBidiAnalyzer: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetBidiRuns(String, Boolean): PrivateScope, Public, Static, HideBySig
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformFontEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DXFontEngine
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateFontData(Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateFontData(String): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformMeasurer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Interop.hb_font_t, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    MeasureSingleLineString(String): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformPrivateFontCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.CrossPlatformFontProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXPrivateFontCollection
    DevExpress.Drawing.Internal.Fonts.IDXFontCollection
    System.IDisposable
  Properties:
    System.Collections.Generic.IEnumerable`1[DevExpress.Drawing.Internal.Fonts.IDXFontFamily] Families 'get ' : 
  Methods:
    get_Families(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetFontsInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindFamily(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MatchFaceByWin32Name(String, DXFontStyle): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddFont(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformShaper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DXShaper`1[DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformTextRun]
    Void .ctor(DevExpress.Drawing.Internal.Fonts.DXFontFace, DevExpress.Drawing.Internal.Fonts.CrossPlatform.IDXTextAnalyzer`1[DevExpress.Drawing.Internal.Fonts.CrossPlatform.CrossPlatformTextRun], DevExpress.Drawing.Internal.Fonts.CrossPlatform.ICrossPlatformShaper, DevExpress.Drawing.Internal.Fonts.IDXFontFallback, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    FontHasCharacters(StringView): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.FontConfigFontCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXFontCollection
    System.IDisposable
    DevExpress.Drawing.Internal.Fonts.IDXWin32FontCollection`1[DevExpress.Drawing.Internal.Fonts.CrossPlatform.FontConfigFont]
  Properties:
    System.Collections.Generic.IEnumerable`1[DevExpress.Drawing.Internal.Fonts.IDXFontFamily] Families 'get ' : 
  Methods:
    CreateSystemFontCollection(): PrivateScope, Public, Static, HideBySig
    get_Families(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FindFamily(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MatchFaceByWin32Name(String, DXFontStyle): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFontsInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.FontConfigFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Interop.FcPattern): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IFontFace
    System.IDisposable
  Properties:
    System.String FamilyName 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Stretch 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Slant 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Weight 'get ' : 
    System.String FontFilePath 'get ' : 
    Int32 Index 'get ' : 
  Methods:
    get_FamilyName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Stretch(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Slant(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Weight(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FontFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.FontConfigFontFamily: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, DevExpress.Drawing.Internal.Fonts.CrossPlatform.FontConfigFont[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXFontFamily
    System.IDisposable
  Properties:
    System.String Name 'get ' : 
    System.Collections.Generic.IEnumerable`1[DevExpress.Drawing.Internal.Fonts.CrossPlatform.FontConfigFont] Fonts 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Fonts(): PrivateScope, Public, HideBySig, SpecialName
    GetFirstMatchingFontFace(DXFontWeight, DXFontStretch, DXFontStyleSlant): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.FreeTypeFontFace: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.Internal.Fonts.DXFontFace
    Void .ctor(DevExpress.Drawing.Internal.Fonts.CrossPlatform.FontConfigFont, DevExpress.Drawing.Internal.Fonts.DXFontSimulations): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.Fonts.CrossPlatform.FreeTypeFontFace, DevExpress.Drawing.Internal.Fonts.DXFontSimulations): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(DevExpress.Drawing.Internal.Fonts.Interop.IFontFileData, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IFontFace
  Properties:
    System.String FamilyName 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontWeight Weight 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStretch Stretch 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontStyleSlant Slant 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontSimulations Simulations 'get ' : 
    Byte[] Panose 'get ' : 
    DevExpress.Drawing.Internal.Fonts.DXFontMetrics Metrics 'get ' : 
    Int32 NumFaces 'get ' : 
    Int32 TtcIndex 'get ' : 
    Boolean IsComplexScript 'get ' : 
    Boolean IsCjk 'get ' : 
  Methods:
    get_FamilyName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Stretch(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Slant(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Simulations(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Panose(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Metrics(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NumFaces(): PrivateScope, Public, HideBySig, SpecialName
    get_TtcIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_IsComplexScript(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsCjk(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetFontCharacterRanges(): PrivateScope, Public, Virtual, HideBySig
    GetFontFile(): PrivateScope, Public, Virtual, HideBySig
    MeasureCharacterWidth(Char, Single): PrivateScope, Public, Virtual, HideBySig
    MeasureString(String, Single): PrivateScope, Public, Virtual, HideBySig
    CreateShaper(IDXFontFallback(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    HasCharacters(StringView): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
    GetWin32FamilyName(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.Internal.Fonts.CrossPlatform.FreeTypeFontFamily: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, DevExpress.Drawing.Internal.Fonts.CrossPlatform.FreeTypeFontFace): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.Fonts.IDXFontFamily
    System.IDisposable
  Properties:
    System.String Name 'get ' : 
    System.Collections.Generic.IEnumerable`1[DevExpress.Drawing.Internal.Fonts.CrossPlatform.FreeTypeFontFace] Faces 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Faces(): PrivateScope, Public, HideBySig, SpecialName
    GetFirstMatchingFontFace(DXFontWeight, DXFontStretch, DXFontStyleSlant): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddFontFace(FreeTypeFontFace): PrivateScope, Public, HideBySig
    GetFontsInfo(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusJustifiedStringPainter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :DevExpress.Drawing.GdiPlus.Internal.GdiPlusJustifiedStringPainterBase
    Void .ctor(DevExpress.Drawing.Internal.GdiPlusGraphics, System.String, System.Drawing.RectangleF, DevExpress.Drawing.DXFont, DevExpress.Drawing.DXBrush, DevExpress.Drawing.DXStringFormat, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    DrawString(GdiPlusGraphics, String, DXFont, DXBrush, RectangleF, DXStringFormat, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusJustifiedStringPainterBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusPlatformFont: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Drawing.Font): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXPlatformFont
    System.IDisposable
  Properties:
    System.String Name 'get ' : 
    Single Height 'get ' : 
    Single Ascent 'get ' : 
    Single Descent 'get ' : 
    Single LineSpacing 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ascent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Descent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineSpacing(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusGraphicsPath: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(DevExpress.Drawing.DXFillMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF], System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType], DevExpress.Drawing.DXFillMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Drawing2D.GraphicsPath): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXGraphicsPath
    System.IDisposable
  Properties:
    Int32 PointCount 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[System.Drawing.PointF] PathPoints 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[DevExpress.Drawing.DXPathPointType] PathTypes 'get ' : 
    DevExpress.Drawing.DXFillMode FillMode 'get set' : 
  Methods:
    Unwrap(IDXGraphicsPath): PrivateScope, Public, Static, HideBySig
    Wrap(GraphicsPath): PrivateScope, Public, Static, HideBySig
    get_PointCount(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PathPoints(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PathTypes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FillMode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FillMode(DXFillMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddLine(Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddLine(PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddLines(IReadOnlyList`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddLines(IReadOnlyList`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddArc(RectangleF, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddArc(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddBezier(PointF, PointF, PointF, PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddBeziers(IReadOnlyList`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddCurve(PointF[], Single(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddPolygon(IReadOnlyList`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddRectangle(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddRectangles(IReadOnlyList`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddEllipse(Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddEllipse(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddPie(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddPie(Rectangle, Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddPath(DXGraphicsPath, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddString(String, DXFont, PointF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddString(String, DXFont, RectangleF, DXStringFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Widen(DXPen): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Widen(DXPen, DXMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StartFigure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseFigure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Transform(DXMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetBounds(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsVisible(PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flatten(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flatten(DXMatrix, Single(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WindingOutline(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusImage: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    System.Lazy`1[System.Drawing.Imaging.ImageCodecInfo] TiffCodec : Assembly, Static
    System.Lazy`1[System.Drawing.Imaging.ImageCodecInfo] JpegCodec : Assembly, Static
  Methods:
    GetTiffCompressionEncoder(DXTiffImageFormatOptions): PrivateScope, Assembly, Static, HideBySig
    SaveToJpeg(Image, Stream, DXJpegImageFormatOptions): PrivateScope, Assembly, Static, HideBySig
    SaveToIco(Image, Stream): PrivateScope, Assembly, Static, HideBySig
    Wrap(Image): PrivateScope, Public, Static, HideBySig
    Unwrap(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Equals(IDXImage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusMetafile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.GdiPlus.Internal.GdiPlusImage
    Void .ctor(System.Drawing.Imaging.Metafile): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXMetafile
    DevExpress.Drawing.Internal.IDXImage
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXImage]
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXMetafile]
  Properties:
    System.Drawing.SizeF PhysicalDimension 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions ImageFormatOptions 'get ' : 
    DevExpress.Drawing.Internal.DXMetafileHeader Header 'get ' : 
    Single HorizontalResolution 'get ' : 
    Single VerticalResolution 'get ' : 
    Int32 NumberOfFrames 'get ' : 
    System.Object NativeImage 'get ' : 
    DevExpress.Drawing.Internal.DXImageProperties ImageProperties 'get ' : 
  Methods:
    Wrap(Metafile): PrivateScope, Public, Static, HideBySig
    get_PhysicalDimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageFormatOptions(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Header(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VerticalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberOfFrames(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NativeImage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormatOptions): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToEmfMetafileModel(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Unwrap(Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Equals(IDXMetafile): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateGraphics(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsDisposedOrInvalid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiMultiPageTiffBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream, DevExpress.Drawing.Internal.DXTiffImageFormatOptions, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IMultiPageTiffBuilder
    System.IDisposable
  Methods:
    AppendPage(DXBitmap): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusBitmap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :DevExpress.Drawing.GdiPlus.Internal.GdiPlusImage
    Void .ctor(System.Drawing.Bitmap, DevExpress.Drawing.Internal.DXPixelFormat, DevExpress.Drawing.Internal.DXPalette): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Bitmap): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXBitmap
    DevExpress.Drawing.Internal.IDXImage
    System.IDisposable
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXImage]
    System.IEquatable`1[DevExpress.Drawing.Internal.IDXBitmap]
  Properties:
    System.Drawing.SizeF PhysicalDimension 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    System.Object NativeImage 'get ' : 
    DevExpress.Drawing.Internal.DXImageFormatOptions ImageFormatOptions 'get ' : 
    DevExpress.Drawing.Internal.DXPixelFormat PixelFormat 'get ' : 
    DevExpress.Drawing.Internal.DXPalette Palette 'get ' : 
    Boolean CanGetPixels 'get ' : 
    Int32 NumberOfFrames 'get ' : 
    Single HorizontalResolution 'get ' : 
    Single VerticalResolution 'get ' : 
    DevExpress.Drawing.Internal.DXImageProperties ImageProperties 'get ' : 
  Methods:
    Wrap(Bitmap): PrivateScope, Public, Static, HideBySig
    get_PhysicalDimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NativeImage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageFormatOptions(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PixelFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Palette(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanGetPixels(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberOfFrames(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VerticalResolution(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Convert(DXPixelFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ConvertToJpeg(Stream, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetBitmapData(Rectangle, DXImageLockMode, DXPixelFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetResolution(Single, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormatOptions): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream, DXImageFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Crop(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Unwrap(Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetPixel(Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(IDXBitmap): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    RotateFlip(DXRotateFlipType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateGraphics(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsDisposedOrInvalid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusBitmapData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.Bitmap, System.Drawing.Rectangle, DevExpress.Drawing.Internal.DXImageLockMode, DevExpress.Drawing.Internal.DXPixelFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXBitmapData
    System.IDisposable
  Properties:
    Int32 RowBytes 'get ' : 
    IntPtr DataPointer 'get ' : 
    Int32 Height 'get ' : 
  Methods:
    get_RowBytes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DataPointer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusRegion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.Region): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXRegion
    System.IDisposable
  Methods:
    Unwrap(DXRegion): PrivateScope, Public, Static, HideBySig
    Wrap(Region): PrivateScope, Public, Static, HideBySig
    Intersect(IDXRegion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Intersect(DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Intersect(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Union(IDXRegion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Union(DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Union(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Complement(IDXRegion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Complement(DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Complement(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Exclude(IDXRegion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Exclude(DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Exclude(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Xor(IDXRegion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Xor(DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Xor(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MakeEmpty(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MakeInfinite(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetBounds(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsVisible(PointF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsVisible(Rectangle): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Transform(DXMatrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetData(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.GdiPlusGraphicsObjectsFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    DevExpress.Drawing.Internal.IDXGraphicsObjectsFactory
  Properties:
    DevExpress.Drawing.Internal.DXDrawingBackend Backend 'get ' : 
  Methods:
    get_Backend(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateRegion(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateRegion(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateRegion(DXGraphicsPath): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateRegion(DXRegionDataNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateGraphicsPath(DXFillMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateGraphicsPath(IReadOnlyList`1, IReadOnlyList`1, DXFillMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateImage(Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateBitmap(Int32, Int32, Int32, PixelFormat, Color[], Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateBitmap(Int32, Int32, Int32, DXPixelFormat, DXPalette, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateBitmap(Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateBitmap(Int32, Int32, DXPixelFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateMetafile(Size, DXMetafileFrameUnit, DXEmfType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateMetafile(Stream, Size, DXMetafileFrameUnit, DXEmfType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateMeasurer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreatePlatformFont(DXFont): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateMultiPageTiffBuilder(Stream, DXTiffImageFormatOptions, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateFontEngine(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ApplyWorkarounds(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.GdiPlus.Internal.Interop.GdiPlusInterop: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GdipWindingModeOutline(IntPtr, IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class DevExpress.Drawing.GdiPlus.Internal.Interop.Gdi32Interop: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetEnhMetaFileBits(IntPtr, UInt32, Byte[](Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetMetaFileBitsEx(IntPtr, UInt32, Byte[](Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    DeleteEnhMetaFile(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    DeleteMetaFile(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class DevExpress.Utils.Design.DXFontTypeConverter+DXFontNameConverter: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    GetStandardValues(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetStandardValuesExclusive(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetStandardValuesSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
Class DevExpress.Utils.Design.DXFontTypeConverter+DXFontDXUnitConverter: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :DevExpress.Utils.Design.EnumTypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetStandardValues(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
Struct DevExpress.Drawing.Compatibility.Internal.Span`1+Enumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(DevExpress.Drawing.Compatibility.Internal.Span`1[T]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    T Current  'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Printing.Internal.DXPageSizeInfo+PageSize: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.Drawing.SizeF, DevExpress.Drawing.DXGraphicsUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.SizeF Size 'get ' : 
    DevExpress.Drawing.DXGraphicsUnit Unit 'get ' : 
    Single Dpi 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Unit(): PrivateScope, Public, HideBySig, SpecialName
    get_Dpi(): PrivateScope, Public, HideBySig, SpecialName
    GetPageSize(Single): PrivateScope, Public, HideBySig
    GetPageSize(DXGraphicsUnit): PrivateScope, Public, HideBySig
Class DevExpress.Drawing.Internal.PathDetector+EllipseInfo: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.Drawing.PointF, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF Center 'get ' : 
    Single RadiusX 'get ' : 
    Single RadiusY 'get ' : 
    Single AngleRadians 'get ' : 
    Boolean IsCircle 'get ' : 
  Methods:
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    get_RadiusX(): PrivateScope, Public, HideBySig, SpecialName
    get_RadiusY(): PrivateScope, Public, HideBySig, SpecialName
    get_AngleRadians(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCircle(): PrivateScope, Public, HideBySig, SpecialName
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffClientStream+ReadDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffClientStream+WriteDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffClientStream+SeekDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, UInt32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, UInt32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffClientStream+CloseDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffClientStream+SizeDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffClientStream+MapDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, UInt32&(Out), AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(UInt32&(Out), IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class DevExpress.Drawing.Internal.Images.Tiff.Interop.TiffClientStream+UnmapDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct DevExpress.Drawing.Internal.Fonts.DXFontMetrics+Builder: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 UnitsPerEm 'get set' : 
    Int32 EmAscent 'get set' : 
    Int32 EmDescent 'get set' : 
    Int32 EmLineSpacing 'get set' : 
    Int32 UnderlinePosition 'get set' : 
    Int32 UnderlineSize 'get set' : 
    Int32 StrikeoutPosition 'get set' : 
    Int32 StrikeoutSize 'get set' : 
    System.Drawing.Size SubscriptSize 'get set' : 
    System.Drawing.Point SuperscriptOffset 'get set' : 
    System.Drawing.Point SubscriptOffset 'get set' : 
    System.Drawing.Size SuperscriptSize 'get set' : 
    Boolean HasTypoMetrics 'get set' : 
  Methods:
    get_UnitsPerEm(): PrivateScope, Public, HideBySig, SpecialName
    set_UnitsPerEm(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EmAscent(): PrivateScope, Public, HideBySig, SpecialName
    set_EmAscent(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EmDescent(): PrivateScope, Public, HideBySig, SpecialName
    set_EmDescent(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EmLineSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_EmLineSpacing(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UnderlinePosition(): PrivateScope, Public, HideBySig, SpecialName
    set_UnderlinePosition(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UnderlineSize(): PrivateScope, Public, HideBySig, SpecialName
    set_UnderlineSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StrikeoutPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_StrikeoutPosition(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StrikeoutSize(): PrivateScope, Public, HideBySig, SpecialName
    set_StrikeoutSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SubscriptSize(): PrivateScope, Public, HideBySig, SpecialName
    set_SubscriptSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_SuperscriptOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_SuperscriptOffset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_SubscriptOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_SubscriptOffset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_SuperscriptSize(): PrivateScope, Public, HideBySig, SpecialName
    set_SuperscriptSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_HasTypoMetrics(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTypoMetrics(Boolean): PrivateScope, Public, HideBySig, SpecialName
